using AdaPos.Models.Database;
using AdaPos.Models.DatabaseTmp;
using AdaPos.Models.Other;
using AdaPos.Models.RabbitMQ;
using AdaPos.Models.Webservice.Required;
using AdaPos.Models.Webservice.Respond;
using AdaPos.Models.Webservice.Respond.AdMsg;
using AdaPos.Models.Webservice.Respond.Area;
using AdaPos.Models.Webservice.Respond.Bank;
using AdaPos.Models.Webservice.Respond.Banknote;
using AdaPos.Models.Webservice.Respond.Branch;
using AdaPos.Models.Webservice.Respond.Card;
using AdaPos.Models.Webservice.Respond.CardCouponList;
using AdaPos.Models.Webservice.Respond.CardType;
using AdaPos.Models.Webservice.Respond.Company;
using AdaPos.Models.Webservice.Respond.Cost;
using AdaPos.Models.Webservice.Respond.Coupon;
using AdaPos.Models.Webservice.Respond.CreditCard;
using AdaPos.Models.Webservice.Respond.Customer;
using AdaPos.Models.Webservice.Respond.CustomerAddress;
using AdaPos.Models.Webservice.Respond.CustomerGroup;
using AdaPos.Models.Webservice.Respond.CustomerLevel;
using AdaPos.Models.Webservice.Respond.CustomerOccupation;
using AdaPos.Models.Webservice.Respond.CustomerType;
using AdaPos.Models.Webservice.Respond.District;
using AdaPos.Models.Webservice.Respond.Download;
using AdaPos.Models.Webservice.Respond.Events;
using AdaPos.Models.Webservice.Respond.Function;
using AdaPos.Models.Webservice.Respond.Merchant;
using AdaPos.Models.Webservice.Respond.Pos;
using AdaPos.Models.Webservice.Respond.Product;
using AdaPos.Models.Webservice.Respond.ProductBrand;
using AdaPos.Models.Webservice.Respond.ProductColor;
using AdaPos.Models.Webservice.Respond.ProductFashion;
using AdaPos.Models.Webservice.Respond.ProductFashionClass;
using AdaPos.Models.Webservice.Respond.ProductFashionDCS;
using AdaPos.Models.Webservice.Respond.ProductFashionDepart;
using AdaPos.Models.Webservice.Respond.ProductFashionSeason;
using AdaPos.Models.Webservice.Respond.ProductFashionSubClass;
using AdaPos.Models.Webservice.Respond.ProductGroup;
using AdaPos.Models.Webservice.Respond.ProductModel;
using AdaPos.Models.Webservice.Respond.ProductNoSaleByEvent;
using AdaPos.Models.Webservice.Respond.ProductPrice;
using AdaPos.Models.Webservice.Respond.ProductPriceList;
using AdaPos.Models.Webservice.Respond.ProductPromotion;
using AdaPos.Models.Webservice.Respond.ProductPromotionGroup;
using AdaPos.Models.Webservice.Respond.ProductRental;
using AdaPos.Models.Webservice.Respond.ProductSize;
using AdaPos.Models.Webservice.Respond.ProductTouchGroup;
using AdaPos.Models.Webservice.Respond.ProductType;
using AdaPos.Models.Webservice.Respond.ProductUnit;
using AdaPos.Models.Webservice.Respond.Province;
using AdaPos.Models.Webservice.Respond.Rate;
using AdaPos.Models.Webservice.Respond.Reason;
using AdaPos.Models.Webservice.Respond.Receive;
using AdaPos.Models.Webservice.Respond.RedeemPoint;
using AdaPos.Models.Webservice.Respond.Role;
using AdaPos.Models.Webservice.Respond.SalePerson;
using AdaPos.Models.Webservice.Respond.Shop;
using AdaPos.Models.Webservice.Respond.SlipMsg;
using AdaPos.Models.Webservice.Respond.SubDistrict;
using AdaPos.Models.Webservice.Respond.Supplier;
using AdaPos.Models.Webservice.Respond.SupplierAddress;
using AdaPos.Models.Webservice.Respond.SupplierContact;
using AdaPos.Models.Webservice.Respond.SupplierGroup;
using AdaPos.Models.Webservice.Respond.SupplierLevel;
using AdaPos.Models.Webservice.Respond.SupplierShipVia;
using AdaPos.Models.Webservice.Respond.SupplierType;
using AdaPos.Models.Webservice.Respond.System;
using AdaPos.Models.Webservice.Respond.User;
using AdaPos.Models.Webservice.Respond.UserDepart;
using AdaPos.Models.Webservice.Respond.UserRole;
using AdaPos.Models.Webservice.Respond.VatRate;
using AdaPos.Models.Webservice.Respond.Voucher;
using AdaPos.Models.Webservice.Respond.Warehouse;
using AdaPos.Models.Webservice.Respond.Zone;
using AdaPos.Resources_String.Local;
using Dapper;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Data.OleDb;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Resources;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using AdaPos.Models.Webservice.Respond.TxnAPI;
using AdaPos.Models.Webservice.Respond.Interface;

namespace AdaPos.Class
{
    public class cSyncData
    {
        #region Variable

        private ResourceManager oC_ResourceEN;
        private ResourceManager oC_ResourceTH;
        private cSP oC_SP;
        private string tC_Date;

        #endregion End Variable

        #region Constructor

        public cSyncData()
        {
            oC_SP = new cSP();
        }

        #endregion End  Constructor

        #region Function / Method

        /// <summary>
        /// Process Sync download
        /// </summary>
        /// Net 63-05-20 Procress Download Background ส่ง Method อัพเดต progress และ Success มาด้วย
        public void C_PRCxSyncDwn(List<cmlTSysSyncData> paoSync, string ptDate, ProgressChangedEventHandler poProgressChange, RunWorkerCompletedEventHandler poProgressComplete)
        {
            ManualResetEvent oManualThread;
            BackgroundWorker oBGWorker;

            try
            {
                oManualThread = new ManualResetEvent(false);
                oBGWorker = new BackgroundWorker();
                oBGWorker.DoWork += delegate
                {
                    try
                    {
                        oC_SP = new cSP();
                        oC_ResourceEN = new ResourceManager(typeof(resMsgRemind_EN));
                        oC_ResourceTH = new ResourceManager(typeof(resMsgRemind_TH));

                        tC_Date = ptDate;
                        C_PRCxDownload(paoSync, oBGWorker);
                    }
                    catch { }
                };
                oBGWorker.ProgressChanged += poProgressChange;
                oBGWorker.WorkerReportsProgress = true;
                oBGWorker.WorkerSupportsCancellation = true;
                oBGWorker.RunWorkerCompleted += poProgressComplete;
                oBGWorker.RunWorkerAsync();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxSyncDwn : " + oEx.Message); }
        }




        /// <summary>
        /// Process download
        /// </summary>
        private async void C_PRCxDownload(List<cmlTSysSyncData> paoSync, BackgroundWorker poBGWorker)
        {
            cMsgRemind oRemind;
            cmlMsgLng oMsgL;
            cmlTCNTMsgRemind oMsg;
            List<cmlTSysSyncData> aoDownload;
            DateTime? dDate;
            string tDate;

            try
            {
                oRemind = new cMsgRemind();
                oMsg = new cmlTCNTMsgRemind();
                oMsgL = new cmlMsgLng();

                oMsg.FDCreateOn = DateTime.Now;
                oMsg.FNMsgSeq = oRemind.C_GETnMaxSeq() + 1;
                oMsg.FTMsgGroup = "Download";
                oMsg.FTCreateBy = cVB.tVB_UsrName;

                if (string.IsNullOrEmpty(cVB.tVB_API2PSMaster)) // ไม่ได้ระบุ API2PSMaster
                {
                    oMsg.FNMsgType = 6;

                    oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " " + oC_ResourceEN.GetString("tMsgNotWebService");
                    oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " " + oC_ResourceTH.GetString("tMsgNotWebService");

                    oRemind.C_INSxMsgRemind(oMsg, oMsgL);

                    //await cVB.oVB_HubProxyAI.Invoke(cVB.tVB_SgnAISend, "AdaPos|MsgRemind");
                }
                else    // ระบุ API2PSMaster
                {
                    //if (oC_SP.SP_CHKbConnection())   // Connect internet
                    if (oC_SP.SP_CHKbConnection(cVB.tVB_API2PSMaster + "/CheckOnline/IsOnline"))   // Connect internet  //*Net 63-04-01 ยกมาจาก baseline
                    {
                        aoDownload = C_GETaTableSync(paoSync);
                        poBGWorker.ReportProgress(0); //*Net 63-05-20
                        for (int nCount = 0; nCount < aoDownload.Count; nCount++)
                        {
                            //*Net 63-05-20 อัพเดต progress ตาม seq
                            poBGWorker.ReportProgress(aoDownload[nCount].FNSynSeqNo);

                            if (string.IsNullOrEmpty(tC_Date))
                            {
                                dDate = (from oSync in paoSync where oSync.FNSynSeqNo == aoDownload[nCount].FNSynSeqNo select oSync.FDSynLast).FirstOrDefault();

                                if (dDate == null)
                                    tDate = DateTime.MinValue.ToString("yyyy-MM-dd");
                                else
                                    //tDate = dDate.Value.ToString("yyyy-MM-dd");
                                    tDate = dDate.Value.ToString("yyyy-MM-dd HH:mm:ss");    //*Em 63-08-11
                            }
                            else
                                tDate = tC_Date;

                            C_SYNxDownload(aoDownload[nCount], tDate);
                            
                        }

                        //*Net 63-05-20 อัพเดต progress Success
                        poBGWorker.ReportProgress(paoSync.LastOrDefault().FNSynSeqNo);
                    }
                    else
                    {
                        oMsg.FNMsgType = 6;

                        oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " " + oC_ResourceEN.GetString("tMsgErrConn");
                        oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " " + oC_ResourceTH.GetString("tMsgErrConn");

                        oRemind.C_INSxMsgRemind(oMsg, oMsgL);

                        //await cVB.oVB_HubProxyAI.Invoke(cVB.tVB_SgnAISend, "AdaPosFront|MsgRemind");
                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxDownload : " + oEx.Message); }
            finally
            {
                poBGWorker.ReportProgress(paoSync.LastOrDefault().FNSynSeqNo); //*Net 63-05-20 อัพเดต progress Success
                oRemind = null;
                oMsg = null;
                oMsgL = null;
                paoSync = null;
                aoDownload = null;
                dDate = null;
                tDate = null;
                paoSync = null;
                oC_ResourceEN = null;
                oC_ResourceTH = null;
                tC_Date = null;
                //oC_SP.SP_CLExMemory();
                oC_SP = null;
            }
        }

        /// <summary>
        /// Get table sync from web service
        /// </summary>
        private List<cmlTSysSyncData> C_GETaTableSync(List<cmlTSysSyncData> paoTable)
        {
            List<cmlTSysSyncData> aoSync = new List<cmlTSysSyncData>();
            HttpResponseMessage oResponse = null;
            cClientService oCall;
            cMsgRemind oRemind;
            cmlMsgLng oMsgL;
            cmlTCNTMsgRemind oMsg;
            List<cmlReqSyncData> aoReqSync;
            cmlResItemOfcmlResSyncDataDwn oResultEnc;
            string tJsonResult, tJson;

            try
            {
                oCall = new cClientService(cVB.tVB_APIHeader, cVB.tVB_AgnKeyAPI);
                oResponse = new HttpResponseMessage();
                oRemind = new cMsgRemind();
                oMsg = new cmlTCNTMsgRemind();
                oMsgL = new cmlMsgLng();

                oMsg.FDCreateOn = DateTime.Now;
                oMsg.FNMsgSeq = oRemind.C_GETnMaxSeq() + 1;
                oMsg.FTMsgGroup = "Download";
                oMsg.FTCreateBy = cVB.tVB_UsrName;

                try
                {
                    aoReqSync = paoTable.Select(oItem => new cmlReqSyncData()
                    {
                        pdSynLast = oItem.FDSynLast,
                        pnSynSeqNo = oItem.FNSynSeqNo,
                        ptSynTable = oItem.FTSynTable
                    }).ToList();

                    tJson = JsonConvert.SerializeObject(aoReqSync);
                    oResponse = oCall.C_POSToInvoke(cVB.tVB_API2PSMaster + "/Service/CheckTaskDownload", tJson);

                    if (oResponse.StatusCode == System.Net.HttpStatusCode.OK)
                    {
                        tJsonResult = oResponse.Content.ReadAsStringAsync().Result;
                        oResultEnc = JsonConvert.DeserializeObject<cmlResItemOfcmlResSyncDataDwn>(tJsonResult);

                        if (string.Equals(oResultEnc.rtCode, "1"))
                        {
                            aoSync = oResultEnc.roItem.raSyncData.Select(oItem => new cmlTSysSyncData()
                            {
                                FDSynLast = oItem.rdSynLast,
                                FNSynSchedule = oItem.rnSynSchedule,
                                FNSynSeqNo = oItem.rnSynSeqNo,
                                FTSynGroup = oItem.rtSynGroup,
                                FTSynStaUse = oItem.rtSynStaUse,
                                FTSynTable = oItem.rtSynTable,
                                FTSynTable_L = oItem.rtSynTable_L,
                                FTSynType = oItem.rtSynType,
                                FTSynUriDwn = oItem.rtSynUriDwn,
                                FTSynUriUld = oItem.rtSynUriUld
                            }).ToList();

                            aoSync = aoSync.Where(a => a.FTSynTable_L == "API2PSMaster").ToList();  //*Em 62-08-22
                        }
                    }
                    else
                    {
                        oMsg.FNMsgType = 6;

                        oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " " + oC_ResourceEN.GetString("tMsgNotWebService");
                        oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " " + oC_ResourceTH.GetString("tMsgNotWebService");

                        oRemind.C_INSxMsgRemind(oMsg, oMsgL);
                    }
                }
                catch (Exception oEx)
                {
                    oMsg.FNMsgType = 6;

                    oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " " + oC_ResourceEN.GetString("tMsgNotWebService");
                    oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " " + oC_ResourceTH.GetString("tMsgNotWebService");

                    oRemind.C_INSxMsgRemind(oMsg, oMsgL);
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_GETaTableSync : " + oEx.Message); }
            finally
            {
                if (oResponse != null)
                    oResponse.Dispose();

                oResponse = null;
                oCall = null;
                paoTable = null;
                oRemind = null;
                oMsgL = null;
                oMsg = null;
                aoReqSync = null;
                oResultEnc = null;
                tJsonResult = null;
                tJson = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSync;
        }

        /// <summary>
        /// Download Data
        /// </summary>
        public async void C_SYNxDownload(cmlTSysSyncData poSync, string ptDate)
        {
            cClientService oCall;
            cmlResResult oResultEnc;
            cMsgRemind oRemind;
            cmlMsgLng oMsgL;
            cmlTCNTMsgRemind oMsg;
            string tResponse, tPath, tCode;
            bool bSuccess = false;

            try
            {
                oCall = new cClientService(cVB.tVB_APIHeader, cVB.tVB_AgnKeyAPI);
                if (oC_SP == null) oC_SP = new cSP();   //*Em 62-09-04
                if (oC_ResourceEN == null) oC_ResourceEN = new ResourceManager(typeof(resMsgRemind_EN));    //*Em 62-09-04
                if (oC_ResourceTH == null) oC_ResourceTH = new ResourceManager(typeof(resMsgRemind_TH));    //*Em 62-09-04
                if (poSync.FTSynUriDwn.Contains("?"))
                {
                    tPath = poSync.FTSynUriDwn.Replace("{pdDate}", ptDate);

                    if (poSync.FTSynUriDwn.Contains("{ptBchCode}"))
                        tPath = tPath.Replace("{ptBchCode}", cVB.tVB_BchCode);
                }
                else
                    tPath = poSync.FTSynUriDwn;

                //tResponse = oCall.C_GETtInvoke(cVB.tVB_API2PSMaster + tPath);
                if(poSync.FNSynSeqNo == 37)
                {
                    tResponse = oCall.C_GETtInvoke(cVB.tVB_API2PSMaster + tPath, cVB.nVB_ApiResTimeout);
                }
                else
                {
                    tResponse = oCall.C_GETtInvoke(cVB.tVB_API2PSMaster + tPath);
                }

                oResultEnc = JsonConvert.DeserializeObject<cmlResResult>(tResponse);

                oRemind = new cMsgRemind();
                oMsg = new cmlTCNTMsgRemind();
                oMsgL = new cmlMsgLng();

                oMsg.FDCreateOn = DateTime.Now;
                oMsg.FNMsgSeq = oRemind.C_GETnMaxSeq() + 1;
                oMsg.FTMsgGroup = poSync.FTSynTable;
                oMsg.FTCreateBy = cVB.tVB_UsrName;

                switch (oResultEnc.rtCode)
                {
                    case "1":   // Success
                        switch (poSync.FNSynSeqNo)
                        {
                            case 1:
                                cmlResItemOfcmlResCompDwn oCompany = JsonConvert.DeserializeObject<cmlResItemOfcmlResCompDwn>(tResponse);

                                //C_DWNxCompany(oCompany);
                                if (C_DWNbCompany(oCompany)) bSuccess = true;   //*Em 61-11-12
                                oCompany = null;
                                //new cCompany().C_SETxBchCompany(cVB.tVB_BchCode); //*Arm 63-08-17 Comment
                                //new cCompany().C_GETxCompany(); //*Arm 63-08-17 Comment
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 2:
                                cmlResItemOfcmlResBchDwn oBranch = JsonConvert.DeserializeObject<cmlResItemOfcmlResBchDwn>(tResponse);

                                //C_DWNxBranch(oBranch);
                                if (C_DWNbBranch(oBranch)) bSuccess = true; //*Em 61-11-12
                                oBranch = null;
                                //new cCompany().C_GETxCompany(); //*Arm 63-08-17 Comment
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 3:
                                cmlResItemOfcmlResShopDwn oShop = JsonConvert.DeserializeObject<cmlResItemOfcmlResShopDwn>(tResponse);

                                //C_DWNxShop(oShop);
                                if (C_DWNbShop(oShop)) bSuccess = true; //*Em 61-11-12
                                oShop = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 4:
                                cmlResListOfcmlResInfoVatRate oVatRate = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoVatRate>(tResponse);

                                //C_DWNxVatRate(oVatRate);
                                if (C_DWNbVatRate(oVatRate)) bSuccess = true;   //*Em 61-11-13
                                oVatRate = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 5:
                                cmlResItemOfcmlResWahDwn oWaHouse = JsonConvert.DeserializeObject<cmlResItemOfcmlResWahDwn>(tResponse);

                                //C_DWNxWarehouse(oWaHouse);
                                if (C_DWNbWarehouse(oWaHouse)) bSuccess = true;   //*Em 61-11-13
                                oWaHouse = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 6:
                                cmlResItemOfcmlResZoneDwn oZone = JsonConvert.DeserializeObject<cmlResItemOfcmlResZoneDwn>(tResponse);

                                //C_DWNxZone(oZone);
                                if (C_DWNbZone(oZone)) bSuccess = true;   //*Em 61-11-13
                                oZone = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 7:
                                cmlResItemOfcmlResAreaDwn oArea = JsonConvert.DeserializeObject<cmlResItemOfcmlResAreaDwn>(tResponse);

                                //C_DWNxArea(oArea);
                                if (C_DWNbArea(oArea)) bSuccess = true;   //*Em 61-11-13
                                oArea = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 8:
                                cmlResItemOfcmlResPvnDwn oPvn = JsonConvert.DeserializeObject<cmlResItemOfcmlResPvnDwn>(tResponse);

                                //C_DWNxProvince(oPvn);
                                if (C_DWNbProvince(oPvn)) bSuccess = true;   //*Em 61-11-13
                                oPvn = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 9:
                                cmlResItemOfcmlResDistrictDwn oDist = JsonConvert.DeserializeObject<cmlResItemOfcmlResDistrictDwn>(tResponse);

                                //C_DWNxDistrict(oDist);
                                if (C_DWNbDistrict(oDist)) bSuccess = true;   //*Em 61-11-13
                                oDist = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 10:
                                cmlResItemOfcmlResSubDistDwn oSubDist = JsonConvert.DeserializeObject<cmlResItemOfcmlResSubDistDwn>(tResponse);

                                //C_DWNxSubDistrict(oSubDist);
                                if (C_DWNbSubDistrict(oSubDist)) bSuccess = true;   //*Em 61-11-13
                                oSubDist = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 11:
                                cmlResItemOfcmlResUserDwn oUser = JsonConvert.DeserializeObject<cmlResItemOfcmlResUserDwn>(tResponse);

                                //C_DWNxUser(oUser);
                                if (C_DWNbUser(oUser)) bSuccess = true;   //*Em 61-11-13
                                oUser = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 12:
                                cmlResItemOfcmlResRoleDwn oRole = JsonConvert.DeserializeObject<cmlResItemOfcmlResRoleDwn>(tResponse);

                                //C_DWNxRole(oRole);
                                if (C_DWNbRole(oRole)) bSuccess = true;   //*Em 61-11-13
                                oRole = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 13:
                                cmlResItemOfcmlResUsrDepDwn oUsrDepart = JsonConvert.DeserializeObject<cmlResItemOfcmlResUsrDepDwn>(tResponse);

                                //C_DWNxUsrDepart(oUsrDepart);
                                if (C_DWNbUsrDepart(oUsrDepart)) bSuccess = true;   //*Em 61-11-13
                                oUsrDepart = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 14:
                                cmlResItemOfcmlResUserRoleDwn oUsrRole = JsonConvert.DeserializeObject<cmlResItemOfcmlResUserRoleDwn>(tResponse);

                                //C_DWNxUsrRole(oUsrRole);
                                if (C_DWNbUsrRole(oUsrRole)) bSuccess = true;   //*Em 61-11-13
                                oUsrRole = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 15:
                                cmlResItemOfcmlResSpnDwn oSalePerson = JsonConvert.DeserializeObject<cmlResItemOfcmlResSpnDwn>(tResponse);

                                //C_DWNxSalePerson(oSalePerson);
                                if (C_DWNbSalePerson(oSalePerson)) bSuccess = true;   //*Em 61-11-13
                                oSalePerson = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 16:
                                cmlResItemOfcmlResRsnDwn oReason = JsonConvert.DeserializeObject<cmlResItemOfcmlResRsnDwn>(tResponse);

                                //C_DWNxReason(oReason);
                                if (C_DWNbReason(oReason)) bSuccess = true;   //*Em 61-11-13
                                oReason = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 17:
                                cmlResItemOfcmlResRcvDwn oReceive = JsonConvert.DeserializeObject<cmlResItemOfcmlResRcvDwn>(tResponse);

                                //C_DWNxReceive(oReceive);
                                if (C_DWNbReceive(oReceive)) bSuccess = true; //*Em 61-11-14
                                oReceive = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 18:
                                cmlResItemOfcmlResBankDwn oBank = JsonConvert.DeserializeObject<cmlResItemOfcmlResBankDwn>(tResponse);

                                //C_DWNxBank(oBank);
                                if (C_DWNbBank(oBank)) bSuccess = true;//*Em 61-11-14
                                oBank = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 19:
                                cmlResItemOfcmlResCreditCardDwn oCredit = JsonConvert.DeserializeObject<cmlResItemOfcmlResCreditCardDwn>(tResponse);

                                //C_DWNxCredit(oCredit);
                                if (C_DWNbCredit(oCredit)) bSuccess = true; //*Em 61-11-14
                                oCredit = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 20:
                                cmlResItemOfcmlResCpnTypeDwn oCouponType = JsonConvert.DeserializeObject<cmlResItemOfcmlResCpnTypeDwn>(tResponse);

                                //C_DWNxCoupon(oCoupon);
                                if (C_DWNbCouponType(oCouponType)) bSuccess = true; //*Em 61-11-14
                                oCouponType = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 21:
                                cmlResItemOfcmlResVchDwn oVoucher = JsonConvert.DeserializeObject<cmlResItemOfcmlResVchDwn>(tResponse);

                                //C_DWNxVoucher(oVoucher);
                                if (C_DWNbVoucher(oVoucher)) bSuccess = true;//*Em 61-11-14
                                oVoucher = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 22:
                                cmlResItemOfcmlResRateDwn oRate = JsonConvert.DeserializeObject<cmlResItemOfcmlResRateDwn>(tResponse);

                                //C_DWNxRate(oRate);
                                if (C_DWNbRate(oRate)) bSuccess = true;//*Em 61-11-14
                                oRate = null;
                                new cRate().C_GETxCurrencyLocal();
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 23:
                                cmlResItemOfcmlResBankNoteDwn oBanknote = JsonConvert.DeserializeObject<cmlResItemOfcmlResBankNoteDwn>(tResponse);

                                //C_DWNxBankNote(oBanknote);
                                if (C_DWNbBankNote(oBanknote)) bSuccess = true; //*Em 61-11-14
                                oBanknote = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 24:
                                cmlResItemOfcmlResCardDwn oCard = JsonConvert.DeserializeObject<cmlResItemOfcmlResCardDwn>(tResponse);

                                //C_DWNxCard(oCard);
                                if (C_DWNbCard(oCard)) bSuccess = true;//*Em 61-11-14
                                oCard = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 25:
                                cmlResItemOfcmlResCardTypeDwn oCardType = JsonConvert.DeserializeObject<cmlResItemOfcmlResCardTypeDwn>(tResponse);

                                //C_DWNxCardType(oCardType);
                                if (C_DWNbCardType(oCardType)) bSuccess = true; //*Em 61-11-14
                                oCardType = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 26:
                                cmlResItemOfcmlResCrdCpnListDwn oCouponList = JsonConvert.DeserializeObject<cmlResItemOfcmlResCrdCpnListDwn>(tResponse);

                                //C_DWNxCouponList(oCouponList);
                                if (C_DWNbCouponList(oCouponList)) bSuccess = true; //*Em 61-11-14
                                oCouponList = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 27:
                                cmlResItemOfcmlResPosDwn oPos = JsonConvert.DeserializeObject<cmlResItemOfcmlResPosDwn>(tResponse);

                                //C_DWNxPos(oPos);
                                if (C_DWNbPos(oPos)) bSuccess = true;
                                oPos = null;
                                new cPos();
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 28:
                                cmlResItemOfcmlResSlipMsgDwn oSlipMsg = JsonConvert.DeserializeObject<cmlResItemOfcmlResSlipMsgDwn>(tResponse);

                                //C_DWNxSlipMsg(oSlipMsg);
                                if (C_DWNbSlipMsg(oSlipMsg)) bSuccess = true;//*Em 61-11-15
                                oSlipMsg = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 29:
                                cmlResItemOfcmlResFuncDwn oFunc = JsonConvert.DeserializeObject<cmlResItemOfcmlResFuncDwn>(tResponse);

                                //C_DWNxFunction(oFunc);
                                if (C_DWNbFunction(oFunc)) bSuccess = true;  //*Em 61-11-15
                                oFunc = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 30:
                                cmlResItemOfcmlResAdvMsgDwn oAdMsg = JsonConvert.DeserializeObject<cmlResItemOfcmlResAdvMsgDwn>(tResponse);

                                //C_DWNxAdMsg(oAdMsg);
                                if (C_DWNbAdMsg(oAdMsg)) bSuccess = true;     //*Em 61-11-15
                                oAdMsg = null;
                                
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 31:
                                cmlResItemOfcmlResCstDwn oCst = JsonConvert.DeserializeObject<cmlResItemOfcmlResCstDwn>(tResponse);

                                //C_DWNxCustomer(oCst);
                                if (C_DWNbCustomer(oCst)) bSuccess = true;   //*Em 61-11-15
                                oCst = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 32:
                                cmlResItemOfcmlResCstGrpDwn oCstGrp = JsonConvert.DeserializeObject<cmlResItemOfcmlResCstGrpDwn>(tResponse);

                                //C_DWNxCstGroup(oCstGrp);
                                if (C_DWNbCstGroup(oCstGrp)) bSuccess = true;    //*Em 61-11-15
                                oCstGrp = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 33:
                                cmlResItemOfcmlResCstTypeDwn oCstType = JsonConvert.DeserializeObject<cmlResItemOfcmlResCstTypeDwn>(tResponse);

                                //C_DWNxCstType(oCstType);
                                if (C_DWNbCstType(oCstType)) bSuccess = true;    //*Em 61-11-15
                                oCstType = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 34:
                                cmlResItemOfcmlResCstLevDwn oCstLev = JsonConvert.DeserializeObject<cmlResItemOfcmlResCstLevDwn>(tResponse);

                                //C_DWNxCstLevel(oCstLev);
                                if (C_DWNbCstLevel(oCstLev)) bSuccess = true;    //*Em 61-11-15
                                oCstLev = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 35:
                                cmlResListOfcmlResInfoCstAddrLng oCstAddress = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoCstAddrLng>(tResponse);

                                //C_DWNxCstAddress(oCstAddress);
                                if (C_DWNbCstAddress(oCstAddress)) bSuccess = true;    //*Em 61-11-15
                                oCstAddress = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 36:
                                cmlResItemOfcmlResCstOcpDwn oCstOccupation = JsonConvert.DeserializeObject<cmlResItemOfcmlResCstOcpDwn>(tResponse);

                                //C_DWNxCstOccupation(oCstOccupation);
                                if (C_DWNbCstOccupation(oCstOccupation)) bSuccess = true;  //*Em 61-11-15
                                oCstOccupation = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 37:
                                cmlResItemOfcmlResPdtItemDwn oPdt = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtItemDwn>(tResponse);

                                //C_DWNxProduct(oPdt);
                                if (C_DWNbProduct(oPdt)) bSuccess = true;    //*Em 61-11-15
                                oPdt = null;

                                //*Arm 63-08-17 เตรียมสินค้า
                                new cLog().C_WRTxLog("cSyncData", "C_SYNxDownload/Product : Process PreparePdtSale", cVB.bVB_AlwPrnLog);
                                new cPdt().C_PRCxPreparePdtSale();
                                //++++++++++++
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            //case 38:
                            //    cmlResItemOfcmlResPdtRentalDwn oRental = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtRentalDwn>(tResponse);

                            //    //C_DWNxRental(oRental);
                            //    if (C_DWNbRental(oRental)) bSuccess = true;  //*Em 61-11-15
                            //    oRental = null;
                            //    break;

                            case 38:
                                cmlResItemOfcmlResPdtUnitDwn oPdtUnit = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtUnitDwn>(tResponse);

                                //C_DWNxPdtUnit(oPdtUnit);
                                if (C_DWNbPdtUnit(oPdtUnit)) bSuccess = true;   //*Em 61-11-15
                                oPdtUnit = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 39:
                                cmlResItemOfcmlResPdtGrpDwn oPdtGrp = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtGrpDwn>(tResponse);

                                //C_DWNxPdtGroup(oPdtGrp);
                                if (C_DWNbPdtGroup(oPdtGrp)) bSuccess = true;   //*Em 61-11-15
                                oPdtGrp = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 40:
                                cmlResItemOfcmlResPdtPriListDwn oPdtPriList = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtPriListDwn>(tResponse);

                                //C_DWNxPdtPriList(oPdtPriList);
                                if (C_DWNbPdtPriList(oPdtPriList)) bSuccess = true;    //*Em 61-11-15
                                oPdtPriList = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 41:
                                cmlResItemOfcmlResPdtPmtGrpDwn oPdtPmtGrp = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtPmtGrpDwn>(tResponse);

                                //C_DWNxPdtPmtGrp(oPdtPmtGrp);
                                if (C_DWNbPdtPmtGrp(oPdtPmtGrp)) bSuccess = true;//*Em 61-11-15
                                oPdtPmtGrp = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 42:
                                cmlResItemOfcmlResPdtTouchGrpDwn oPdtTouchGrp = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtTouchGrpDwn>(tResponse);

                                //C_DWNxPdtTouchGrp(oPdtTouchGrp);
                                if (C_DWNbPdtTouchGrp(oPdtTouchGrp)) bSuccess = true;//*Em 61-11-15
                                oPdtTouchGrp = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 43:
                                cmlResItemOfcmlResPdtTypeDwn oPdtType = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtTypeDwn>(tResponse);

                                //C_DWNxPdtType(oPdtType);
                                if (C_DWNbPdtType(oPdtType)) bSuccess = true;//*Em 61-11-15
                                oPdtType = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 44:
                                cmlResItemOfcmlResPdtBrandDwn oPdtBrand = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtBrandDwn>(tResponse);

                                //C_DWNxPdtBrand(oPdtBrand);
                                if (C_DWNbPdtBrand(oPdtBrand)) bSuccess = true;//*Em 61-11-15
                                oPdtBrand = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 45:
                                cmlResItemOfcmlResPdtModelDwn oPdtModel = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtModelDwn>(tResponse);

                                ////C_DWNxPdtModel(oPdtModel);
                                if (C_DWNbPdtModel(oPdtModel)) bSuccess = true;//*Em 61-11-15
                                oPdtModel = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 46:
                                cmlResItemOfcmlResPdtColorDwn oPdtColor = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtColorDwn>(tResponse);

                                //C_DWNxPdtColor(oPdtColor);
                                if (C_DWNbPdtColor(oPdtColor)) bSuccess = true;//*Em 61-11-15
                                oPdtColor = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 47:
                                cmlResItemOfcmlResPdtSizeDwn oPdtSize = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtSizeDwn>(tResponse);

                                //C_DWNxPdtSize(oPdtSize);
                                if (C_DWNbPdtSize(oPdtSize)) bSuccess = true;//*Em 61-11-15
                                oPdtSize = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 48:
                                //cmlResItemOfcmlResPdtNoSleByEvnDwn oPdtNoSleByEvn = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtNoSleByEvnDwn>(tResponse);
                                cmlResItemOfcmlResEventDwn oEvent = JsonConvert.DeserializeObject<cmlResItemOfcmlResEventDwn>(tResponse); //*Em 62-08-22

                                ////C_DWNxPdtNoSleByEvn(oPdtNoSleByEvn);
                                //if (C_DWNbPdtNoSleByEvn(oPdtNoSleByEvn)) bSuccess = true;//*Em 61-11-15
                                //oPdtNoSleByEvn = null;

                                //*Em 62-08-22
                                if (C_DWNbPdtEvent(oEvent)) bSuccess = true;
                                oEvent = null;
                                cVB.nVB_SyncSuccess += 1;
                                //+++++++++++++
                                break;

                            case 49:
                                cmlResItemOfcmlResPdtPmtDwn oPdtPmt = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtPmtDwn>(tResponse);

                                //C_DWNxPdtPromotion(oPdtPmt);
                                if (C_DWNbPdtPromotion(oPdtPmt)) bSuccess = true;//*Em 61-11-15
                                oPdtPmt = null;
                                new cPdtPmt().C_PRCxPdtPmt();   //*Em 63-08-17
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 50:
                                cmlResItemOfcmlResPdtFhnDwn oPdtFhn = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtFhnDwn>(tResponse);

                                //C_DWNxPdtFashion(oPdtFhn);
                                if (C_DWNbPdtFashion(oPdtFhn)) bSuccess = true;//*Em 61-11-15
                                oPdtFhn = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 51:
                                cmlResItemOfcmlResPdtSeasonDwn oPdtFSeason = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtSeasonDwn>(tResponse);

                                //C_DWNxPdtFSeason(oPdtFSeason);
                                if (C_DWNbPdtFSeason(oPdtFSeason)) bSuccess = true;//*Em 61-11-15
                                oPdtFSeason = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 52:
                                cmlResItemOfcmlResPdtDCSDwn oPdtF0DCS = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtDCSDwn>(tResponse);

                                //C_DWNxPdtF0DCS(oPdtF0DCS);
                                if (C_DWNbPdtF0DCS(oPdtF0DCS)) bSuccess = true;//*Em 61-11-15
                                oPdtF0DCS = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 53:
                                cmlResItemOfcmlResPdtDepartDwn oPdtF1Depart = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtDepartDwn>(tResponse);

                                //C_DWNxPdtF1Depart(oPdtF1Depart);
                                if (C_DWNbPdtF1Depart(oPdtF1Depart)) bSuccess = true;//*Em 61-11-15
                                oPdtF1Depart = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 54:
                                cmlResItemOfcmlResPdtClassDwn oPdtF2Class = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtClassDwn>(tResponse);

                                //C_DWNxPdtF2Class(oPdtF2Class);
                                if (C_DWNbPdtF2Class(oPdtF2Class)) bSuccess = true;//*Em 61-11-15
                                oPdtF2Class = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 55:
                                cmlResItemOfcmlResPdtSubClassDwn oPdtF3SubClass = JsonConvert.DeserializeObject<cmlResItemOfcmlResPdtSubClassDwn>(tResponse);

                                //C_DWNxPdtF3SubClass(oPdtF3SubClass);
                                if (C_DWNbPdtF3SubClass(oPdtF3SubClass)) bSuccess = true;//*Em 61-11-15
                                oPdtF3SubClass = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 56:
                                cmlResItemOfcmlResSplItemDwn oSupplier = JsonConvert.DeserializeObject<cmlResItemOfcmlResSplItemDwn>(tResponse);

                                //C_DWNxSupplier(oSupplier);
                                if (C_DWNbSupplier(oSupplier)) bSuccess = true;//*Em 61-11-15
                                oSupplier = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 57:
                                cmlResListOfcmlResSplContactDwn oSplContact = JsonConvert.DeserializeObject<cmlResListOfcmlResSplContactDwn>(tResponse);

                                //C_DWNxSplContact(oSplContact);
                                if (C_DWNbSplContact(oSplContact)) bSuccess = true;//*Em 61-11-15
                                oSplContact = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 58:
                                cmlResItemOfcmlResSplGrpDwn oSplGroup = JsonConvert.DeserializeObject<cmlResItemOfcmlResSplGrpDwn>(tResponse);

                                //C_DWNxSplGrp(oSplGroup);
                                if (C_DWNbSplGrp(oSplGroup)) bSuccess = true;//*Em 61-11-15
                                oSplGroup = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 59:
                                cmlResItemOfcmlResSplLevelDwn oSplLev = JsonConvert.DeserializeObject<cmlResItemOfcmlResSplLevelDwn>(tResponse);

                                //C_DWNxSplLevel(oSplLev);
                                if (C_DWNbSplLevel(oSplLev)) bSuccess = true;//*Em 61-11-15
                                oSplLev = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 60:
                                cmlResItemOfcmlResSplTypeDwn oSplType = JsonConvert.DeserializeObject<cmlResItemOfcmlResSplTypeDwn>(tResponse);

                                //C_DWNxSplType(oSplType);
                                if (C_DWNbSplType(oSplType)) bSuccess = true;//*Em 61-11-15
                                oSplType = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 61:
                                cmlResItemOfcmlResSplShipViaDwn oShipVia = JsonConvert.DeserializeObject<cmlResItemOfcmlResSplShipViaDwn>(tResponse);

                                //C_DWNxShipVia(oShipVia);
                                if (C_DWNbShipVia(oShipVia)) bSuccess = true;//*Em 61-11-15
                                oShipVia = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 62:
                                cmlResListOfcmlResSplAddrDwn oSplAddress = JsonConvert.DeserializeObject<cmlResListOfcmlResSplAddrDwn>(tResponse);

                                //C_DWNxSplAddress(oSplAddress);
                                if (C_DWNbSplAddress(oSplAddress)) bSuccess = true;//*Em 61-11-15
                                oSplAddress = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 63:
                                cmlResListOfcmlResInfoSysDocType oSysDocType = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoSysDocType>(tResponse);

                                //C_DWNxSysDocType(oSysDocType);
                                if (C_DWNbSysDocType(oSysDocType)) bSuccess = true;//*Em 61-11-15
                                oSysDocType = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 64:
                                cmlResListOfcmlResInfoSysEdc oSysEdc = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoSysEdc>(tResponse);

                                //C_DWNxSysEdc(oSysEdc);
                                if (C_DWNbSysEdc(oSysEdc)) bSuccess = true;//*Em 61-11-15
                                oSysEdc = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 65:
                                cmlResListOfcmlResInfoSysLang oSysLanguage = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoSysLang>(tResponse);

                                //C_DWNxSysLanguage(oSysLanguage);
                                if (C_DWNbSysLanguage(oSysLanguage)) bSuccess = true;
                                oSysLanguage = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 66:
                                cmlResItemOfcmlResSysPmtDwn oSysPmt = JsonConvert.DeserializeObject<cmlResItemOfcmlResSysPmtDwn>(tResponse);

                                //C_DWNxSysPmt(oSysPmt);
                                if (C_DWNbSysPmt(oSysPmt)) bSuccess = true;
                                oSysPmt = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 67:
                                cmlTSysSyncData oSync = new cmlTSysSyncData();
                                cmlResListOfcmlResInfoSysPosHW oSysPosHW = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoSysPosHW>(tResponse);
                                //C_DWNxSysPosHW(oSysPosHW);
                                if (C_DWNbSysPosHW(oSysPosHW)) bSuccess = true;//*Em 61-11-15
                                oSysPosHW = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            //case 70:
                            //    cmlResItemOfcmlResSysPrnDwn oSysPrinter = JsonConvert.DeserializeObject<cmlResItemOfcmlResSysPrnDwn>(tResponse);

                            //    //C_DWNxSysPrinter(oSysPrinter);
                            //    if (C_DWNbSysPrinter(oSysPrinter)) bSuccess = true;//*Em 61-11-15
                            //    oSysPrinter = null;
                            //    break;

                            case 68:
                                cmlResItemOfcmlResSysConfigDwn oSysConfig = JsonConvert.DeserializeObject<cmlResItemOfcmlResSysConfigDwn>(tResponse);

                                //C_DWNxSysConfig(oSysConfig);
                                if (C_DWNbSysConfig(oSysConfig)) bSuccess = true;//*Em 61-11-15
                                oSysConfig = null;
                                cVB.nVB_SyncSuccess += 1;
                                //new cConfig().C_GETxConfig(); Arm 63-08-17 Comment
                                break;

                            case 69:
                                cmlResItemOfcmlResSysRcvFmtDwn oSysRcvFmt = JsonConvert.DeserializeObject<cmlResItemOfcmlResSysRcvFmtDwn>(tResponse);

                                //C_DWNxSysRcvFmt(oSysRcvFmt);
                                if (C_DWNbSysRcvFmt(oSysRcvFmt)) bSuccess = true;//*Em 61-11-15
                                oSysRcvFmt = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 70:
                                cmlResListOfcmlResInfoSysScale oSysScale = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoSysScale>(tResponse);
                                //C_DWNxSysScale(oSysScale);
                                if (C_DWNbSysScale(oSysScale)) bSuccess = true;//*Em 61-11-15
                                oSysScale = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 71:
                                cmlResListOfcmlResInfoSysScaleMap oSysScaleMap = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoSysScaleMap>(tResponse);

                                //C_DWNxSysScaleMap(oSysScaleMap);
                                if (C_DWNbSysScaleMap(oSysScaleMap)) bSuccess = true;//*Em 61-11-15
                                oSysScaleMap = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 72:
                                cmlResItemOfcmlResSyncDataDwn oSysSyncData = JsonConvert.DeserializeObject<cmlResItemOfcmlResSyncDataDwn>(tResponse);

                                //C_DWNxSysSyncData(oSysSyncData);
                                if (C_DWNbSysSyncData(oSysSyncData)) bSuccess = true;//*Em 61-11-15
                                oSysSyncData = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 73:
                                cmlResListOfcmlResInfoPdtApv4Pdt oPdtPrice4PDT = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoPdtApv4Pdt>(tResponse);

                                //C_DWNxPdtPrice4PDT(oPdtPrice4PDT);

                                if (C_DWNbPdtPrice4PDT(oPdtPrice4PDT)) bSuccess = true;//*Em 61-11-15
                                oPdtPrice4PDT = null;
                                new cPdtPmt().C_PRCxPdtPrice(); //*Arm 63-08-17 Load ราคา
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 74:
                                cmlResListOfcmlResInfoPdtApv4Cst oPdtPrice4CST = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoPdtApv4Cst>(tResponse);

                                //C_DWNxPdtPrice4CST(oPdtPrice4CST);
                                if (C_DWNbPdtPrice4CST(oPdtPrice4CST)) bSuccess = true;//*Em 61-11-15
                                oPdtPrice4CST = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 91: //TCNMMerchant
                                cmlResItemOfcmlResMerchant oMerchant = JsonConvert.DeserializeObject<cmlResItemOfcmlResMerchant>(tResponse);
                                if (C_DWNbMerchant(oMerchant)) bSuccess = true;
                                oMerchant = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 92: //TCNMPdtCostAvg
                                cmlResListOfcmlTCNMPdtCostAvg oCostAvg = JsonConvert.DeserializeObject<cmlResListOfcmlTCNMPdtCostAvg>(tResponse);
                                if (C_DWNbCostAvg(oCostAvg)) bSuccess = true;
                                oCostAvg = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            case 94: //TCNMPosAds
                                cmlResListOfcmlTCNMPosAds oPosAds = JsonConvert.DeserializeObject<cmlResListOfcmlTCNMPosAds>(tResponse);
                                if (C_DWNbPosAds(oPosAds)) bSuccess = true;
                                oPosAds = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            //*Arm 62-10-04
                            //case 95: //TSysRcvApp
                            //    cmlResListOfcmlTSysRcvApp oSysRcvApp = JsonConvert.DeserializeObject<cmlResListOfcmlTSysRcvApp>(tResponse);
                            //    if (C_DWNbSysRcvApp(oSysRcvApp)) bSuccess = true;
                            //    oSysRcvApp = null;
                            //    cVB.nVB_SyncSuccess += 1;
                            //    break;

                            //*Arm 63-01-10
                            case 95: //TFNMRcvSpc
                                cmlResItemOfcmlResRcvSpcDwn oRcvSpc = JsonConvert.DeserializeObject<cmlResItemOfcmlResRcvSpcDwn>(tResponse);
                                if (C_DWNbRcvSpc(oRcvSpc)) bSuccess = true;
                                oRcvSpc = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            //*Arm 62-10-04  
                            case 96: //TSysRcvConfig
                                cmlResListOfcmlTSysRcvConfig oSysRcvConfig = JsonConvert.DeserializeObject<cmlResListOfcmlTSysRcvConfig>(tResponse);
                                if (C_DWNbSysRcvConfig(oSysRcvConfig)) bSuccess = true;
                                oSysRcvConfig = null;
                                cVB.nVB_SyncSuccess += 1;
                                break;

                            //*Net 63-03-06
                            //case 101: //TFNTCounponHD //*Arm 63-04-21 Comment Code
                            case 103: //TFNTCounponHD //*Arm 63-04-21 เปลี่ยนเป็น 103
                                cmlResItemOfcmlResCpnDwn oCoupon = JsonConvert.DeserializeObject<cmlResItemOfcmlResCpnDwn>(tResponse);
                                if (C_DWNbCoupon(oCoupon)) bSuccess = true;
                                oCoupon = null;
                                cVB.nVB_SyncSuccess += 1;

                                W_PRCbGetRedeemCoupon2Tmp(); //*Arm 63-03-26 - Get RedeemCoupon ลง Table Temp

                                break;

                            //*Arm 63-03-13
                            case 102: //TARTRedeemHD
                                cmlResItemOfcmlResRedeemPointDwn oRedeem = JsonConvert.DeserializeObject<cmlResItemOfcmlResRedeemPointDwn>(tResponse);
                                if (C_DWNboRedeem(oRedeem)) bSuccess = true;
                                oRedeem = null;
                                cVB.nVB_SyncSuccess += 1;

                                W_PRCbGetRedeem2Tmp(); //*Arm 63-03-26 - Get Redeem ลง Table Temp

                                break;

                            case 104: //TCNMTxnAPI *Arm 63-06-17
                                cmlResItemOfcmlResTxnAPIDwn oTxnAPI = JsonConvert.DeserializeObject<cmlResItemOfcmlResTxnAPIDwn>(tResponse);
                                if (C_DWNboTxnAPI(oTxnAPI)) bSuccess = true;
                                oRedeem = null;
                                cVB.nVB_SyncSuccess += 1;
                                
                                break;

                            case 105: //TLKMWahouse *Arm 63-06-24
                                cmlResListOfcmlResInfoLinkWahouse oWah = JsonConvert.DeserializeObject<cmlResListOfcmlResInfoLinkWahouse>(tResponse);
                                if (C_DWNboInterfaceWahouse(oWah)) bSuccess = true;
                                oRedeem = null;
                                cVB.nVB_SyncSuccess += 1;

                                break;

                            case 106: //TSysDisPolicy *Arm 63-07-08
                                cmlResItemOfcmlResDisPolicyDwn oDisPolicy = JsonConvert.DeserializeObject<cmlResItemOfcmlResDisPolicyDwn>(tResponse);
                                if (C_DWNboSysDisPolicy(oDisPolicy)) bSuccess = true;
                                oRedeem = null;
                                cVB.nVB_SyncSuccess += 1;

                                break;
                        }

                        //C_UPDxSyncLast(poSync.FNSynSeqNo);

                        //// Insert to TCNTMsgRemind
                        //oMsg.FNMsgType = 1;

                        //oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " {0} " + oC_ResourceEN.GetString("tSuccess");
                        //oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " {0} " + oC_ResourceTH.GetString("tSuccess");

                        //*Em 61-11-12
                        if (bSuccess)
                        {
                            C_UPDxSyncLast(poSync.FNSynSeqNo);

                            oMsg.FNMsgType = 1;
                            oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " {0} " + oC_ResourceEN.GetString("tSuccess");
                            oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " {0} " + oC_ResourceTH.GetString("tSuccess");

                        }
                        else
                        {
                            oMsg.FNMsgType = 6;
                            oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " {0} " + oC_ResourceEN.GetString("tMsgFail");
                            oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " {0} " + oC_ResourceTH.GetString("tMsgFail");
                        }
                        //++++++++++++++

                        oRemind.C_INSxMsgRemind(oMsg, oMsgL);
                        break;

                    case "800":
                        //oMsg.FNMsgType = 6;
                        //oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " {0} " + oC_ResourceEN.GetString("tMsgNotFound");
                        //oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " {0} " + oC_ResourceTH.GetString("tMsgNotFound");
                        //oRemind.C_INSxMsgRemind(oMsg, oMsgL);
                        //cVB.nVB_SyncError += 1;

                        C_UPDxSyncLast(poSync.FNSynSeqNo);  //*Em 63-08-09
                        cVB.nVB_SyncSuccess += 1;   //*Em 63-01-14
                        break;

                    default:    // Fail
                        oMsg.FNMsgType = 6;

                        oMsgL.ptNameEN = oC_ResourceEN.GetString("tDownload") + " {0} " + oC_ResourceEN.GetString("tMsgFail");
                        oMsgL.ptNameTH = oC_ResourceTH.GetString("tDownload") + " {0} " + oC_ResourceTH.GetString("tMsgFail");
                        oRemind.C_INSxMsgRemind(oMsg, oMsgL);
                        new cLog().C_WRTxLog("cSyncData", "C_SYNxDownload : " + poSync.FTSynTable + " (" + oResultEnc.rtCode + ":" + oResultEnc.rtDesc + ")");
                        break;
                }
                //*Net 63-07-30 ปรับตาม Moshi
                oCall.C_PRCxCloseConn();    //*Em 63-07-17

                //*Arm 63-08-17 Load Config ใหม่
                new cSetting().C_GETxCfgSetting();
                new cPos();
                new cCompany().C_GETxCompany();
                new cConfig().C_GETxConfig();
                cSlipMsg.C_GETxSlipMsg();

                if (cVB.oVB_CstScreen != null)
                {
                    cVB.oVB_CstScreen.aoW_AdMsg = cCstScreen.C_GETaListAdMsg();
                    cVB.oVB_CstScreen.W_SETxMedia();
                }
                //++++++++++++
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_SYNxDownload : " + poSync.FTSynTable + " | " + oEx.Message); }
            finally
            {
                oCall = null;
                tResponse = null;
                poSync = null;
                oResultEnc = null;
                oRemind = null;
                oMsgL = null;
                oMsg = null;
                tPath = null;
                ptDate = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Get table Sync DB
        /// </summary>
        /// <returns></returns>
        public List<cmlTSysSyncData> C_GETaTableSyncDB()
        {
            List<cmlTSysSyncData> aoSync = new List<cmlTSysSyncData>();
            StringBuilder oSql;

            try
            {
                oSql = new StringBuilder();
                oSql.AppendLine("SELECT SYN.FNSynSeqNo, SYN.FTSynTable,SYNL.FTSynName, SYN.FDSynLast, SYN.FTSynTable_L, SYN.FTSynUriDwn, SYN.FTSynUriUld"); //Net 63-05-20 เอา SynName มาจากตาราง L
                oSql.AppendLine("FROM TSysSyncModule APP with(nolock)");
                oSql.AppendLine("INNER JOIN TSysSyncData SYN  with(nolock) ON APP.FNSynSeqNo = SYN.FNSynSeqNo");
                oSql.AppendLine("LEFT JOIN TSysSyncData_L SYNL with(nolock) ON SYN.FNSynSeqNo = SYNL.FNSynSeqNo AND SYNL.FNLngID = '" + cVB.nVB_Language +"' "); //*Arm 63-07-29 Where ตามภาษาที่กำหนด
                oSql.AppendLine("WHERE APP.FTAppCode = '" + (cVB.tVB_PosType == "2" ? "FC" : "PS") + "'");
                oSql.AppendLine("AND SYN.FTSynStaUse = '1'");

                aoSync = new cDatabase().C_GETaDataQuery<cmlTSysSyncData>(oSql.ToString());
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_GETaTableSyncDB : " + oEx.Message); }
            finally
            {
                oSql = null;
                //new cSP().SP_CLExMemory();
            }

            return aoSync;
        }

        /// <summary>
        /// ทำการ Update ใน Database และ Set วันที่ Sync Last
        /// </summary>
        /// <param name="pnSynSeqNo">เลขตาม SynSeqNo</param>
        private void C_UPDxSyncLast(int pnSynSeqNo)
        {
            StringBuilder oSql;

            try
            {
                oSql = new StringBuilder();
                oSql.AppendLine("UPDATE TSysSyncData ");
                oSql.AppendLine("SET FDSynLast = '" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "' ");
                oSql.AppendLine("WHERE FNSynSeqNo = " + pnSynSeqNo);

                new cDatabase().C_SETxDataQuery(oSql.ToString());
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_UPDxSyncLast : " + oEx.Message); }
            finally
            {
                oSql = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        #region Image

        /// <summary>
        /// Process list Image Object
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMImgObjTmp> C_PRCaListImageObject(List<cmlResInfoImgObj> paoResImgObj)
        {
            List<cmlTCNMImgObjTmp> aoImage = new List<cmlTCNMImgObjTmp>();

            try
            {
                aoImage = paoResImgObj.Select(oItem => new cmlTCNMImgObjTmp()
                {
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FNImgID = oItem.rnImgID,
                    FNImgSeq = oItem.rnImgSeq,
                    FTImgKey = oItem.rtImgKey,
                    FTImgObj = string.IsNullOrEmpty(oItem.rtImgObj) ? "" : new cSP().SP_PRCtBase64ImageObj(oItem),
                    FTImgRefID = oItem.rtImgRefID,
                    FTImgTable = oItem.rtImgTable,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListImageObject : " + oEx.Message); }
            finally
            {
                paoResImgObj = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoImage;
        }

        /// <summary>
        /// Process list Image Person
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMImgPersonTmp> C_PRCaListImagePerson(List<cmlResInfoImgPerson> paoResImgPerson)
        {
            List<cmlTCNMImgPersonTmp> aoImage = new List<cmlTCNMImgPersonTmp>();

            try
            {
                aoImage = paoResImgPerson.Select(oItem => new cmlTCNMImgPersonTmp()
                {
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FNImgID = oItem.rnImgID,
                    FNImgSeq = oItem.rnImgSeq,
                    FTImgKey = oItem.rtImgKey,
                    FTImgObj = string.IsNullOrEmpty(oItem.rtImgObj) ? "" : new cSP().SP_PRCtBase64ImagePerson(oItem),
                    FTImgRefID = oItem.rtImgRefID,
                    FTImgTable = oItem.rtImgTable,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListImagePerson : " + oEx.Message); }
            finally
            {
                paoResImgPerson = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoImage;
        }

        #endregion End Image

        #region Address

        /// <summary>
        /// Process list Branch Address Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMAddressTmp_L> C_PRCaListAddressLng(List<cmlResInfoAddrLng> paoResAddrLng)
        {
            List<cmlTCNMAddressTmp_L> aoAddr = new List<cmlTCNMAddressTmp_L>();

            try
            {
                aoAddr = paoResAddrLng.Select(oItem => new cmlTCNMAddressTmp_L()
                {
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FNAddSeqNo = oItem.rnAddSeqNo,
                    FNLngID = oItem.rnLngID,
                    FTAddCountry = oItem.rtAddCountry,
                    FTAddGrpType = oItem.rtAddGrpType,
                    FTAddLatitude = oItem.rtAddLatitude,
                    FTAddLongitude = oItem.rtAddLongitude,
                    FTAddName = oItem.rtAddName,
                    FTAddRefCode = oItem.rtAddRefCode,
                    FTAddRefNo = oItem.rtAddRefNo,
                    FTAddRmk = oItem.rtAddRmk,
                    FTAddTaxNo = oItem.rtAddTaxNo,
                    FTAddV1DstCode = oItem.rtAddV1DstCode,
                    FTAddV1No = oItem.rtAddV1No,
                    FTAddV1PostCode = oItem.rtAddV1PostCode,
                    FTAddV1PvnCode = oItem.rtAddV1PvnCode,
                    FTAddV1Road = oItem.rtAddV1Road,
                    FTAddV1Soi = oItem.rtAddV1Soi,
                    FTAddV1SubDist = oItem.rtAddV1SubDist,
                    FTAddV1Village = oItem.rtAddV1Village,
                    FTAddV2Desc1 = oItem.rtAddV2Desc1,
                    FTAddV2Desc2 = oItem.rtAddV2Desc2,
                    FTAddVersion = oItem.rtAddVersion,
                    FTAddWebsite = oItem.rtAddWebsite,
                    //FTAreCode = oItem.rtAreCode,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                    //FTZneCode = oItem.rtZneCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListAddressLng : " + oEx.Message); }
            finally
            {
                paoResAddrLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoAddr;
        }

        /// <summary>
        /// Process list Customer Address Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstAddressTmp_L> C_PRCaListCstAddressLng(List<cmlResInfoCstAddrLng> paoResCstAddrLng)
        {
            List<cmlTCNMCstAddressTmp_L> aoAddr = new List<cmlTCNMCstAddressTmp_L>();

            try
            {
                aoAddr = paoResCstAddrLng.Select(oItem => new cmlTCNMCstAddressTmp_L()
                {
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FNAddSeqNo = oItem.rnAddSeqNo,
                    FNLngID = oItem.rnLngID,
                    FTAddCountry = oItem.rtAddCountry,
                    FTAddGrpType = oItem.rtAddGrpType,
                    FTAddLatitude = oItem.rtAddLatitude,
                    FTAddLongitude = oItem.rtAddLongitude,
                    FTAddName = oItem.rtAddName,
                    FTCstCode = oItem.rtCstCode,
                    FTAddRefNo = oItem.rtAddRefNo,
                    FTAddRmk = oItem.rtAddRmk,
                    FTAddV1DstCode = oItem.rtAddV1DstCode,
                    FTAddV1No = oItem.rtAddV1No,
                    FTAddV1PostCode = oItem.rtAddV1PostCode,
                    FTAddV1PvnCode = oItem.rtAddV1PvnCode,
                    FTAddV1Road = oItem.rtAddV1Road,
                    FTAddV1Soi = oItem.rtAddV1Soi,
                    FTAddV1SubDist = oItem.rtAddV1SubDist,
                    FTAddV1Village = oItem.rtAddV1Village,
                    FTAddV2Desc1 = oItem.rtAddV2Desc1,
                    FTAddV2Desc2 = oItem.rtAddV2Desc2,
                    FTAddVersion = oItem.rtAddVersion,
                    FTAddWebsite = oItem.rtAddWebsite,
                    FTAreCode = oItem.rtAreCode,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTZneCode = oItem.rtZneCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstAddressLng : " + oEx.Message); }
            finally
            {
                paoResCstAddrLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoAddr;
        }

        /// <summary>
        /// Process list Supplier Address Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplAddressTmp_L> C_PRCaListSplAddressLng(List<cmlResSplAddrDwn> paoResSplAddrLng)
        {
            List<cmlTCNMSplAddressTmp_L> aoAddr = new List<cmlTCNMSplAddressTmp_L>();

            try
            {
                aoAddr = paoResSplAddrLng.Select(oItem => new cmlTCNMSplAddressTmp_L()
                {
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FNAddSeqNo = oItem.rnAddSeqNo,
                    FNLngID = oItem.rnLngID,
                    FTAddCountry = oItem.rtAddCountry,
                    FTAddGrpType = oItem.rtAddGrpType,
                    FTAddLatitude = oItem.rtAddLatitude,
                    FTAddLongitude = oItem.rtAddLongitude,
                    FTAddName = oItem.rtAddName,
                    FTSplCode = oItem.rtSplCode,
                    FTAddRefNo = oItem.rtAddRefNo,
                    FTAddRmk = oItem.rtAddRmk,
                    FTAddTaxNo = oItem.rtAddTaxNo,
                    FTAddV1DstCode = oItem.rtAddV1DstCode,
                    FTAddV1No = oItem.rtAddV1No,
                    FTAddV1PostCode = oItem.rtAddV1PostCode,
                    FTAddV1PvnCode = oItem.rtAddV1PvnCode,
                    FTAddV1Road = oItem.rtAddV1Road,
                    FTAddV1Soi = oItem.rtAddV1Soi,
                    FTAddV1SubDist = oItem.rtAddV1SubDist,
                    FTAddV1Village = oItem.rtAddV1Village,
                    FTAddV2Desc1 = oItem.rtAddV2Desc1,
                    FTAddV2Desc2 = oItem.rtAddV2Desc2,
                    FTAddVersion = oItem.rtAddVersion,
                    FTAddWebsite = oItem.rtAddWebsite,
                    FTAreCode = oItem.rtAreCode,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTZneCode = oItem.rtZneCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSplAddressLng : " + oEx.Message); }
            finally
            {
                paoResSplAddrLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoAddr;
        }

        #endregion End Address

        #region Company

        /// <summary>
        /// Download Company
        /// </summary>
        /// <param name="poCompany"></param>
        private bool C_DWNbCompany(cmlResItemOfcmlResCompDwn poCompany)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMCompTmp> aoComp;
            List<cmlTCNMCompTmp_L> aoCompLng;
            List<cmlTCNMImgObjTmp> aoImgObj;
            List<cmlTCNTUrlObjectTmp> aoUrlObject;  //*Arm 63-08-17
            cDataReaderAdapter<cmlTCNMCompTmp> oCmp;
            cDataReaderAdapter<cmlTCNMCompTmp_L> oCmpLng;
            cDataReaderAdapter<cmlTCNMImgObjTmp> oImg;
            cDataReaderAdapter<cmlTCNTUrlObjectTmp> oUrlObject; //*Arm 63-08-17

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCompTmp");
                //oSql.AppendLine("FROM TCNMComp WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCompTmp_L");
                //oSql.AppendLine("FROM TCNMComp_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMImgObjTmp");
                //oSql.AppendLine("FROM TCNMImgObj WITH(ROWLOCK)");

                ////*Em 61-11-12 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCompTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCompTmp FROM TCNMComp with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCompTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCompTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCompTmp_L FROM TCNMComp_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCompTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgObjTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMImgObjTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMCompTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCompTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCompTmp FROM TCNMComp with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCompTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMComp' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCompTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCompTmp FROM TCNMComp with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCompTmp");
                oSql.AppendLine("");

                // TCNMCompTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCompTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCompTmp_L FROM TCNMComp_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCompTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMComp_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCompTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCompTmp_L FROM TCNMComp_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCompTmp_L");
                oSql.AppendLine("");

                // TCNMImgObjTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgObjTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObjTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObj' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMImgObjTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgObjTmp");
                //+++++++++++++++++++++++

                //*Arm 63-08-17
                // TCNTUrlObject
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTUrlObjectTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTUrlObjectTmp FROM TCNTUrlObject with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUrlObjectTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUrlObject' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTUrlObjectTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTUrlObjectTmp FROM TCNTUrlObject with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTUrlObjectTmp");
                //+++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMComp
                aoComp = C_PRCaListCompany(poCompany.roItem.raComp);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCmp = new cDataReaderAdapter<cmlTCNMCompTmp>(aoComp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCmp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCompTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCmp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCompany : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TCNMComp_L
                aoCompLng = C_PRCaListCompanyLng(poCompany.roItem.raCompLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCmpLng = new cDataReaderAdapter<cmlTCNMCompTmp_L>(aoCompLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCmpLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCompTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCmpLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCompany : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TCNMImgObj
                aoImgObj = C_PRCaListImageObject(poCompany.roItem.raImage);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oImg = new cDataReaderAdapter<cmlTCNMImgObjTmp>(aoImgObj);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oImg.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgObjTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImg);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCompany : " + oEx.Message);
                        return false;
                    }
                }

                //*Arm 63-08-17
                // Bulk Copy : TCNMUrlObject 
                aoUrlObject = C_PRCaListUrlObject(poCompany.roItem.raUrlObject);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oUrlObject = new cDataReaderAdapter<cmlTCNTUrlObjectTmp>(aoUrlObject);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oUrlObject.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTUrlObjectTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oUrlObject);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCompany : TCNTUrlObjectTmp/ " + oEx.Message);
                        return false;
                    }
                }
                
                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CMP ");
                oSql.AppendLine("FROM TCNMComp CMP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCompTmp CMPT WITH(NOLOCK) ON CMP.FTCmpCode = CMPT.FTCmpCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMComp");
                oSql.AppendLine("SELECT * FROM TCNMCompTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCompTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CMPL ");
                oSql.AppendLine("FROM TCNMComp_L CMPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCompTmp_L CMPLT WITH(NOLOCK) ON CMPL.FTCmpCode = CMPLT.FTCmpCode");
                oSql.AppendLine("   AND CMPL.FNLngID = CMPLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMComp_L");
                oSql.AppendLine("SELECT * FROM TCNMCompTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCompTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE IMG ");
                oSql.AppendLine("FROM TCNMImgObj IMG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgObjTmp IMGT WITH(NOLOCK) ON IMG.FTImgRefID = IMGT.FTImgRefID");
                oSql.AppendLine("AND IMG.FNImgSeq = IMGT.FNImgSeq AND IMG.FTImgTable = IMGT.FTImgTable AND IMG.FTImgKey = IMGT.FTImgKey");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgObj");
                oSql.AppendLine("(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy ");
                oSql.AppendLine("FROM TCNMImgObjTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMImgObjTmp");
                oSql.AppendLine();
                //*Arm 63-08-17 TCNTUrlObject
                oSql.AppendLine("DELETE UOJ ");
                oSql.AppendLine("FROM TCNTUrlObject UOJ WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTUrlObjectTmp UOJT WITH(NOLOCK) ON UOJ.FTUrlRefID = UOJT.FTUrlRefID");
                oSql.AppendLine("AND UOJ.FNUrlType = UOJT.FNUrlType AND UOJ.FTUrlTable = UOJT.FTUrlTable");
                oSql.AppendLine("AND UOJ.FTUrlKey = UOJT.FTUrlKey");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTUrlObject");
                oSql.AppendLine("(FTUrlRefID,FNUrlSeq,FNUrlType,FTUrlTable,FTUrlKey,FTUrlAddress,FTUrlPort,FTUrlLogo,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)");
                oSql.AppendLine("SELECT FTUrlRefID,FNUrlSeq,FNUrlType,FTUrlTable,FTUrlKey,FTUrlAddress,FTUrlPort,FTUrlLogo,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy");
                oSql.AppendLine("FROM TCNTUrlObjectTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //+++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCompany : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCompany : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poCompany = null;
                oSql = null;
                oTranscation = null;
                aoComp = null;
                aoCompLng = null;
                aoImgObj = null;
                oCmp = null;
                oCmpLng = null;
                oImg = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list company
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCompTmp> C_PRCaListCompany(List<cmlResInfoComp> paoResComp)
        {
            List<cmlTCNMCompTmp> aoComp = new List<cmlTCNMCompTmp>();

            try
            {
                aoComp = paoResComp.Select(oItem => new cmlTCNMCompTmp()
                {
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTBchcode = oItem.rtBchcode,
                    FTCmpCode = oItem.rtCmpCode,
                    FTCmpEmail = oItem.rtCmpEmail,
                    FTCmpFax = oItem.rtCmpFax,
                    FTCmpRetInOrEx = oItem.rtCmpRetInOrEx,
                    FTCmpTel = oItem.rtCmpTel,
                    FTCmpWhsInOrEx = oItem.rtCmpWhsInOrEx,
                    FTRteCode = oItem.rtRteCode,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTVatCode = oItem.rtVatCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCompany : " + oEx.Message); }
            finally
            {
                paoResComp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoComp;
        }

        /// <summary>
        /// Process list company
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCompTmp_L> C_PRCaListCompanyLng(List<cmlResInfoCompLng> paoResCompLng)
        {
            List<cmlTCNMCompTmp_L> aoComp = new List<cmlTCNMCompTmp_L>();

            try
            {
                aoComp = paoResCompLng.Select(oItem => new cmlTCNMCompTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCmpCode = oItem.rtCmpCode,
                    FTCmpDirector = oItem.rtCmpDirector,
                    FTCmpName = oItem.rtCmpName,
                    FTCmpShop = oItem.rtCmpShop
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCompanyLng : " + oEx.Message); }
            finally
            {
                paoResCompLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoComp;
        }

        #endregion End Company

        #region Branch

        /// <summary>
        /// Download Branch
        /// </summary>
        /// <param name="poBch"></param>
        //private void C_DWNxBranch(cmlResItemOfcmlResBchDwn poBch)
        private bool C_DWNbBranch(cmlResItemOfcmlResBchDwn poBch)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMBranchTmp> aoBch;
            List<cmlTCNMBranchTmp_L> aoBchLng;
            List<cmlTCNMImgObjTmp> aoImgObj;
            List<cmlTCNMAddressTmp_L> aoAddrLng;
            List<cmlTCNTUrlObjectTmp> aoUrlObj; //*Em 62-09-06
            List<cmlTCNTUrlObjectLoginTmp> aoUrlObjLogin;   //*Em 62-09-06
            cDataReaderAdapter<cmlTCNMBranchTmp> oBch;
            cDataReaderAdapter<cmlTCNMBranchTmp_L> oBchLng;
            cDataReaderAdapter<cmlTCNMImgObjTmp> oImg;
            cDataReaderAdapter<cmlTCNMAddressTmp_L> oAddrLng;
            cDataReaderAdapter<cmlTCNTUrlObjectTmp> oUrlObj;    //*Em 62-09-06
            cDataReaderAdapter<cmlTCNTUrlObjectLoginTmp> oUrlObjLogin;  //*Em 62-09-06

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //*Em 62-06-26 ++++++++++
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMBranchTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMBranchTmp FROM TCNMBranch with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMBranchTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMBranch' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMBranchTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMBranchTmp FROM TCNMBranch with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMBranchTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMBranchTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMBranchTmp_L FROM TCNMBranch_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMBranchTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMBranch_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMBranchTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMBranchTmp_L FROM TCNMBranch_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMBranchTmp_L");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgObjTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObjTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObj' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMImgObjTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgObjTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAddressTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddressTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddress_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMAddressTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAddressTmp_L");
                //+++++++++++++++++++++++

                //*Em 62-09-05
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTUrlObjectTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNTUrlObjectTmp FROM TCNTUrlObject with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUrlObjectTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUrlObject' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNTUrlObjectTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNTUrlObjectTmp FROM TCNTUrlObject with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTUrlObjectTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTUrlObjectLoginTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNTUrlObjectLoginTmp FROM TCNTUrlObjectLogin with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUrlObjectLoginTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUrlObjectLogin' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNTUrlObjectLoginTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNTUrlObjectTmp FROM TCNTUrlObjectLogin with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTUrlObjectLoginTmp");
                //+++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMBranch
                aoBch = C_PRCaListBranch(poBch.roItem.raBch);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oBch = new cDataReaderAdapter<cmlTCNMBranchTmp>(aoBch);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-06-26
                    foreach (string tColName in oBch.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMBranchTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oBch);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBranch/TCNMBranchTmp : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TCNMBranch_L
                aoBchLng = C_PRCaListBranchLng(poBch.roItem.raBchLng);
                oBchLng = new cDataReaderAdapter<cmlTCNMBranchTmp_L>(aoBchLng);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-06-26
                    foreach (string tColName in oBchLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMBranchTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oBchLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBranch/TCNMBranchTmp_L : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TCNMImgObj
                aoImgObj = C_PRCaListImageObject(poBch.roItem.raImage);
                oImg = new cDataReaderAdapter<cmlTCNMImgObjTmp>(aoImgObj);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-06-26
                    foreach (string tColName in oImg.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgObjTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImg);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBranch/TCNMImgObjTmp : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TCNMAddress_L
                aoAddrLng = C_PRCaListAddressLng(poBch.roItem.raAddrLng);
                oAddrLng = new cDataReaderAdapter<cmlTCNMAddressTmp_L>(aoAddrLng);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-06-26
                    foreach (string tColName in oAddrLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAddressTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oAddrLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBranch/TCNMAddressTmp_L : " + oEx.Message);
                        return false;
                    }
                }

                //*Em 62-09-06
                // Bulk Copy : TCNTUrlObject
                aoUrlObj = C_PRCaListUrlObject(poBch.roItem.raTCNTUrlObject);
                oUrlObj = new cDataReaderAdapter<cmlTCNTUrlObjectTmp>(aoUrlObj);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oUrlObj.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTUrlObjectTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oUrlObj);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBranch/TCNTUrlObjectTmp : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TCNTUrlObjectLogin
                aoUrlObjLogin = C_PRCaListUrlObjectLogin(poBch.roItem.raTCNTUrlObjectLogin);
                oUrlObjLogin = new cDataReaderAdapter<cmlTCNTUrlObjectLoginTmp>(aoUrlObjLogin);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oUrlObjLogin.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTUrlObjectLoginTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oUrlObjLogin);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBranch/TCNTUrlObjectLoginTmp : " + oEx.Message);
                        return false;
                    }
                }
                //+++++++++++++++++++++

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE BCH ");
                oSql.AppendLine("FROM TCNMBranch BCH WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMBranchTmp BCHT WITH(NOLOCK) ON BCH.FTBchCode = BCHT.FTBchCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMBranch");
                oSql.AppendLine("SELECT * FROM TCNMBranchTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMBranchTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE BCHL ");
                oSql.AppendLine("FROM TCNMBranch_L BCHL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMBranchTmp_L BCHLT WITH(NOLOCK) ON BCHL.FTBchCode = BCHLT.FTBchCode");
                oSql.AppendLine("   AND  BCHL.FNLngID = BCHLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMBranch_L");
                oSql.AppendLine("SELECT * FROM TCNMBranchTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMBranchTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE IMG ");
                oSql.AppendLine("FROM TCNMImgObj IMG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgObjTmp IMGT WITH(NOLOCK) ON IMG.FNImgID = IMGT.FNImgID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgObj(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy FROM TCNMImgObjTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMImgObjTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE ADDR ");
                oSql.AppendLine("FROM TCNMAddress_L ADDR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMAddressTmp_L ADDRT WITH(NOLOCK) ON ADDR.FTAddGrpType = ADDRT.FTAddGrpType");
                oSql.AppendLine("   AND ADDR.FTAddRefCode = ADDRT.FTAddRefCode");
                //oSql.AppendLine("   AND ADDR.FNAddSeqNo = ADDRT.FNAddSeqNo");       //*Arm 63-04-09 Comment
                oSql.AppendLine("   AND ADDR.FTAddRefNo = ADDRT.FTAddRefNo");         //*Arm 63-04-09
                oSql.AppendLine("   AND ADDR.FNLngID = ADDRT.FNLngID");

                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMAddress_L");
                //oSql.AppendLine("SELECT * FROM TCNMAddressTmp_L WITH(NOLOCK) ");
                //*Em 62-08-21
                oSql.AppendLine("(FNLngID,FTAddGrpType,FTAddRefCode,FTAddRefNo,FTAddName,FTAddTaxNo,FTAddRmk,FTAddCountry,FTAddVersion,");
                oSql.AppendLine("FTAddV1No,FTAddV1Soi,FTAddV1Village,FTAddV1Road,FTAddV1SubDist,FTAddV1DstCode,FTAddV1PvnCode,FTAddV1PostCode,FTAddV2Desc1,");
                oSql.AppendLine("FTAddV2Desc2,FTAddWebsite,FTAddLongitude,FTAddLatitude,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)");
                oSql.AppendLine("SELECT FNLngID,FTAddGrpType,FTAddRefCode,FTAddRefNo,FTAddName,FTAddTaxNo,FTAddRmk,FTAddCountry,FTAddVersion,");
                oSql.AppendLine("FTAddV1No,FTAddV1Soi,FTAddV1Village,FTAddV1Road,FTAddV1SubDist,FTAddV1DstCode,FTAddV1PvnCode,FTAddV1PostCode,FTAddV2Desc1,");
                oSql.AppendLine("FTAddV2Desc2,FTAddWebsite,FTAddLongitude,FTAddLatitude,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy");
                oSql.AppendLine("FROM TCNMAddressTmp_L WITH(NOLOCK)");
                //++++++++++++++
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMAddressTmp_L");
                //*Em 62-09-06
                oSql.AppendLine("DELETE UOJ");
                oSql.AppendLine("FROM TCNTUrlObject UOJ WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TCNTUrlObjectTmp UOJT WITH(NOLOCK) ON UOJ.FTUrlRefID = UOJT.FTUrlRefID AND UOJ.FNUrlSeq = UOJT.FNUrlSeq");
                oSql.AppendLine("INNER JOIN TCNTUrlObjectTmp UOJT WITH(NOLOCK) ON UOJ.FTUrlRefID = UOJT.FTUrlRefID ");//*Net 63-05-29 ไม่ต้อง where Seq
                oSql.AppendLine("   AND UOJ.FNUrlType = UOJT.FNUrlType AND UOJ.FTUrlTable = UOJT.FTUrlTable");
                oSql.AppendLine("   AND UOJ.FTUrlKey = UOJT.FTUrlKey");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTUrlObject");
                oSql.AppendLine("(FTUrlRefID,FNUrlSeq,FNUrlType,FTUrlTable,FTUrlKey,FTUrlAddress,FTUrlPort,FTUrlLogo,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)");
                oSql.AppendLine("SELECT FTUrlRefID,FNUrlSeq,FNUrlType,FTUrlTable,FTUrlKey,FTUrlAddress,FTUrlPort,FTUrlLogo,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy");
                oSql.AppendLine("FROM TCNTUrlObjectTmp WITH(NOLOCK)");
                oSql.AppendLine();
                oSql.AppendLine("DELETE UOL");
                oSql.AppendLine("FROM TCNTUrlObjectLogin UOL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTUrlObjectLoginTmp UOLT WITH(NOLOCK) ON UOL.FTUrlRefID = UOLT.FTUrlRefID AND UOL.FTUrlAddress = UOLT.FTUrlAddress");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTUrlObjectLogin");
                oSql.AppendLine("(FTUrlRefID,FTUrlAddress,FTUolVhost,FTUolUser,FTUolPassword,FTUolKey,FTUolStaActive,FTUolgRmk)");
                oSql.AppendLine("SELECT FTUrlRefID,FTUrlAddress,FTUolVhost,FTUolUser,FTUolPassword,FTUolKey,FTUolStaActive,FTUolgRmk");
                oSql.AppendLine("FROM TCNTUrlObjectLoginTmp WITH(NOLOCK)");
                //+++++++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxBranch : " + oEx.Message); }
            //*Em 61-11-12
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbBranch : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poBch = null;
                oSql = null;
                oTranscation = null;
                aoBch = null;
                aoBchLng = null;
                aoImgObj = null;
                aoAddrLng = null;
                oBch = null;
                oBchLng = null;
                oImg = null;
                oAddrLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Branch
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMBranchTmp> C_PRCaListBranch(List<cmlResInfoBch> paoResBch)
        {
            List<cmlTCNMBranchTmp> aoBch = new List<cmlTCNMBranchTmp>();

            try
            {
                aoBch = paoResBch.Select(oItem => new cmlTCNMBranchTmp()
                {
                    FDBchSaleStart = oItem.rdBchSaleStart,
                    FDBchSaleStop = oItem.rdBchSaleStop,
                    FDBchStart = oItem.rdBchStart,
                    FDBchStop = oItem.rdBchStop,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTBchCode = oItem.rtBchCode,
                    FTBchPriority = oItem.rtBchPriority,
                    FTBchRefID = oItem.rtBchRefID,
                    FTBchRegNo = oItem.rtBchRegNo,
                    FTBchStaActive = oItem.rtBchStaActive,
                    FTBchType = oItem.rtBchType,
                    FTBchUriSrvMQ = oItem.rtBchUriSrvMQ,
                    FTBchUriSrvSG = oItem.rtBchUriSrvSG,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    ////FTWahCode = oItem.rtWahCode,
                    FTBchStaHQ = oItem.rtBchStaHQ,
                    FTPplCode = oItem.rtPplCode,
                    FTWahCode = oItem.rtWahCode,        //*Arm 63-03-27
                    FNBchDefLang = oItem.rnBchDefLang,   //*Arm 63-03-27
                    FTAgnCode = oItem.rtAgnCode,        //*Arm 63-06-24
                    FTMerCode = oItem.rtMerCode         //*Arm 63-06-24
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListBranch : " + oEx.Message); }
            finally
            {
                paoResBch = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoBch;
        }

        /// <summary>
        /// Process list Branch Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMBranchTmp_L> C_PRCaListBranchLng(List<cmlResInfoBchLng> paoResBchLng)
        {
            List<cmlTCNMBranchTmp_L> aoBch = new List<cmlTCNMBranchTmp_L>();

            try
            {
                aoBch = paoResBchLng.Select(oItem => new cmlTCNMBranchTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTBchCode = oItem.rtBchCode,
                    FTBchName = oItem.rtBchName,
                    FTBchRmk = oItem.rtBchRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListBranchLng : " + oEx.Message); }
            finally
            {
                paoResBchLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoBch;
        }

        /// <summary>
        /// Process list TCNTUrlObject
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTUrlObjectTmp> C_PRCaListUrlObject(List<cmlResTCNTUrlObject> paoResBchLng)
        {
            List<cmlTCNTUrlObjectTmp> aoBch = new List<cmlTCNTUrlObjectTmp>();

            try
            {
                aoBch = paoResBchLng.Select(oItem => new cmlTCNTUrlObjectTmp()
                {
                    FNUrlID = oItem.rnUrlID,
                    FTUrlRefID = oItem.rtUrlRefID,
                    FNUrlSeq = oItem.rnUrlSeq,
                    FNUrlType = oItem.rnUrlType,
                    FTUrlTable = oItem.rtUrlTable,
                    FTUrlKey = oItem.rtUrlKey,
                    FTUrlAddress = oItem.rtUrlAddress,
                    FTUrlPort = oItem.rtUrlPort,
                    FTUrlLogo = new cSP().SP_PRCtBase64Image(oItem.rtUrlLogo, oItem.rtUrlRefID + oItem.rtUrlTable + oItem.rtUrlKey, "Logo"),
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUrlObject : " + oEx.Message); }
            finally
            {
                paoResBchLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoBch;
        }

        /// <summary>
        /// Process list TCNTUrlObject
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTUrlObjectLoginTmp> C_PRCaListUrlObjectLogin(List<cmlResTCNTUrlObjectLogin> paoResBchLng)
        {
            List<cmlTCNTUrlObjectLoginTmp> aoBch = new List<cmlTCNTUrlObjectLoginTmp>();

            try
            {
                aoBch = paoResBchLng.Select(oItem => new cmlTCNTUrlObjectLoginTmp()
                {
                    FTUrlRefID = oItem.rtUrlRefID,
                    FTUrlAddress = oItem.rtUrlAddress,
                    FTUolVhost = oItem.rtUolVhost,
                    FTUolUser = oItem.rtUolUser,
                    FTUolPassword = oItem.rtUolPassword,
                    FTUolKey = oItem.rtUolKey,
                    FTUolStaActive = oItem.rtUolStaActive,
                    FTUolgRmk = oItem.rtUolgRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUrlObjectLogin : " + oEx.Message); }
            finally
            {
                paoResBchLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoBch;
        }
        #endregion End Branch

        #region Shop

        /// <summary>
        /// Download Shop
        /// </summary>
        /// <param name="poShp"></param>
        //private void C_DWNxShop(cmlResItemOfcmlResShopDwn poShp)
        private bool C_DWNbShop(cmlResItemOfcmlResShopDwn poShp)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMShopTmp> aoShp;
            List<cmlTCNMShopTmp_L> aoShpLng;
            List<cmlTCNMImgObjTmp> aoImgObj;
            List<cmlTCNMAddressTmp_L> aoAddrLng;
            cDataReaderAdapter<cmlTCNMShopTmp> oShp;
            cDataReaderAdapter<cmlTCNMShopTmp_L> oShpLng;
            cDataReaderAdapter<cmlTCNMImgObjTmp> oImg;
            cDataReaderAdapter<cmlTCNMAddressTmp_L> oAddrLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                
                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMShopTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMShopTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMShopTmp FROM TCNMShop with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMShopTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMShop' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMShopTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMShopTmp FROM TCNMShop with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMShopTmp");
                oSql.AppendLine("");

                // TCNMShopTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMShopTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMShopTmp_L FROM TCNMShop_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMShopTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMShop_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMShopTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMShopTmp_L FROM TCNMShop_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMShopTmp_L");
                oSql.AppendLine("");

                // TCNMImgObjTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgObjTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObjTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObj' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMImgObjTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgObjTmp");
                oSql.AppendLine("");

                // TCNMAddressTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAddressTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddressTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddress_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMAddressTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAddressTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMShop
                aoShp = C_PRCaListShop(poShp.roItem.raShop);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oShp = new cDataReaderAdapter<cmlTCNMShopTmp>(aoShp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oShp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMShopTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oShp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbShop/TCNMShopTmp : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                // Bulk Copy : TCNMShop_L
                aoShpLng = C_PRCaListShopLng(poShp.roItem.raShopLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oShpLng = new cDataReaderAdapter<cmlTCNMShopTmp_L>(aoShpLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oShpLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMShopTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oShpLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbShop : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }


                // Bulk Copy : TCNMImgObj
                aoImgObj = C_PRCaListImageObject(poShp.roItem.raImage);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oImg = new cDataReaderAdapter<cmlTCNMImgObjTmp>(aoImgObj);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oImg.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgObjTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImg);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbShop : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMAddress_L
                aoAddrLng = C_PRCaListAddressLng(poShp.roItem.raAddrLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oAddrLng = new cDataReaderAdapter<cmlTCNMAddressTmp_L>(aoAddrLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oAddrLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAddressTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oAddrLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbShop : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SHP ");
                oSql.AppendLine("FROM TCNMShop SHP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMShopTmp SHPT WITH(NOLOCK) ON SHP.FTShpCode = SHPT.FTShpCode");
                oSql.AppendLine("   AND SHP.FTBchCode = SHPT.FTBchCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMShop");
                oSql.AppendLine("SELECT * FROM TCNMShopTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SHPL ");
                oSql.AppendLine("FROM TCNMShop_L SHPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMShopTmp_L SHPLT WITH(NOLOCK) ON SHPL.FTShpCode = SHPLT.FTShpCode");
                oSql.AppendLine("   AND SHPL.FNLngID = SHPLT.FNLngID");
                oSql.AppendLine("   AND SHPL.FTBchCode = SHPLT.FTBchCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMShop_L");
                oSql.AppendLine("SELECT * FROM TCNMShopTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("DELETE IMG ");
                oSql.AppendLine("FROM TCNMImgObj IMG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgObjTmp IMGT WITH(NOLOCK) ON IMG.FNImgID = IMGT.FNImgID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgObj(FTImgRefID,FNImgSeq,FTImgTable,FTImgKey,FTImgObj,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID,FNImgSeq,FTImgTable,FTImgKey,FTImgObj,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy FROM TCNMImgObjTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("DELETE ADDR ");
                oSql.AppendLine("FROM TCNMAddress_L ADDR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMAddressTmp_L ADDRT WITH(NOLOCK) ON ADDR.FTAddGrpType = ADDRT.FTAddGrpType");
                oSql.AppendLine("   AND ADDR.FTAddRefCode = ADDRT.FTAddRefCode");
                //oSql.AppendLine("   AND ADDR.FNAddSeqNo = ADDRT.FNAddSeqNo"); // *Arm 63-04-09 Comment
                oSql.AppendLine("   AND ADDR.FTAddRefNo = ADDRT.FTAddRefNo");   // *Arm 63-04-09
                oSql.AppendLine("   AND ADDR.FNLngID = ADDRT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMAddress_L(FNLngID,FTAddGrpType,FTAddRefCode,FTAddRefNo,FTAddName,FTAddTaxNo,FTAddRmk,FTAddCountry,FTAddVersion,FTAddV1No,FTAddV1Soi,FTAddV1Village,FTAddV1Road,FTAddV1SubDist,FTAddV1DstCode,FTAddV1PvnCode,FTAddV1PostCode,FTAddV2Desc1,FTAddV2Desc2,FTAddWebsite,FTAddLongitude,FTAddLatitude,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)");
                oSql.AppendLine("SELECT FNLngID,FTAddGrpType,FTAddRefCode,FTAddRefNo,FTAddName,FTAddTaxNo,FTAddRmk,FTAddCountry,FTAddVersion,FTAddV1No,FTAddV1Soi,FTAddV1Village,FTAddV1Road,FTAddV1SubDist,FTAddV1DstCode,FTAddV1PvnCode,FTAddV1PostCode,FTAddV2Desc1,FTAddV2Desc2,FTAddWebsite,FTAddLongitude,FTAddLatitude,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy FROM TCNMAddressTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;    //*Em 61-11-12
            }
            //*Em 61-11-12
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbShop : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poShp = null;
                oSql = null;
                oTranscation = null;
                aoShp = null;
                aoShpLng = null;
                aoImgObj = null;
                aoAddrLng = null;
                oShp = null;
                oShpLng = null;
                oImg = null;
                oAddrLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Shop
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMShopTmp> C_PRCaListShop(List<cmlResInfoShop> paoResShp)
        {
            List<cmlTCNMShopTmp> aoShop = new List<cmlTCNMShopTmp>();

            try
            {
                aoShop = paoResShp.Select(oItem => new cmlTCNMShopTmp()
                {
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FDShpSaleStart = oItem.rdShpSaleStart,
                    FDShpSaleStop = oItem.rdShpSaleStop,
                    FDShpStart = oItem.rdShpStart,
                    FDShpStop = oItem.rdShpStop,
                    FTBchCode = oItem.rtBchCode,
                    FTShpCode = oItem.rtShpCode,
                    FTShpRefID = oItem.rtShpRefID,
                    FTShpRegNo = oItem.rtShpRegNo,
                    FTShpStaActive = oItem.rtShpStaActive,
                    FTShpStaClose = oItem.rtShpStaClose,
                    FTShpType = oItem.rtShpType,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTWahCode = oItem.rtWahCode,
                    FTMerCode = oItem.rtMerCode,
                    FTPplCode = oItem.rtPplCode,                    //*Arm 63-06-16 ปรับตามโครงสร้าง SKC
                    FTShpStaShwPrice = oItem.rtShpStaShwPrice       //*Arm 63-06-16 ปรับตามโครงสร้าง SKC
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListShop : " + oEx.Message); }
            finally
            {
                paoResShp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoShop;
        }

        /// <summary>
        /// Process list Shop Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMShopTmp_L> C_PRCaListShopLng(List<cmlResInfoShopLng> paoResShpLng)
        {
            List<cmlTCNMShopTmp_L> aoShp = new List<cmlTCNMShopTmp_L>();

            try
            {
                aoShp = paoResShpLng.Select(oItem => new cmlTCNMShopTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTBchCode = oItem.rtBchCode,
                    FTShpCode = oItem.rtShpCode,
                    FTShpName = oItem.rtShpName,
                    FTShpRmk = oItem.rtShpRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListShopLng : " + oEx.Message); }
            finally
            {
                paoResShpLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoShp;
        }

        #endregion End Branch

        #region Vat Rate

        /// <summary>
        /// Download Vat Rate
        /// </summary>
        /// <param name="poVatRate"></param>
        //private void C_DWNxVatRate(cmlResListOfcmlResInfoVatRate poVatRate)
        private bool C_DWNbVatRate(cmlResListOfcmlResInfoVatRate poVatRate)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMVatRateTmp> aoVatRate;
            cDataReaderAdapter<cmlTCNMVatRateTmp> oVatRate;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMVatRateTmp");
                //oSql.AppendLine("FROM TCNMVatRate WITH(ROWLOCK)");
                //oSql.AppendLine();

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMVatRateTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMVatRateTmp FROM TCNMVatRate with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMVatRateTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMVatRateTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMVatRateTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMVatRateTmp FROM TCNMVatRate with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMVatRateTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMVatRate' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMVatRateTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMVatRateTmp FROM TCNMVatRate with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMVatRateTmp");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMVatRate
                aoVatRate = C_PRCaListVatRate(poVatRate.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oVatRate = new cDataReaderAdapter<cmlTCNMVatRateTmp>(aoVatRate);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oVatRate.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMVatRateTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oVatRate);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbVatRate : " + oEx.Message);    //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE VRT ");
                oSql.AppendLine("FROM TCNMVatRate VRT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMVatRateTmp VRTT WITH(NOLOCK) ON VRT.FTVatCode = VRTT.FTVatCode");
                oSql.AppendLine("   AND VRT.FDVatStart = VRTT.FDVatStart");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMVatRate");
                oSql.AppendLine("SELECT * FROM TCNMVatRateTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                ////oSql.AppendLine("DROP TABLE TCNMVatRateTmp");
                oSql.AppendLine("TRUNCATE TABLE TCNMVatRateTmp");   //*Em 61-11-13
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxVatRate : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbVatRate : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poVatRate = null;
                oSql = null;
                oTranscation = null;
                aoVatRate = null;
                oVatRate = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Vat Rate
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMVatRateTmp> C_PRCaListVatRate(List<cmlResInfoVatRate> paoResVatRate)
        {
            List<cmlTCNMVatRateTmp> aoVatRate = new List<cmlTCNMVatRateTmp>();

            try
            {
                aoVatRate = paoResVatRate.Select(oItem => new cmlTCNMVatRateTmp()
                {
                    FCVatRate = oItem.rcVatRate,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FDVatStart = oItem.rdVatStart,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTVatCode = oItem.rtVatCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListVatRate : " + oEx.Message); }
            finally
            {
                paoResVatRate = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoVatRate;
        }

        #endregion End Vat Rate

        #region Warehouse

        /// <summary>
        /// Download Warehouse
        /// </summary>
        /// <param name="poWarehouse"></param>
        //private void C_DWNxWarehouse(cmlResItemOfcmlResWahDwn poWarehouse)
        private bool C_DWNbWarehouse(cmlResItemOfcmlResWahDwn poWarehouse)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMWahouseTmp> aoWah;
            List<cmlTCNMWahouseTmp_L> aoWahLng;
            cDataReaderAdapter<cmlTCNMWahouseTmp> oWah;
            cDataReaderAdapter<cmlTCNMWahouseTmp_L> oWahLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMWahouseTmp");
                //oSql.AppendLine("FROM TCNMWahouse WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMWahouseTmp_L");
                //oSql.AppendLine("FROM TCNMWahouse_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMWahouseTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMWahouseTmp FROM TCNMWahouse with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMWahouseTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMWahouseTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMWahouseTmp_L FROM TCNMWahouse_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMWahouseTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMWahouseTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMWahouseTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMWahouseTmp FROM TCNMWahouse with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMWahouseTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMWahouse' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMWahouseTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMWahouseTmp FROM TCNMWahouse with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMWahouseTmp");
                oSql.AppendLine("");

                // TCNMWahouseTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMWahouseTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMWahouseTmp_L FROM TCNMWahouse_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMWahouseTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMWahouse_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMWahouseTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMWahouseTmp_L FROM TCNMWahouse_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMWahouseTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMWahouse
                aoWah = C_PRCaListWarehouse(poWarehouse.roItem.raWah);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oWah = new cDataReaderAdapter<cmlTCNMWahouseTmp>(aoWah);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oWah.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMWahouseTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oWah);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbWarehouse : " + oEx.Message);  //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMWahouse_L
                aoWahLng = C_PRCaListWarehouseLng(poWarehouse.roItem.raWahLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oWahLng = new cDataReaderAdapter<cmlTCNMWahouseTmp_L>(aoWahLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oWahLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMWahouseTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oWahLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbWarehouse : " + oEx.Message);  //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE WAH ");
                oSql.AppendLine("FROM TCNMWaHouse WAH WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMWaHouseTmp WAHT WITH(NOLOCK) ON WAH.FTWahCode = WAHT.FTWahCode AND WAH.FTBchCode = WAHT.FTBchCode"); //*Arm 63-08-10 Where Bch เพิ่ม
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMWaHouse");
                oSql.AppendLine("SELECT * FROM TCNMWaHouseTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMWaHouseTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE WAHL ");
                oSql.AppendLine("FROM TCNMWaHouse_L WAHL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMWaHouseTmp_L WAHLT WITH(NOLOCK) ON WAHL.FTWahCode = WAHLT.FTWahCode AND WAHL.FTBchCode = WAHLT.FTBchCode"); //*Arm 63-08-10 Where Bch เพิ่ม
                oSql.AppendLine("   AND WAHL.FNLngID = WAHLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMWaHouse_L");
                oSql.AppendLine("SELECT * FROM TCNMWaHouseTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMWaHouseTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;   //*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxWarehouse : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbWarehouse : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poWarehouse = null;
                oSql = null;
                oTranscation = null;
                aoWah = null;
                aoWahLng = null;
                oWah = null;
                oWahLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Warehouse
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMWahouseTmp> C_PRCaListWarehouse(List<cmlResInfoWah> paoResWah)
        {
            List<cmlTCNMWahouseTmp> aoWah = new List<cmlTCNMWahouseTmp>();

            try
            {
                aoWah = paoResWah.Select(oItem => new cmlTCNMWahouseTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTWahCode = oItem.rtWahCode,
                    FTWahRefCode = oItem.rtWahRefCode,
                    FTWahStaType = oItem.rtWahStaType,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTWahStaChkStk = oItem.rtWahStaChkStk,      //*Arm 63-06-24
                    FTWahStaPrcStk = oItem.rtWahStaPrcStk       //*Arm 63-06-24
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListWarehouse : " + oEx.Message); }
            finally
            {
                paoResWah = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoWah;
        }

        /// <summary>
        /// Process list Warehouse
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMWahouseTmp_L> C_PRCaListWarehouseLng(List<cmlResInfoWahLng> paoResWahLng)
        {
            List<cmlTCNMWahouseTmp_L> aoWah = new List<cmlTCNMWahouseTmp_L>();

            try
            {
                aoWah = paoResWahLng.Select(oItem => new cmlTCNMWahouseTmp_L()
                {
                    FTBchCode = oItem.rtBchCode,
                    FNLngID = oItem.rnLngID,
                    FTWahCode = oItem.rtWahCode,
                    FTWahName = oItem.rtWahName,
                    FTWahRmk = oItem.rtWahRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListWarehouseLng : " + oEx.Message); }
            finally
            {
                paoResWahLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoWah;
        }

        #endregion End Warehouse

        #region Zone

        /// <summary>
        /// Download Zone
        /// </summary>
        /// <param name="poZone"></param>
        //private void C_DWNxZone(cmlResItemOfcmlResZoneDwn poZone)
        private bool C_DWNbZone(cmlResItemOfcmlResZoneDwn poZone)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMZoneTmp> aoZne;
            List<cmlTCNMZoneTmp_L> aoZneLng;
            cDataReaderAdapter<cmlTCNMZoneTmp> oZne;
            cDataReaderAdapter<cmlTCNMZoneTmp_L> oZneLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMZoneTmp");
                //oSql.AppendLine("FROM TCNMZone WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMZoneTmp_L");
                //oSql.AppendLine("FROM TCNMZone_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMZoneTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMZoneTmp FROM TCNMZone with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMZoneTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMZoneTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMZoneTmp_L FROM TCNMZone_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMZoneTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMZoneTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMZoneTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMZoneTmp FROM TCNMZone with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMZoneTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMZone' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMZoneTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMZoneTmp FROM TCNMZone with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMZoneTmp");
                oSql.AppendLine("");

                // TCNMZoneTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMZoneTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMZoneTmp_L FROM TCNMZone_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMZoneTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMZone_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMZoneTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMZoneTmp_L FROM TCNMZone_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMZoneTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMZone
                aoZne = C_PRCaListZone(poZone.roItem.raZone);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oZne = new cDataReaderAdapter<cmlTCNMZoneTmp>(aoZne);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oZne.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMZoneTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oZne);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbZone : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMZone_L
                aoZneLng = C_PRCaListZoneLng(poZone.roItem.raZoneLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oZneLng = new cDataReaderAdapter<cmlTCNMZoneTmp_L>(aoZneLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oZneLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMZoneTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oZneLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbZone : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE ZNE ");
                oSql.AppendLine("FROM TCNMZone ZNE WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMZoneTmp ZNET WITH(NOLOCK) ON ZNE.FTZneChain = ZNET.FTZneChain");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMZone");
                oSql.AppendLine("SELECT * FROM TCNMZoneTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMZoneTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE ZNEL ");
                oSql.AppendLine("FROM TCNMZone_L ZNEL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMZoneTmp_L ZNELT WITH(NOLOCK) ON ZNEL.FTZneChain = ZNELT.FTZneChain");
                oSql.AppendLine("   AND ZNEL.FNLngID = ZNELT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMZone_L");
                oSql.AppendLine("SELECT * FROM TCNMZoneTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMZoneTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;    //*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxZone : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbZone : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poZone = null;
                oSql = null;
                oTranscation = null;
                aoZne = null;
                aoZneLng = null;
                oZne = null;
                oZneLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Zone
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMZoneTmp> C_PRCaListZone(List<cmlResInfoZone> paoResZne)
        {
            List<cmlTCNMZoneTmp> aoZne = new List<cmlTCNMZoneTmp>();

            try
            {
                aoZne = paoResZne.Select(oItem => new cmlTCNMZoneTmp()
                {
                    FNZneLevel = oItem.rnZneLevel,
                    FTAreCode = oItem.rtAreCode,
                    FTZneChain = oItem.rtZneChain,
                    FTZneCode = oItem.rtZneCode,
                    FTZneParent = oItem.rtZneParent,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListZone : " + oEx.Message); }
            finally
            {
                paoResZne = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoZne;
        }

        /// <summary>
        /// Process list Zone Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMZoneTmp_L> C_PRCaListZoneLng(List<cmlResInfoZoneLng> paoResZneLng)
        {
            List<cmlTCNMZoneTmp_L> aoZne = new List<cmlTCNMZoneTmp_L>();

            try
            {
                aoZne = paoResZneLng.Select(oItem => new cmlTCNMZoneTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTZneChain = oItem.rtZneChain, //*Net 62-12-30 Add FTZneChain
                    FTZneChainName = oItem.rtZneChainName,
                    FTZneCode = oItem.rtZneCode,
                    FTZneName = oItem.rtZneName,
                    FTZneRmk = oItem.rtZneRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListZoneLng : " + oEx.Message); }
            finally
            {
                paoResZneLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoZne;
        }

        #endregion End Zone

        #region Area

        /// <summary>
        /// Download Area
        /// </summary>
        /// <param name="poArea"></param>
        //private void C_DWNxArea(cmlResItemOfcmlResAreaDwn poArea)
        private bool C_DWNbArea(cmlResItemOfcmlResAreaDwn poArea)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMAreaTmp> aoArea;
            List<cmlTCNMAreaTmp_L> aoAreaLng;
            cDataReaderAdapter<cmlTCNMAreaTmp> oArea;
            cDataReaderAdapter<cmlTCNMAreaTmp_L> oAreaLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMAreaTmp");
                //oSql.AppendLine("FROM TCNMArea WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMAreaTmp_L");
                //oSql.AppendLine("FROM TCNMArea_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAreaTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMAreaTmp FROM TCNMArea with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMAreaTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAreaTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMAreaTmp_L FROM TCNMArea_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMAreaTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMAreaTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAreaTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMAreaTmp FROM TCNMArea with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAreaTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMArea' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMAreaTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMAreaTmp FROM TCNMArea with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAreaTmp");
                oSql.AppendLine("");

                // TCNMAreaTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAreaTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMAreaTmp_L FROM TCNMArea_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAreaTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMArea_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMAreaTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMAreaTmp_L FROM TCNMArea_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAreaTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMArea
                aoArea = C_PRCaListArea(poArea.roItem.raArea);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oArea = new cDataReaderAdapter<cmlTCNMAreaTmp>(aoArea);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oArea.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAreaTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oArea);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbArea : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMArea_L
                aoAreaLng = C_PRCaListAreaLng(poArea.roItem.raAreaLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oAreaLng = new cDataReaderAdapter<cmlTCNMAreaTmp_L>(aoAreaLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oAreaLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAreaTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oAreaLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbArea : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE ARE ");
                oSql.AppendLine("FROM TCNMArea ARE WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMAreaTmp ARET WITH(NOLOCK) ON ARE.FTAreCode = ARET.FTAreCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMArea");
                oSql.AppendLine("SELECT * FROM TCNMAreaTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMAreaTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE AREL ");
                oSql.AppendLine("FROM TCNMArea_L AREL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMAreaTmp_L ARELT WITH(NOLOCK) ON AREL.FTAreCode = ARELT.FTAreCode");
                oSql.AppendLine("   AND AREL.FNLngID = ARELT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMArea_L");
                oSql.AppendLine("SELECT * FROM TCNMAreaTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMAreaTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;   //*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxArea : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbArea : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poArea = null;
                oSql = null;
                oTranscation = null;
                aoArea = null;
                aoAreaLng = null;
                oArea = null;
                oAreaLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Area
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMAreaTmp> C_PRCaListArea(List<cmlResInfoArea> paoResArea)
        {
            List<cmlTCNMAreaTmp> aoArea = new List<cmlTCNMAreaTmp>();

            try
            {
                aoArea = paoResArea.Select(oItem => new cmlTCNMAreaTmp()
                {
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FDCreateOn = oItem.rdCreateOn,
                    FTAreCode = oItem.rtAreCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListArea : " + oEx.Message); }
            finally
            {
                paoResArea = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoArea;
        }

        /// <summary>
        /// Process list Area Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMAreaTmp_L> C_PRCaListAreaLng(List<cmlResInfoAreaLng> paoResAreaLng)
        {
            List<cmlTCNMAreaTmp_L> aoArea = new List<cmlTCNMAreaTmp_L>();

            try
            {
                aoArea = paoResAreaLng.Select(oItem => new cmlTCNMAreaTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTAreCode = oItem.rtAreCode,
                    FTAreName = oItem.rtAreName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListAreaLng : " + oEx.Message); }
            finally
            {
                paoResAreaLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoArea;
        }

        #endregion End Area

        #region Province

        /// <summary>
        /// Download Province
        /// </summary>
        /// <param name="poPvn"></param>
        //private void C_DWNxProvince(cmlResItemOfcmlResPvnDwn poPvn)
        private bool C_DWNbProvince(cmlResItemOfcmlResPvnDwn poPvn)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMProvinceTmp> aoPvn;
            List<cmlTCNMProvinceTmp_L> aoPvnLng;
            cDataReaderAdapter<cmlTCNMProvinceTmp> oPvn;
            cDataReaderAdapter<cmlTCNMProvinceTmp_L> oPvnLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMProvinceTmp");
                //oSql.AppendLine("FROM TCNMProvince WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMProvinceTmp_L");
                //oSql.AppendLine("FROM TCNMProvince_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMProvinceTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMProvinceTmp FROM TCNMProvince with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMProvinceTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMProvinceTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMProvinceTmp_L FROM TCNMProvince_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMProvinceTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMProvinceTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMProvinceTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMProvinceTmp FROM TCNMProvince with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMProvinceTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMProvince' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMProvinceTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMProvinceTmp FROM TCNMProvince with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMProvinceTmp");
                oSql.AppendLine("");

                // TCNMProvinceTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMProvinceTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMProvinceTmp_L FROM TCNMProvince_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMProvinceTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMProvince_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMProvinceTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMProvinceTmp_L FROM TCNMProvince_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMProvinceTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMProvince
                aoPvn = C_PRCaListProvince(poPvn.roItem.raPvn);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPvn = new cDataReaderAdapter<cmlTCNMProvinceTmp>(aoPvn);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPvn.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMProvinceTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPvn);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbProvince : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMProvince_L
                aoPvnLng = C_PRCaListProvinceLng(poPvn.roItem.raPvnLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPvnLng = new cDataReaderAdapter<cmlTCNMProvinceTmp_L>(aoPvnLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPvnLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMProvinceTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPvnLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbProvince : " + oEx.Message);   //*Em 61-11-13
                        return false;   //*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PVN ");
                oSql.AppendLine("FROM TCNMProvince PVN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMProvinceTmp PVNT WITH(NOLOCK) ON PVN.FTPvnCode = PVNT.FTPvnCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMProvince");
                oSql.AppendLine("SELECT * FROM TCNMProvinceTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMProvinceTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PVNL ");
                oSql.AppendLine("FROM TCNMProvince_L PVNL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMProvinceTmp_L PVNLT WITH(NOLOCK) ON PVNL.FTPvnCode = PVNLT.FTPvnCode");
                oSql.AppendLine("   AND PVNL.FNLngID = PVNLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMProvince_L");
                oSql.AppendLine("SELECT * FROM TCNMProvinceTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMProvinceTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxProvince : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbProvince : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPvn = null;
                oSql = null;
                oTranscation = null;
                aoPvn = null;
                aoPvnLng = null;
                oPvn = null;
                oPvnLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Province
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMProvinceTmp> C_PRCaListProvince(List<cmlResInfoPvn> paoResPvn)
        {
            List<cmlTCNMProvinceTmp> aoPvn = new List<cmlTCNMProvinceTmp>();

            try
            {
                aoPvn = paoResPvn.Select(oItem => new cmlTCNMProvinceTmp()
                {
                    FTPvnCode = oItem.rtPvnCode,
                    FTPvnLatitude = oItem.rtPvnLatitude,
                    FTPvnLongitude = oItem.rtPvnLongitude,
                    FTZneCode = oItem.rtZneCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListProvince : " + oEx.Message); }
            finally
            {
                paoResPvn = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPvn;
        }

        /// <summary>
        /// Process list Province Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMProvinceTmp_L> C_PRCaListProvinceLng(List<cmlResInfoPvnLng> paoResPvnLng)
        {
            List<cmlTCNMProvinceTmp_L> aoPvn = new List<cmlTCNMProvinceTmp_L>();

            try
            {
                aoPvn = paoResPvnLng.Select(oItem => new cmlTCNMProvinceTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPvnCode = oItem.rtPvnCode,
                    FTPvnName = oItem.rtPvnName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListProvinceLng : " + oEx.Message); }
            finally
            {
                paoResPvnLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPvn;
        }

        #endregion End Province

        #region District

        /// <summary>
        /// Download District
        /// </summary>
        /// <param name="poDst"></param>
        //private void C_DWNxDistrict(cmlResItemOfcmlResDistrictDwn poDst)
        private bool C_DWNbDistrict(cmlResItemOfcmlResDistrictDwn poDst)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMDistrictTmp> aoDst;
            List<cmlTCNMDistrictTmp_L> aoDstLng;
            cDataReaderAdapter<cmlTCNMDistrictTmp> oDst;
            cDataReaderAdapter<cmlTCNMDistrictTmp_L> oDstLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMDistrictTmp");
                //oSql.AppendLine("FROM TCNMDistrict WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMDistrictTmp_L");
                //oSql.AppendLine("FROM TCNMDistrict_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMDistrictTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMDistrictTmp FROM TCNMDistrict with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMDistrictTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMDistrictTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMDistrictTmp_L FROM TCNMDistrict_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMDistrictTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMDistrictTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMDistrictTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMDistrictTmp FROM TCNMDistrict with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMDistrictTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMDistrict' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMDistrictTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMDistrictTmp FROM TCNMDistrict with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMDistrictTmp");
                oSql.AppendLine("");

                // TCNMDistrictTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMDistrictTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMDistrictTmp_L FROM TCNMDistrict_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMDistrictTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMDistrict_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMDistrictTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMDistrictTmp_L FROM TCNMDistrict_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMDistrictTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMDistrict
                aoDst = C_PRCaListDistrict(poDst.roItem.raDistrinct);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oDst = new cDataReaderAdapter<cmlTCNMDistrictTmp>(aoDst);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oDst.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMDistrictTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oDst);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbDistrict/TCNMDistrictTmp : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMDistrict_L
                aoDstLng = C_PRCaListDistrictLng(poDst.roItem.raDistrinctLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oDstLng = new cDataReaderAdapter<cmlTCNMDistrictTmp_L>(aoDstLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oDstLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMDistrictTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oDstLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbDistrict/TCNMDistrictTmp_L : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE DST ");
                oSql.AppendLine("FROM TCNMDistrict DST WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMDistrictTmp DSTT WITH(NOLOCK) ON DST.FTDstCode = DSTT.FTDstCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMDistrict");
                oSql.AppendLine("SELECT * FROM TCNMDistrictTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMDistrictTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE DSTL ");
                oSql.AppendLine("FROM TCNMDistrict_L DSTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMDistrictTmp_L DSTLT WITH(NOLOCK) ON DSTL.FTDstCode = DSTLT.FTDstCode");
                oSql.AppendLine("   AND DSTL.FNLngID = DSTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMDistrict_L");
                oSql.AppendLine("SELECT * FROM TCNMDistrictTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMDistrictTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxDistrict : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbDistrict : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poDst = null;
                oSql = null;
                oTranscation = null;
                aoDst = null;
                aoDstLng = null;
                oDst = null;
                oDstLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list District
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMDistrictTmp> C_PRCaListDistrict(List<cmlResInfoDistrict> paoResDst)
        {
            List<cmlTCNMDistrictTmp> aoDst = new List<cmlTCNMDistrictTmp>();

            try
            {
                aoDst = paoResDst.Select(oItem => new cmlTCNMDistrictTmp()
                {
                    FTPvnCode = oItem.rtPvnCode,
                    FTDstCode = oItem.rtDstCode,
                    FTDstLatitude = oItem.rtDstLatitude,
                    FTDstLongitude = oItem.rtDstLongitude,
                    FTDstPost = oItem.rtDstPost,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FDCreateOn = oItem.rdCreateOn
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListDistrict : " + oEx.Message); }
            finally
            {
                paoResDst = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoDst;
        }

        /// <summary>
        /// Process list District Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMDistrictTmp_L> C_PRCaListDistrictLng(List<cmlResInfoDistrictLng> paoResDstLng)
        {
            List<cmlTCNMDistrictTmp_L> aoDst = new List<cmlTCNMDistrictTmp_L>();

            try
            {
                aoDst = paoResDstLng.Select(oItem => new cmlTCNMDistrictTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTDstCode = oItem.rtDstCode,
                    FTDstName = oItem.rtDstName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListDistrictLng : " + oEx.Message); }
            finally
            {
                paoResDstLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoDst;
        }

        #endregion End District

        #region SubDistrict

        /// <summary>
        /// Download SubDistrict
        /// </summary>
        /// <param name="poSud"></param>
        //private void C_DWNxSubDistrict(cmlResItemOfcmlResSubDistDwn poSud)
        private bool C_DWNbSubDistrict(cmlResItemOfcmlResSubDistDwn poSud)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSubDistrictTmp> aoSud;
            List<cmlTCNMSubDistrictTmp_L> aoSudLng;
            cDataReaderAdapter<cmlTCNMSubDistrictTmp> oSud;
            cDataReaderAdapter<cmlTCNMSubDistrictTmp_L> oSudLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSubDistrictTmp");
                //oSql.AppendLine("FROM TCNMSubDistrict WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSubDistrictTmp_L");
                //oSql.AppendLine("FROM TCNMSubDistrict_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSubDistrictTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSubDistrictTmp FROM TCNMSubDistrict with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSubDistrictTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSubDistrictTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSubDistrictTmp_L FROM TCNMSubDistrict_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSubDistrictTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMSubDistrictTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSubDistrictTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSubDistrictTmp FROM TCNMSubDistrict with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSubDistrictTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSubDistrict' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSubDistrictTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSubDistrictTmp FROM TCNMSubDistrict with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSubDistrictTmp");
                oSql.AppendLine("");

                // TCNMSubDistrictTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSubDistrictTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSubDistrictTmp_L FROM TCNMSubDistrict_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSubDistrictTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSubDistrict_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSubDistrictTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSubDistrictTmp_L FROM TCNMSubDistrict_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSubDistrictTmp_L");
                //+++++++++++++++++++++++


                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSubDistrict
                aoSud = C_PRCaListSubDistrict(poSud.roItem.raSubDist);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSud = new cDataReaderAdapter<cmlTCNMSubDistrictTmp>(aoSud);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSud.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSubDistrictTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSud);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSubDistrict : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSubDistrict_L
                aoSudLng = C_PRCaListSubDistrictLng(poSud.roItem.raSubDistLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSudLng = new cDataReaderAdapter<cmlTCNMSubDistrictTmp_L>(aoSudLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSudLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSubDistrictTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSudLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSubDistrict : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SUD ");
                oSql.AppendLine("FROM TCNMSubDistrict SUD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSubDistrictTmp SUDT WITH(NOLOCK) ON SUD.FTSudCode = SUDT.FTSudCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSubDistrict");
                oSql.AppendLine("SELECT * FROM TCNMSubDistrictTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSubDistrictTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SUDL ");
                oSql.AppendLine("FROM TCNMSubDistrict_L SUDL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSubDistrictTmp_L SUDLT WITH(NOLOCK) ON SUDL.FTSudCode = SUDLT.FTSudCode");
                oSql.AppendLine("   AND SUDL.FNLngID = SUDLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSubDistrict_L");
                oSql.AppendLine("SELECT * FROM TCNMSubDistrictTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSubDistrictTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSubDistrict : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSubDistrict : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSud = null;
                oSql = null;
                oTranscation = null;
                aoSud = null;
                aoSudLng = null;
                oSud = null;
                oSudLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list SubDistrict
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSubDistrictTmp> C_PRCaListSubDistrict(List<cmlResInfoSubDist> paoResSud)
        {
            List<cmlTCNMSubDistrictTmp> aoSud = new List<cmlTCNMSubDistrictTmp>();

            try
            {
                aoSud = paoResSud.Select(oItem => new cmlTCNMSubDistrictTmp()
                {
                    FTDstCode = oItem.rtDstCode,
                    FTSudCode = oItem.rtSudCode,
                    FTSudLatitude = oItem.rtSudLatitude,
                    FTSudLongitude = oItem.rtSudLongitude,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSubDistrict : " + oEx.Message); }
            finally
            {
                paoResSud = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSud;
        }

        /// <summary>
        /// Process list SubDistrict Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSubDistrictTmp_L> C_PRCaListSubDistrictLng(List<cmlResInfoSubDistLng> paoResSudLng)
        {
            List<cmlTCNMSubDistrictTmp_L> aoSud = new List<cmlTCNMSubDistrictTmp_L>();

            try
            {
                aoSud = paoResSudLng.Select(oItem => new cmlTCNMSubDistrictTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSudCode = oItem.rtSudCode,
                    FTSudName = oItem.rtSudName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSubDistrictLng : " + oEx.Message); }
            finally
            {
                paoResSudLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSud;
        }

        #endregion End SubDistrict

        #region User

        /// <summary>
        /// Download User
        /// </summary>
        /// <param name="poUser"></param>
        //private void C_DWNxUser(cmlResItemOfcmlResUserDwn poUser)
        private bool C_DWNbUser(cmlResItemOfcmlResUserDwn poUser)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMUserTmp> aoUsr;
            List<cmlTCNMUserTmp_L> aoUsrLng;
            List<cmlTCNMImgPersonTmp> aoImgPerson;
            List<cmlTCNMAddressTmp_L> aoAddrLng;
            List<cmlTCNTUsrGroup> aoUsrGrp;
            List<cmlTCNMUsrLoginTmp> aoUsrLogin;                    //*Em 62-09-02
            List<cmlTCNMUsrActRoleTmp> aoUsrActRole;                //*Arm 63-06-16 ปรับโครงสร้างตาม SKC
            cDataReaderAdapter<cmlTCNMUserTmp> oUsr;
            cDataReaderAdapter<cmlTCNMUserTmp_L> oUsrLng;
            cDataReaderAdapter<cmlTCNMImgPersonTmp> oImg;
            cDataReaderAdapter<cmlTCNMAddressTmp_L> oAddrLng;
            cDataReaderAdapter<cmlTCNTUsrGroup> oUsrGrp;
            cDataReaderAdapter<cmlTCNMUsrLoginTmp> oUsrLogin;       //*Em 62-09-02
            cDataReaderAdapter<cmlTCNMUsrActRoleTmp> oUsrActRole;   //*Arm 63-06-16 ปรับโครงสร้างตาม SKC

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                
                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMUserTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUserTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMUserTmp FROM TCNMUser with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUserTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUser' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMUserTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMUserTmp FROM TCNMUser with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMUserTmp");
                oSql.AppendLine("");

                // TCNMUserTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUserTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMUserTmp_L FROM TCNMUser_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUserTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUser_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMUserTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMUserTmp_L FROM TCNMUser_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMUserTmp_L");
                oSql.AppendLine("");

                // TCNMImgPersonTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgPersonTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMImgPersonTmp FROM TCNMImgPerson with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgPersonTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgPerson' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMImgPersonTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMImgPersonTmp FROM TCNMImgPerson with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgPersonTmp");
                oSql.AppendLine("");

                // TCNMAddressTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAddressTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddressTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddress_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMAddressTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAddressTmp_L");
                oSql.AppendLine("");

                // TCNTUsrGroupTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTUsrGroupTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTUsrGroupTmp FROM TCNTUsrGroup with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUsrGroupTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUsrGroup' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTUsrGroupTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTUsrGroupTmp FROM TCNTUsrGroup with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTUsrGroupTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                //*Em 62-09-02
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrLoginTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMUsrLoginTmp FROM TCNMUsrLogin with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrLoginTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrLogin' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMUsrLoginTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMUsrLoginTmp FROM TCNMUsrLogin with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMUsrLoginTmp");
                //+++++++++++++

                //*Arm 63-06-16 TCNMUsrActRole
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrActRoleTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMUsrActRoleTmp FROM TCNMUsrActRole with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrActRoleTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrActRole' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMUsrActRoleTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMUsrActRoleTmp FROM TCNMUsrActRole with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMUsrActRoleTmp");
                //+++++++++++++
                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMUser
                aoUsr = C_PRCaListUser(poUser.roItem.raUser);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oUsr = new cDataReaderAdapter<cmlTCNMUserTmp>(aoUsr);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oUsr.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMUserTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oUsr);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        //new cLog().C_WRTxLog("cSyncData", "C_DWNbUser : " + oEx.Message);//*Em 61-11-13
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUser/TCNMUserTmp : " + oEx.Message); //*Arm 63-06-16
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMUser_L
                aoUsrLng = C_PRCaListUserLng(poUser.roItem.raUserLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oUsrLng = new cDataReaderAdapter<cmlTCNMUserTmp_L>(aoUsrLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oUsrLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMUserTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oUsrLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        //new cLog().C_WRTxLog("cSyncData", "C_DWNbUser : " + oEx.Message);//*Em 61-11-13
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUser/TCNMUserTmp_L : " + oEx.Message); //*Arm 63-06-16
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMImgPerson
                aoImgPerson = C_PRCaListImagePerson(poUser.roItem.raImage);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oImg = new cDataReaderAdapter<cmlTCNMImgPersonTmp>(aoImgPerson);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oImg.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgPersonTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImg);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        //new cLog().C_WRTxLog("cSyncData", "C_DWNbUser : " + oEx.Message);//*Em 61-11-13
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUser/TCNMImgPersonTmp : " + oEx.Message); //*Arm 63-06-16
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMAddress_L
                aoAddrLng = C_PRCaListAddressLng(poUser.roItem.raAddrLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oAddrLng = new cDataReaderAdapter<cmlTCNMAddressTmp_L>(aoAddrLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oAddrLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAddressTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oAddrLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        //new cLog().C_WRTxLog("cSyncData", "C_DWNbUser : " + oEx.Message);//*Em 61-11-13
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUser/TCNMAddressTmp_L : " + oEx.Message); //*Arm 63-06-16
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNTUsrGroup
                aoUsrGrp = C_PRCaListUserGroup(poUser.roItem.raUserGrp);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oUsrGrp = new cDataReaderAdapter<cmlTCNTUsrGroup>(aoUsrGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oUsrGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTUsrGroupTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oUsrGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        //new cLog().C_WRTxLog("cSyncData", "C_DWNbUser : " + oEx.Message);//*Em 61-11-13
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUser/TCNTUsrGroupTmp : " + oEx.Message); //*Arm 63-06-16
                        return false;//*Em 61-11-13
                    }
                }

                //*Em 62-09-02
                aoUsrLogin = C_PRCaListUserLogin(poUser.roItem.raTCNMUsrLogin);
                oUsrLogin = new cDataReaderAdapter<cmlTCNMUsrLoginTmp>(aoUsrLogin);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oUsrLogin.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMUsrLoginTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oUsrLogin);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUser/TCNMUsrLoginTmp : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }
                //+++++++++++++++++++++

                //*Arm 63-06-16 TCNMUsrActRole
                aoUsrActRole = C_PRCaListUserActRole(poUser.roItem.raTCNMUsrActRole);
                oUsrActRole = new cDataReaderAdapter<cmlTCNMUsrActRoleTmp>(aoUsrActRole);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oUsrActRole.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMUsrActRoleTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oUsrActRole);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUser/TCNMUsrActRoleTmp : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }
                //+++++++++++++++++++++

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE USR ");
                oSql.AppendLine("FROM TCNMUser USR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMUserTmp USRT WITH(NOLOCK) ON USR.FTUsrCode = USRT.FTUsrCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMUser");
                oSql.AppendLine("SELECT * FROM TCNMUserTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMUserTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE USRL ");
                oSql.AppendLine("FROM TCNMUser_L USRL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMUserTmp_L USRLT WITH(NOLOCK) ON USRL.FTUsrCode = USRLT.FTUsrCode");
                oSql.AppendLine("   AND  USRL.FNLngID = USRLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMUser_L");
                oSql.AppendLine("SELECT * FROM TCNMUserTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMUserTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE IMG ");
                oSql.AppendLine("FROM TCNMImgPerson IMG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgPersonTmp IMGT WITH(NOLOCK) ON IMG.FTImgRefID = IMGT.FTImgRefID");
                oSql.AppendLine("AND IMG.FNImgSeq = IMGT.FNImgSeq AND IMG.FTImgTable = IMGT.FTImgTable AND IMG.FTImgKey = IMGT.FTImgKey");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgPerson");
                //oSql.AppendLine("SELECT * FROM TCNMImgPersonTmp WITH(NOLOCK) ");
                //*Em 62-08-21
                oSql.AppendLine("(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy");
                oSql.AppendLine("FROM TCNMImgPersonTmp WITH(NOLOCK)");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMImgPersonTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE ADDR ");
                oSql.AppendLine("FROM TCNMAddress_L ADDR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMAddressTmp_L ADDRT WITH(NOLOCK) ON ADDR.FTAddGrpType = ADDRT.FTAddGrpType");
                oSql.AppendLine("   AND ADDR.FTAddRefCode = ADDRT.FTAddRefCode");
                //oSql.AppendLine("   AND ADDR.FNAddSeqNo = ADDRT.FNAddSeqNo");     //*Arm 63-04-09 Comment
                oSql.AppendLine("   AND ADDR.FTAddRefNo = ADDRT.FTAddRefNo");       //*Arm 63-04-09
                oSql.AppendLine("   AND ADDR.FNLngID = ADDRT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMAddress_L");
                oSql.AppendLine("(FNLngID, FTAddGrpType, FTAddRefCode, FTAddRefNo, FTAddName, FTAddTaxNo, FTAddRmk, FTAddCountry, FTAddVersion, ");
                oSql.AppendLine("FTAddV1No, FTAddV1Soi, FTAddV1Village, FTAddV1Road, FTAddV1SubDist, FTAddV1DstCode, FTAddV1PvnCode, FTAddV1PostCode, FTAddV2Desc1,");
                oSql.AppendLine("FTAddV2Desc2, FTAddWebsite, FTAddLongitude, FTAddLatitude, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FNLngID, FTAddGrpType, FTAddRefCode, FTAddRefNo, FTAddName, FTAddTaxNo, FTAddRmk, FTAddCountry, FTAddVersion, ");
                oSql.AppendLine("FTAddV1No, FTAddV1Soi, FTAddV1Village, FTAddV1Road, FTAddV1SubDist, FTAddV1DstCode, FTAddV1PvnCode, FTAddV1PostCode, FTAddV2Desc1, ");
                oSql.AppendLine("FTAddV2Desc2, FTAddWebsite, FTAddLongitude, FTAddLatitude, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy");
                oSql.AppendLine("FROM TCNMAddressTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMAddressTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE UGP ");
                oSql.AppendLine("FROM TCNTUsrGroup UGP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTUsrGroupTmp UGPT WITH(NOLOCK) ON UGP.FTUsrCode = UGPT.FTUsrCode");
                oSql.AppendLine("   AND UGP.FTBchCode = UGPT.FTBchCode");
                //oSql.AppendLine("   AND UGP.FTUsrStaShop = UGPT.FTUsrStaShop");   //*Arm 63-06-16 Comment Code
                oSql.AppendLine("   AND UGP.FTAgnCode = UGPT.FTAgnCode");           //*Arm 63-06-16 ปรับตาม โครงสร้าง SKC
                oSql.AppendLine("   AND UGP.FTShpCode = UGPT.FTShpCode");           //*Arm 63-06-16 ปรับตาม โครงสร้าง SKC
                oSql.AppendLine("   AND UGP.FTMerCode = UGPT.FTMerCode");           //*Arm 63-06-16 ปรับตาม โครงสร้าง SKC
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTUsrGroup");
                oSql.AppendLine("SELECT * FROM TCNTUsrGroupTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTUsrGroupTmp");
                //*Em 62-09-02
                oSql.AppendLine("DELETE ULN ");
                oSql.AppendLine("FROM TCNMUsrLogin ULN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMUsrLoginTmp ULNT WITH(NOLOCK) ON ULN.FTUsrCode = ULNT.FTUsrCode");
                oSql.AppendLine("   AND ULN.FTUsrLogType = ULNT.FTUsrLogType");
                oSql.AppendLine("   AND ULN.FDUsrPwdStart = ULNT.FDUsrPwdStart");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMUsrLogin");
                oSql.AppendLine("SELECT * FROM TCNMUsrLoginTmp WITH(NOLOCK) ");
                //++++++++++++++++++++++
                //*Arm 63-06-16 TCNMUsrActRole
                oSql.AppendLine();
                oSql.AppendLine("DELETE UAR ");
                oSql.AppendLine("FROM TCNMUsrActRole UAR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMUsrActRoleTmp UART WITH(NOLOCK) ON");
                oSql.AppendLine("   UAR.FTUsrCode = UART.FTUsrCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMUsrActRole");
                oSql.AppendLine("SELECT * FROM TCNMUsrActRoleTmp WITH(NOLOCK) ");
                //++++++++++++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxUser : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbUser : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poUser = null;
                oSql = null;
                oTranscation = null;
                aoUsr = null;
                aoUsrLng = null;
                aoImgPerson = null;
                aoAddrLng = null;
                oUsr = null;
                oUsrLng = null;
                oImg = null;
                oAddrLng = null;
                aoUsrGrp = null;
                oUsrGrp = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list User
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMUserTmp> C_PRCaListUser(List<cmlResInfoUser> paoResUsr)
        {
            List<cmlTCNMUserTmp> aoUsr = new List<cmlTCNMUserTmp>();

            try
            {
                aoUsr = paoResUsr.Select(oItem => new cmlTCNMUserTmp()
                {
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTDptCode = oItem.rtDptCode,
                    //FTRolCode = oItem.rtRolCode,      //*Arm 63-06-16 ยกเลิกฟิลด์ ปรับตามโครงสร้าง SKC
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTUsrCode = oItem.rtUsrCode,
                    FTUsrEmail = oItem.rtUsrEmail,
                    //FTUsrPwd = oItem.rtUsrPwd,        //*Arm 63-06-16 ยกเลิกฟิลด์ ปรับตามโครงสร้าง SKC
                    FTUsrTel = oItem.rtUsrTel
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUser : " + oEx.Message); }
            finally
            {
                paoResUsr = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoUsr;
        }

        /// <summary>
        /// Process list User Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMUserTmp_L> C_PRCaListUserLng(List<cmlResInfoUserLng> paoResUsrLng)
        {
            List<cmlTCNMUserTmp_L> aoUsr = new List<cmlTCNMUserTmp_L>();

            try
            {
                aoUsr = paoResUsrLng.Select(oItem => new cmlTCNMUserTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTUsrCode = oItem.rtUsrCode,
                    FTUsrName = oItem.rtUsrName,
                    FTUsrRmk = oItem.rtUsrRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUserLng : " + oEx.Message); }
            finally
            {
                paoResUsrLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoUsr;
        }

        /// <summary>
        /// Process list User Group
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTUsrGroup> C_PRCaListUserGroup(List<cmlResInfoUserGrp> paoResUsrGrp)
        {
            List<cmlTCNTUsrGroup> aoUsr = new List<cmlTCNTUsrGroup>();

            try
            {
                aoUsr = paoResUsrGrp.Select(oItem => new cmlTCNTUsrGroup()
                {
                    FTBchCode = oItem.rtBchCode,
                    //FDUsrStart = oItem.rdUsrStart,        //*Arm 63-06-16 ยกเลิกฟิลด์ ปรับตามโครงสร้าง SKC
                    //FDUsrStop = oItem.rdUsrStop,          //*Arm 63-06-16 ยกเลิกฟิลด์ ปรับตามโครงสร้าง SKC
                    FTShpCode = oItem.rtShpCode,
                    FTUsrCode = oItem.rtUsrCode,
                    //FTUsrStaShop = oItem.rtUsrStaShop     //*Arm 63-06-16 ยกเลิกฟิลด์ ปรับตามโครงสร้าง SKC
                    FTMerCode = oItem.rtMerCode,            //*Arm 63-06-16 เพิ่มฟิลด์ ปรับตามโครงสร้าง SKC
                    FTAgnCode = oItem.rtAgnCode,            //*Arm 63-06-16 เพิ่มฟิลด์ ปรับตามโครงสร้าง SKC
                    FDCreateOn = oItem.rdCreateOn,          //*Arm 63-06-16 เพิ่มฟิลด์ ปรับตามโครงสร้าง SKC
                    FDLastUpdOn = oItem.rdLastUpdOn,        //*Arm 63-06-16 เพิ่มฟิลด์ ปรับตามโครงสร้าง SKC    
                    FTCreateBy = oItem.rtCreateBy,          //*Arm 63-06-16 เพิ่มฟิลด์ ปรับตามโครงสร้าง SKC
                    FTLastUpdBy = oItem.rtLastUpdBy         //*Arm 63-06-16 เพิ่มฟิลด์ ปรับตามโครงสร้าง SKC
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUserGroup : " + oEx.Message); }
            finally
            {
                paoResUsrGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoUsr;
        }

        /// <summary>
        /// Process list User Login
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMUsrLoginTmp> C_PRCaListUserLogin(List<cmlResTCNMUsrLogin> paoResUsrLogin)
        {
            List<cmlTCNMUsrLoginTmp> aoData = new List<cmlTCNMUsrLoginTmp>();

            try
            {
                aoData = paoResUsrLogin.Select(oItem => new cmlTCNMUsrLoginTmp()
                {
                    FTUsrCode = oItem.rtUsrCode,
                    FTUsrLogType = oItem.rtUsrLogType,
                    FDUsrPwdStart = oItem.rdUsrPwdStart,
                    FDUsrPwdExpired = oItem.rdUsrPwdExpired,
                    FTUsrLogin = oItem.rtUsrLogin,
                    FTUsrLoginPwd = oItem.rtUsrLoginPwd,
                    FTUsrRmk = oItem.rtUsrRmk,
                    FTUsrStaActive = oItem.rtUsrStaActive
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUserLogin : " + oEx.Message); }
            finally
            {
                paoResUsrLogin = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }
        /// <summary>
        /// Arm 63-06-16
        /// Process list User Login
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMUsrActRoleTmp> C_PRCaListUserActRole(List<cmlResInfoTCNMUsrActRole> paoResUsrActRole)
        {
            List<cmlTCNMUsrActRoleTmp> aoData = new List<cmlTCNMUsrActRoleTmp>();

            try
            {
                aoData = paoResUsrActRole.Select(oItem => new cmlTCNMUsrActRoleTmp()
                {
                    FTRolCode = oItem.rtRolCode,
                    FTUsrCode = oItem.rtUsrCode,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUserActRole : " + oEx.Message); }
            finally
            {
                paoResUsrActRole = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }
        #endregion End User

        #region Role

        /// <summary>
        /// Download Role
        /// </summary>
        /// <param name="poRole"></param>
        //private void C_DWNxRole(cmlResItemOfcmlResRoleDwn poRole)
        private bool C_DWNbRole(cmlResItemOfcmlResRoleDwn poRole)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNTUsrFuncRpt> aoRole;
            List<cmlTCNTUsrMenu> aoUsrMenu;
            cDataReaderAdapter<cmlTCNTUsrFuncRpt> oRole;
            cDataReaderAdapter<cmlTCNTUsrMenu> oUsrMenu;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTUsrFuncRptTmp");
                //oSql.AppendLine("FROM TCNTUsrFuncRpt WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTUsrMenuTmp");
                //oSql.AppendLine("FROM TCNTUsrMenu WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTUsrFuncRptTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTUsrFuncRptTmp FROM TCNTUsrFuncRpt with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTUsrFuncRptTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTUsrMenuTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTUsrMenuTmp FROM TCNTUsrMenu with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTUsrMenuTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNTUsrFuncRptTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTUsrFuncRptTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTUsrFuncRptTmp FROM TCNTUsrFuncRpt with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUsrFuncRptTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUsrFuncRpt' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTUsrFuncRptTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTUsrFuncRptTmp FROM TCNTUsrFuncRpt with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTUsrFuncRptTmp");
                oSql.AppendLine("");

                // TCNTUsrMenuTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTUsrMenuTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTUsrMenuTmp FROM TCNTUsrMenu with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUsrMenuTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTUsrMenu' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTUsrMenuTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTUsrMenuTmp FROM TCNTUsrMenu with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTUsrMenuTmp");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNTUsrFuncRpt
                aoRole = C_PRCaListRole(poRole.roItem.raFuncRpt);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRole = new cDataReaderAdapter<cmlTCNTUsrFuncRpt>(aoRole);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oRole.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTUsrFuncRptTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oRole);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbRole : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSubDistrict_L
                aoUsrMenu = C_PRCaListUserMenu(poRole.roItem.raUsrMenu);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oUsrMenu = new cDataReaderAdapter<cmlTCNTUsrMenu>(aoUsrMenu);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oUsrMenu.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTUsrMenuTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oUsrMenu);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbRole : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE ROL ");
                oSql.AppendLine("FROM TCNTUsrFuncRpt ROL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTUsrFuncRptTmp ROLT WITH(NOLOCK) ON ROL.FTRolCode = ROLT.FTRolCode");
                //oSql.AppendLine("   AND ROL.FTUfrType = ROLT.FTUfrType");
                //oSql.AppendLine("   AND ROL.FTUfrGrpRef = ROLT.FTUfrGrpRef");
                //oSql.AppendLine("   AND ROL.FTUfrRef = ROLT.FTUfrRef");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTUsrFuncRpt");
                oSql.AppendLine("SELECT * FROM TCNTUsrFuncRptTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTUsrFuncRptTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE UMN ");
                oSql.AppendLine("FROM TCNTUsrMenu UMN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTUsrMenuTmp UMNT WITH(NOLOCK) ON UMN.FTRolCode = UMNT.FTRolCode");
                oSql.AppendLine("   AND UMN.FTGmnCode = UMNT.FTGmnCode");
                oSql.AppendLine("   AND UMN.FTMnuParent = UMNT.FTMnuParent");
                oSql.AppendLine("   AND UMN.FTMnuCode = UMNT.FTMnuCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTUsrMenu");
                oSql.AppendLine("SELECT * FROM TCNTUsrMenuTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTUsrMenuTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxRole : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbRole : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poRole = null;
                oSql = null;
                oTranscation = null;
                aoRole = null;
                aoUsrMenu = null;
                oRole = null;
                oUsrMenu = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Role
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTUsrFuncRpt> C_PRCaListRole(List<cmlResInfoFuncRpt> paoResRole)
        {
            List<cmlTCNTUsrFuncRpt> aoRole = new List<cmlTCNTUsrFuncRpt>();

            try
            {
                aoRole = paoResRole.Select(oItem => new cmlTCNTUsrFuncRpt()
                {
                    FTRolCode = oItem.rtRolCode,
                    FTUfrGrpRef = oItem.rtUfrGrpRef,
                    FTUfrRef = oItem.rtUfrRef,
                    FTUfrStaAlw = oItem.rtUfrStaAlw,
                    FTUfrStaFavorite = oItem.rtUfrStaFavorite,
                    FTUfrType = oItem.rtUfrType,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRole : " + oEx.Message); }
            finally
            {
                paoResRole = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRole;
        }

        /// <summary>
        /// Process list User menu
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTUsrMenu> C_PRCaListUserMenu(List<cmlResInfoUsrMenu> paoResUsrMenu)
        {
            List<cmlTCNTUsrMenu> aoUsrMenu = new List<cmlTCNTUsrMenu>();

            try
            {
                aoUsrMenu = paoResUsrMenu.Select(oItem => new cmlTCNTUsrMenu()
                {
                    FTAutStaAdd = oItem.rtAutStaAdd,
                    FTAutStaAppv = oItem.rtAutStaAppv,
                    FTAutStaCancel = oItem.rtAutStaCancel,
                    FTAutStaDelete = oItem.rtAutStaDelete,
                    FTAutStaEdit = oItem.rtAutStaEdit,
                    FTAutStaFavorite = oItem.rtAutStaFavorite,
                    FTAutStaFull = oItem.rtAutStaFull,
                    FTAutStaPrint = oItem.rtAutStaPrint,
                    FTAutStaPrintMore = oItem.rtAutStaPrintMore,
                    FTAutStaRead = oItem.rtAutStaRead,
                    FTGmnCode = oItem.rtGmnCode,
                    FTMnuCode = oItem.rtMnuCode,
                    FTMnuParent = oItem.rtMnuParent,
                    FTRolCode = oItem.rtRolCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUserMenu : " + oEx.Message); }
            finally
            {
                paoResUsrMenu = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoUsrMenu;
        }

        #endregion End Role

        #region User Department

        /// <summary>
        /// Download User Department
        /// </summary>
        /// <param name="poDpt"></param>
        //private void C_DWNxUsrDepart(cmlResItemOfcmlResUsrDepDwn poDpt)
        private bool C_DWNbUsrDepart(cmlResItemOfcmlResUsrDepDwn poDpt)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMUsrDepartTmp> aoDpt;
            List<cmlTCNMUsrDepartTmp_L> aoDptLng;
            cDataReaderAdapter<cmlTCNMUsrDepartTmp> oDpt;
            cDataReaderAdapter<cmlTCNMUsrDepartTmp_L> oDptLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMUsrDepartTmp");
                //oSql.AppendLine("FROM TCNMUsrDepart WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMUsrDepartTmp_L");
                //oSql.AppendLine("FROM TCNMUsrDepart_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrDepartTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMUsrDepartTmp FROM TCNMUsrDepart with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMUsrDepartTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrDepartTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMUsrDepartTmp_L FROM TCNMUsrDepart_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMUsrDepartTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMUsrDepartTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrDepartTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMUsrDepartTmp FROM TCNMUsrDepart with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrDepartTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrDepart' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMUsrDepartTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMUsrDepartTmp FROM TCNMUsrDepart with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMUsrDepartTmp");
                oSql.AppendLine("");

                // TCNMUsrDepartTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrDepartTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMUsrDepartTmp_L FROM TCNMUsrDepart_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrDepartTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrDepart_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMUsrDepartTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMUsrDepartTmp_L FROM TCNMUsrDepart_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMUsrDepartTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMUsrDepart
                aoDpt = C_PRCaListUsrDepart(poDpt.roItem.raUsrDep);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oDpt = new cDataReaderAdapter<cmlTCNMUsrDepartTmp>(aoDpt);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oDpt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMUsrDepartTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oDpt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUsrDepart : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMUsrDepart_L
                aoDptLng = C_PRCaListUsrDepartLng(poDpt.roItem.raUsrDepLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oDptLng = new cDataReaderAdapter<cmlTCNMUsrDepartTmp_L>(aoDptLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oDptLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMUsrDepartTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oDptLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUsrDepart : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE DPT ");
                oSql.AppendLine("FROM TCNMUsrDepart DPT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMUsrDepartTmp DPTT WITH(NOLOCK) ON DPT.FTDptCode = DPTT.FTDptCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMUsrDepart");
                oSql.AppendLine("SELECT * FROM TCNMUsrDepartTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMUsrDepartTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE DPTL ");
                oSql.AppendLine("FROM TCNMUsrDepart_L DPTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMUsrDepartTmp_L DPTLT WITH(NOLOCK) ON DPTL.FTDptCode = DPTLT.FTDptCode");
                oSql.AppendLine("   AND DPTL.FNLngID = DPTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMUsrDepart_L");
                oSql.AppendLine("SELECT * FROM TCNMUsrDepartTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMUsrDepartTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxUsrDepart : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbUsrDepart : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poDpt = null;
                oSql = null;
                oTranscation = null;
                aoDpt = null;
                aoDptLng = null;
                oDpt = null;
                oDptLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list User Department
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMUsrDepartTmp> C_PRCaListUsrDepart(List<cmlResInfoUsrDep> paoResDpt)
        {
            List<cmlTCNMUsrDepartTmp> aoDpt = new List<cmlTCNMUsrDepartTmp>();

            try
            {
                aoDpt = paoResDpt.Select(oItem => new cmlTCNMUsrDepartTmp()
                {
                    FTDptCode = oItem.rtDptCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUsrDepart : " + oEx.Message); }
            finally
            {
                paoResDpt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoDpt;
        }

        /// <summary>
        /// Process list User Department Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMUsrDepartTmp_L> C_PRCaListUsrDepartLng(List<cmlResInfoUsrDepLng> paoResDptLng)
        {
            List<cmlTCNMUsrDepartTmp_L> aoDpt = new List<cmlTCNMUsrDepartTmp_L>();

            try
            {
                aoDpt = paoResDptLng.Select(oItem => new cmlTCNMUsrDepartTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTDptCode = oItem.rtDptCode,
                    FTDptName = oItem.rtDptName,
                    FTDptRmk = oItem.rtDptRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUsrDepartLng : " + oEx.Message); }
            finally
            {
                paoResDptLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoDpt;
        }

        #endregion End User Department

        #region User Role

        /// <summary>
        /// Download User Role
        /// </summary>
        /// <param name="poRole"></param>
        //private void C_DWNxUsrRole(cmlResItemOfcmlResUserRoleDwn poRole)
        private bool C_DWNbUsrRole(cmlResItemOfcmlResUserRoleDwn poRole)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            //List<cmlTCNMUsrRoleTmp> aoRol;
            //List<cmlTCNMUsrRoleTmp_L> aoRolLng;

            //cDataReaderAdapter<cmlTCNMUsrRoleTmp> oRol;
            //cDataReaderAdapter<cmlTCNMUsrRoleTmp_L> oRolLng;

            List<cmlTCNMUsrActRoleTmp> aoActRol;  //*Arm 63-06-17
            cDataReaderAdapter<cmlTCNMUsrActRoleTmp> oActRol;  //*Arm 63-06-17
            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMUsrRoleTmp");
                //oSql.AppendLine("FROM TCNMUsrRole WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMUsrRoleTmp_L");
                //oSql.AppendLine("FROM TCNMUsrRole_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrRoleTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMUsrRoleTmp FROM TCNMUsrRole with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMUsrRoleTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrRoleTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMUsrRoleTmp_L FROM TCNMUsrRole_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMUsrRoleTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMUsrRoleTmp
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrRoleTmp'))");
                //oSql.AppendLine("   BEGIN");
                //oSql.AppendLine("       SELECT TOP 0 * INTO TCNMUsrRoleTmp FROM TCNMUsrRole with(nolock)");
                //oSql.AppendLine("   END");
                //oSql.AppendLine("ELSE");
                //oSql.AppendLine("   BEGIN");
                //oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrRoleTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrRole' ),0) ");
                //oSql.AppendLine("       BEGIN");
                //oSql.AppendLine("           DROP TABLE TCNMUsrRoleTmp");
                //oSql.AppendLine("           SELECT TOP 0 * INTO TCNMUsrRoleTmp FROM TCNMUsrRole with(nolock)");
                //oSql.AppendLine("       END");
                //oSql.AppendLine("   END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMUsrRoleTmp");
                //oSql.AppendLine("");

                //// TCNMUsrRoleTmp_L
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMUsrRoleTmp_L'))");
                //oSql.AppendLine("   BEGIN");
                //oSql.AppendLine("       SELECT TOP 0 * INTO TCNMUsrRoleTmp_L FROM TCNMUsrRole_L with(nolock)");
                //oSql.AppendLine("   END");
                //oSql.AppendLine("ELSE");
                //oSql.AppendLine("   BEGIN");
                //oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrRoleTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMUsrRole_L' ),0) ");
                //oSql.AppendLine("       BEGIN");
                //oSql.AppendLine("           DROP TABLE TCNMUsrRoleTmp_L");
                //oSql.AppendLine("           SELECT TOP 0 * INTO TCNMUsrRoleTmp_L FROM TCNMUsrRole_L with(nolock)");
                //oSql.AppendLine("       END");
                //oSql.AppendLine("   END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMUsrRoleTmp_L");
                ////+++++++++++++++++++++++

                //new cDatabase().C_SETxDataQuery(oSql.ToString());

                new cDatabase().C_PRCxCreateDatabaseTmp("TCNMUsrActRole", "TCNMUsrActRoleTmp");
                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                //// Bulk Copy : TCNMUsrRole
                //aoRol = C_PRCaListUsrRole(poRole.roItem.raUserRole);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                //oRol = new cDataReaderAdapter<cmlTCNMUsrRoleTmp>(aoRol);

                //using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                //{
                //    //*Em 62-08-23
                //    foreach (string tColName in oRol.ColumnNames)
                //    {
                //        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                //    }
                //    //+++++++++++++
                //    oBulkCopy.BatchSize = 100;
                //    oBulkCopy.DestinationTableName = "dbo.TCNMUsrRoleTmp";

                //    try
                //    {
                //        oBulkCopy.WriteToServer(oRol);
                //    }
                //    catch (Exception oEx)
                //    {
                //        oTranscation.Rollback();
                //        new cLog().C_WRTxLog("cSyncData", "C_DWNbUsrRole/TCNMUsrRoleTmp : " + oEx.Message);//*Em 61-11-13
                //        return false;//*Em 61-11-13
                //    }
                //}

                ////oTranscation.Commit();

                //// Bulk Copy : TCNMUsrRole_L
                //aoRolLng = C_PRCaListUsrRoleLng(poRole.roItem.raUserRoleLng);

                ////oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                //oRolLng = new cDataReaderAdapter<cmlTCNMUsrRoleTmp_L>(aoRolLng);

                //using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                //{
                //    //*Em 62-08-23
                //    foreach (string tColName in oRolLng.ColumnNames)
                //    {
                //        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                //    }
                //    //+++++++++++++
                //    oBulkCopy.BatchSize = 100;
                //    oBulkCopy.DestinationTableName = "dbo.TCNMUsrRoleTmp_L";

                //    try
                //    {
                //        oBulkCopy.WriteToServer(oRolLng);
                //    }
                //    catch (Exception oEx)
                //    {
                //        oTranscation.Rollback();
                //        new cLog().C_WRTxLog("cSyncData", "C_DWNbUsrRole/TCNMUsrRoleTmp_L : " + oEx.Message);//*Em 61-11-13
                //        return false;//*Em 61-11-13
                //    }
                //}

                // Bulk Copy : TCNMUsrActRole
                aoActRol = C_PRCaListUserActRole(poRole.roItem.raUsrActRole);
                oActRol = new cDataReaderAdapter<cmlTCNMUsrActRoleTmp>(aoActRol);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oActRol.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMUsrActRoleTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oActRol);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbUsrRole/TCNMUsrActRoleTmp : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                //oSql.AppendLine("DELETE ROL ");
                //oSql.AppendLine("FROM TCNMUsrRole ROL WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TCNMUsrRoleTmp ROLT WITH(NOLOCK) ON ROL.FTRolCode = ROLT.FTRolCode");
                //oSql.AppendLine();
                //oSql.AppendLine("INSERT INTO TCNMUsrRole");
                //oSql.AppendLine("SELECT * FROM TCNMUsrRoleTmp WITH(NOLOCK) ");
                //oSql.AppendLine();
                ////oSql.AppendLine("DROP TABLE TCNMUsrRoleTmp");
                //oSql.AppendLine();
                //oSql.AppendLine("DELETE ROLL ");
                //oSql.AppendLine("FROM TCNMUsrRole_L ROLL WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TCNMUsrRoleTmp_L ROLLT WITH(NOLOCK) ON ROLL.FTRolCode = ROLLT.FTRolCode");
                //oSql.AppendLine("   AND ROLL.FNLngID = ROLLT.FNLngID");
                //oSql.AppendLine();
                //oSql.AppendLine("INSERT INTO TCNMUsrRole_L");
                //oSql.AppendLine("SELECT * FROM TCNMUsrRoleTmp_L WITH(NOLOCK) ");
                //oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMUsrRoleTmp_L");

                //*Arm 63-06-17 TCNMUsrActRole
                oSql.AppendLine();
                oSql.AppendLine("DELETE UAR ");
                oSql.AppendLine("FROM TCNMUsrActRole UAR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMUsrActRoleTmp UART WITH(NOLOCK) ON");
                oSql.AppendLine("   UAR.FTUsrCode = UART.FTUsrCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMUsrActRole");
                oSql.AppendLine("SELECT * FROM TCNMUsrActRoleTmp WITH(NOLOCK) ");
                //++++++++++++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxUsrRole : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbUsrRole : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poRole = null;
                oSql = null;
                oTranscation = null;
                //aoRol = null;
                //aoRolLng = null;
                //oRol = null;
                //oRolLng = null;
                aoActRol = null;
                oActRol = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list User Role
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMUsrRoleTmp> C_PRCaListUsrRole(List<cmlResInfoUserRole> paoResRole)
        {
            List<cmlTCNMUsrRoleTmp> aoRole = new List<cmlTCNMUsrRoleTmp>();

            try
            {
                aoRole = paoResRole.Select(oItem => new cmlTCNMUsrRoleTmp()
                {
                    FNRolLevel = oItem.rnRolLevel,
                    FTRolCode = oItem.rtRolCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUsrRole : " + oEx.Message); }
            finally
            {
                paoResRole = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRole;
        }

        /// <summary>
        /// Process list User Role Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMUsrRoleTmp_L> C_PRCaListUsrRoleLng(List<cmlResInfoUserRoleLng> paoResRoleLng)
        {
            List<cmlTCNMUsrRoleTmp_L> aoRole = new List<cmlTCNMUsrRoleTmp_L>();

            try
            {
                aoRole = paoResRoleLng.Select(oItem => new cmlTCNMUsrRoleTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTRolCode = oItem.rtRolCode,
                    FTRolName = oItem.rtRolName,
                    FTRolRmk = oItem.rtRolRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListUsrRoleLng : " + oEx.Message); }
            finally
            {
                paoResRoleLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRole;
        }

        #endregion End User Role

        #region Sale Person

        /// <summary>
        /// Download Sale Person
        /// </summary>
        /// <param name="poSpn"></param>
        //private void C_DWNxSalePerson(cmlResItemOfcmlResSpnDwn poSpn)
        private bool C_DWNbSalePerson(cmlResItemOfcmlResSpnDwn poSpn)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSpnTmp> aoSpn;
            List<cmlTCNMSpnTmp_L> aoSpnLng;
            List<cmlTCNMAddressTmp_L> aoAddrLng;
            List<cmlTCNTSpnGroup> aoSpnGrp;
            cDataReaderAdapter<cmlTCNMSpnTmp> oSpn;
            cDataReaderAdapter<cmlTCNMSpnTmp_L> oSpnLng;
            cDataReaderAdapter<cmlTCNMAddressTmp_L> oAddrLng;
            cDataReaderAdapter<cmlTCNTSpnGroup> oSpnGrp;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSpnTmp");
                //oSql.AppendLine("FROM TCNMSpn WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSpnTmp_L");
                //oSql.AppendLine("FROM TCNMSpn_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMAddressTmp_L");
                //oSql.AppendLine("FROM TCNMAddress_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTSpnGroupTmp");
                //oSql.AppendLine("FROM TCNTSpnGroup WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSpnTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSpnTmp FROM TCNMSpn with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSpnTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSpnTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSpnTmp_L FROM TCNMSpn_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSpnTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAddressTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMAddressTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTSpnGroupTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTSpnGroupTmp FROM TCNTSpnGroup with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTSpnGroupTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMSpnTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSpnTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSpnTmp FROM TCNMSpn with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSpnTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSpn' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSpnTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSpnTmp FROM TCNMSpn with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSpnTmp");
                oSql.AppendLine("");

                // TCNMSpnTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSpnTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSpnTmp_L FROM TCNMSpn_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSpnTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSpn_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSpnTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSpnTmp_L FROM TCNMSpn_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSpnTmp_L");
                oSql.AppendLine("");

                // TCNMAddressTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAddressTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddressTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddress_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMAddressTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAddressTmp_L");
                oSql.AppendLine("");

                // TCNTSpnGroupTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTSpnGroupTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTSpnGroupTmp FROM TCNTSpnGroup with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTSpnGroupTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTSpnGroup' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTSpnGroupTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTSpnGroupTmp FROM TCNTSpnGroup with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTSpnGroupTmp");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSpn
                aoSpn = C_PRCaListSalePerson(poSpn.roItem.raSpn);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSpn = new cDataReaderAdapter<cmlTCNMSpnTmp>(aoSpn);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSpn.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSpnTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSpn);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSalePerson : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSpn_L
                aoSpnLng = C_PRCaListSalePersonLng(poSpn.roItem.raSpnLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSpnLng = new cDataReaderAdapter<cmlTCNMSpnTmp_L>(aoSpnLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSpnLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSpnTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSpnLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSalePerson : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMAddress_L
                aoAddrLng = C_PRCaListAddressLng(poSpn.roItem.raAddrLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oAddrLng = new cDataReaderAdapter<cmlTCNMAddressTmp_L>(aoAddrLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oAddrLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAddressTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oAddrLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSalePerson : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNTSpnGroup
                aoSpnGrp = C_PRCaListSalePersonGroup(poSpn.roItem.raSpnGrp);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSpnGrp = new cDataReaderAdapter<cmlTCNTSpnGroup>(aoSpnGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSpnGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTSpnGroupTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSpnGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSalePerson : " + oEx.Message);//*Em 61-11-13
                        return false;//*Em 61-11-13
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SPN ");
                oSql.AppendLine("FROM TCNMSpn SPN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSpnTmp SPNT WITH(NOLOCK) ON SPN.FTSpnCode = SPNT.FTSpnCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSpn");
                oSql.AppendLine("SELECT * FROM TCNMSpnTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSpnTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SPNL ");
                oSql.AppendLine("FROM TCNMSpn_L SPNL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSpnTmp_L SPNLT WITH(NOLOCK) ON SPNL.FTSpnCode = SPNLT.FTSpnCode");
                oSql.AppendLine("   AND  SPNL.FNLngID = SPNLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSpn_L");
                oSql.AppendLine("SELECT * FROM TCNMSpnTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSpnTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE ADDR ");
                oSql.AppendLine("FROM TCNMAddress_L ADDR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMAddressTmp_L ADDRT WITH(NOLOCK) ON ADDR.FTAddGrpType = ADDRT.FTAddGrpType");
                oSql.AppendLine("   AND ADDR.FTAddRefCode = ADDRT.FTAddRefCode");
                //oSql.AppendLine("   AND ADDR.FNAddSeqNo = ADDRT.FNAddSeqNo");     //*Arm 63-04-09 Comment
                oSql.AppendLine("   AND ADDR.FTAddRefNo = ADDRT.FTAddRefNo");       //*Arm 63-04-09
                oSql.AppendLine("   AND ADDR.FNLngID = ADDRT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMAddress_L");
                oSql.AppendLine("(FNLngID, FTAddGrpType, FTAddRefCode, FTAddRefNo, FTAddName, FTAddTaxNo, FTAddRmk, FTAddCountry, FTAddVersion, ");
                oSql.AppendLine("FTAddV1No, FTAddV1Soi, FTAddV1Village, FTAddV1Road, FTAddV1SubDist, FTAddV1DstCode, FTAddV1PvnCode, FTAddV1PostCode, FTAddV2Desc1,");
                oSql.AppendLine("FTAddV2Desc2, FTAddWebsite, FTAddLongitude, FTAddLatitude, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FNLngID, FTAddGrpType, FTAddRefCode, FTAddRefNo, FTAddName, FTAddTaxNo, FTAddRmk, FTAddCountry, FTAddVersion, ");
                oSql.AppendLine("FTAddV1No, FTAddV1Soi, FTAddV1Village, FTAddV1Road, FTAddV1SubDist, FTAddV1DstCode, FTAddV1PvnCode, FTAddV1PostCode, FTAddV2Desc1, ");
                oSql.AppendLine("FTAddV2Desc2, FTAddWebsite, FTAddLongitude, FTAddLatitude, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy");
                oSql.AppendLine("FROM TCNMAddressTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMAddressTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SGP ");
                oSql.AppendLine("FROM TCNTSpnGroup SGP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTSpnGroupTmp SGPT WITH(NOLOCK) ON SGP.FTSpnCode = SGPT.FTSpnCode");
                oSql.AppendLine("   AND SGP.FTBchCode = SGPT.FTBchCode");
                oSql.AppendLine("   AND SGP.FTSpnStaShop = SGPT.FTSpnStaShop");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTSpnGroup");
                oSql.AppendLine("SELECT * FROM TCNTSpnGroupTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTSpnGroupTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSalePerson : " + oEx.Message); }
            //*Em 61-11-13
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSalePerson : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poSpn = null;
                oSql = null;
                oTranscation = null;
                aoSpn = null;
                aoSpnLng = null;
                aoAddrLng = null;
                oSpn = null;
                oSpnLng = null;
                oAddrLng = null;
                aoSpnGrp = null;
                oSpnGrp = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Sale Person
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSpnTmp> C_PRCaListSalePerson(List<cmlResInfoSpn> paoResSpn)
        {
            List<cmlTCNMSpnTmp> aoSpn = new List<cmlTCNMSpnTmp>();

            try
            {
                aoSpn = paoResSpn.Select(oItem => new cmlTCNMSpnTmp()
                {
                    FCSpnSleAmt = oItem.rcSpnSleAmt,
                    FTSpnCode = oItem.rtSpnCode,
                    FTSpnEmail = oItem.rtSpnEmail,
                    FTSpnTel = oItem.rtSpnTel,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSalePerson : " + oEx.Message); }
            finally
            {
                paoResSpn = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSpn;
        }

        /// <summary>
        /// Process list Sale Person Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSpnTmp_L> C_PRCaListSalePersonLng(List<cmlResInfoSpnLng> paoResSpnLng)
        {
            List<cmlTCNMSpnTmp_L> aoSpn = new List<cmlTCNMSpnTmp_L>();

            try
            {
                aoSpn = paoResSpnLng.Select(oItem => new cmlTCNMSpnTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSpnCode = oItem.rtSpnCode,
                    FTSpnName = oItem.rtSpnName,
                    FTSpnRmk = oItem.rtSpnRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSalePersonLng : " + oEx.Message); }
            finally
            {
                paoResSpnLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSpn;
        }

        /// <summary>
        /// Process list Sale Person Group
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTSpnGroup> C_PRCaListSalePersonGroup(List<cmlResInfoSpnGrp> paoResSpnGrp)
        {
            List<cmlTCNTSpnGroup> aoSpn = new List<cmlTCNTSpnGroup>();

            try
            {
                aoSpn = paoResSpnGrp.Select(oItem => new cmlTCNTSpnGroup()
                {
                    FTBchCode = oItem.rtBchCode,
                    FDSpnStart = oItem.rdSpnStart,
                    FDSpnStop = oItem.rdSpnStop,
                    FTShpCode = oItem.rtShpCode,
                    FTSpnCode = oItem.rtSpnCode,
                    FTSpnStaShop = oItem.rtSpnStaShop
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSalePersonGroup : " + oEx.Message); }
            finally
            {
                paoResSpnGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSpn;
        }

        #endregion End Sale Person

        #region Reason

        /// <summary>
        /// Download Reason
        /// </summary>
        /// <param name="poRsn"></param>
        //private void C_DWNxReason(cmlResItemOfcmlResRsnDwn poRsn)
        private bool C_DWNbReason(cmlResItemOfcmlResRsnDwn poRsn)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMRsnTmp> aoRsn;
            List<cmlTCNMRsnTmp_L> aoRsnLng;
            List<cmlTSysRsnGrp_L> aoRsnGrp;
            cDataReaderAdapter<cmlTCNMRsnTmp> oRsn;
            cDataReaderAdapter<cmlTCNMRsnTmp_L> oRsnLng;
            cDataReaderAdapter<cmlTSysRsnGrp_L> oRsnGrp;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMRsnTmp");
                //oSql.AppendLine("FROM TCNMRsn WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMRsnTmp_L");
                //oSql.AppendLine("FROM TCNMRsn_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysRsnGrpTmp_L");
                //oSql.AppendLine("FROM TSysRsnGrp_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMRsnTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMRsnTmp FROM TCNMRsn with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMRsnTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMRsnTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMRsnTmp_L FROM TCNMRsn_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMRsnTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysRsnGrpTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysRsnGrpTmp_L FROM TSysRsnGrp_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysRsnGrpTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMRsnTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMRsnTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMRsnTmp FROM TCNMRsn with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMRsnTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMRsn' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMRsnTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMRsnTmp FROM TCNMRsn with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMRsnTmp");
                oSql.AppendLine("");

                // TCNMRsnTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMRsnTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMRsnTmp_L FROM TCNMRsn_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMRsnTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMRsn_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMRsnTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMRsnTmp_L FROM TCNMRsn_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMRsnTmp_L");
                oSql.AppendLine("");

                // TSysRsnGrpTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysRsnGrpTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysRsnGrpTmp_L FROM TSysRsnGrp_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRsnGrpTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRsnGrp_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysRsnGrpTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysRsnGrpTmp_L FROM TSysRsnGrp_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysRsnGrpTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMRsn
                aoRsn = C_PRCaListReason(poRsn.roItem.raRsn);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRsn = new cDataReaderAdapter<cmlTCNMRsnTmp>(aoRsn);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oRsn.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMRsnTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oRsn);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbReason : " + oEx.Message);//*Em 61-11-13 
                        return false;//*Em 61-11-13 
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMRsn_L
                aoRsnLng = C_PRCaListReasonLng(poRsn.roItem.raRsnLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRsnLng = new cDataReaderAdapter<cmlTCNMRsnTmp_L>(aoRsnLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oRsnLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMRsnTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oRsnLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbReason : " + oEx.Message);//*Em 61-11-13 
                        return false;//*Em 61-11-13 
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TSysRsnGrp_L
                aoRsnGrp = C_PRCaListReasonGroup(poRsn.roItem.raRsnGrpLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRsnGrp = new cDataReaderAdapter<cmlTSysRsnGrp_L>(aoRsnGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oRsnGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysRsnGrpTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oRsnGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbReason : " + oEx.Message);//*Em 61-11-13 
                        return false;//*Em 61-11-13 
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE RSN ");
                oSql.AppendLine("FROM TCNMRsn RSN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMRsnTmp RSNT WITH(NOLOCK) ON RSN.FTRsnCode = RSNT.FTRsnCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMRsn");
                oSql.AppendLine("SELECT * FROM TCNMRsnTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMRsnTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE RSNL ");
                oSql.AppendLine("FROM TCNMRsn_L RSNL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMRsnTmp_L RSNLT WITH(NOLOCK) ON RSNL.FTRsnCode = RSNLT.FTRsnCode");
                oSql.AppendLine("   AND  RSNL.FNLngID = RSNLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMRsn_L");
                oSql.AppendLine("SELECT * FROM TCNMRsnTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMRsnTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE RSG ");
                oSql.AppendLine("FROM TSysRsnGrp_L RSG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN  TSysRsnGrpTmp_L RSGT WITH(NOLOCK) ON RSG.FTRsgCode = RSGT.FTRsgCode");
                oSql.AppendLine("   AND RSG.FNLngID = RSGT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysRsnGrp_L");
                oSql.AppendLine("SELECT * FROM TSysRsnGrpTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysRsnGrpTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-13 
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxReason : " + oEx.Message); }
            //*Em 61-11-13 
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbReason : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poRsn = null;
                oSql = null;
                oTranscation = null;
                aoRsn = null;
                aoRsnLng = null;
                oRsn = null;
                oRsnLng = null;
                aoRsnGrp = null;
                oRsnGrp = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Reason
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMRsnTmp> C_PRCaListReason(List<cmlResInfoRsn> paoResRsn)
        {
            List<cmlTCNMRsnTmp> aoRsn = new List<cmlTCNMRsnTmp>();

            try
            {
                aoRsn = paoResRsn.Select(oItem => new cmlTCNMRsnTmp()
                {
                    FTRsgCode = oItem.rtRsgCode,
                    FTRsnCode = oItem.rtRsnCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListReason : " + oEx.Message); }
            finally
            {
                paoResRsn = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRsn;
        }

        /// <summary>
        /// Process list Reason Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMRsnTmp_L> C_PRCaListReasonLng(List<cmlResInfoRsnLng> paoResRsnLng)
        {
            List<cmlTCNMRsnTmp_L> aoRsn = new List<cmlTCNMRsnTmp_L>();

            try
            {
                aoRsn = paoResRsnLng.Select(oItem => new cmlTCNMRsnTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTRsnCode = oItem.rtRsnCode,
                    FTRsnName = oItem.rtRsnName,
                    FTRsnRmk = oItem.rtRsnRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListReasonLng : " + oEx.Message); }
            finally
            {
                paoResRsnLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRsn;
        }

        /// <summary>
        /// Process list Reason Group
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysRsnGrp_L> C_PRCaListReasonGroup(List<cmlResInfoRsnGrpLng> paoResRsnGrp)
        {
            List<cmlTSysRsnGrp_L> aoRsn = new List<cmlTSysRsnGrp_L>();

            try
            {
                aoRsn = paoResRsnGrp.Select(oItem => new cmlTSysRsnGrp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTRsgCode = oItem.rtRsgCode,
                    FTRsgName = oItem.rtRsgName,
                    FTRsgRmk = oItem.rtRsgRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListReasonGroup : " + oEx.Message); }
            finally
            {
                paoResRsnGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRsn;
        }

        #endregion End Reason

        #region Receive

        /// <summary>
        /// Download Receive
        /// </summary>
        /// <param name="poRcv"></param>
        //private void C_DWNxReceive(cmlResItemOfcmlResRcvDwn poRcv)
        private bool C_DWNbReceive(cmlResItemOfcmlResRcvDwn poRcv)

        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMRcvTmp> aoRcv;
            List<cmlTFNMRcvTmp_L> aoRcvLng;
            List<cmlTFNMRcvSpcTmp> aoRcvSpc;    //*Arm 63-04-24
            cDataReaderAdapter<cmlTFNMRcvTmp> oRcv;
            cDataReaderAdapter<cmlTFNMRcvTmp_L> oRcvLng;
            cDataReaderAdapter<cmlTFNMRcvSpcTmp> oRcvSpc;   //*Arm 63-04-24

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMRcvTmp");
                //oSql.AppendLine("FROM TFNMRcv WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMRcvTmp_L");
                //oSql.AppendLine("FROM TFNMRcv_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRcvTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMRcvTmp FROM TFNMRcv with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMRcvTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRcvTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMRcvTmp_L FROM TFNMRcv_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMRcvTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMRcvTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRcvTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMRcvTmp FROM TFNMRcv with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRcvTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRcv' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMRcvTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMRcvTmp FROM TFNMRcv with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMRcvTmp");

                // TFNMRcvTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRcvTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMRcvTmp_L FROM TFNMRcv_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRcvTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRcv_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMRcvTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMRcvTmp_L FROM TFNMRcv_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMRcvTmp_L");
                //+++++++++++++++++++++++

                //*Arm 63-04-24 RcvSpc
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRcvSpcTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TFNMRcvSpcTmp FROM TFNMRcvSpc with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRcvSpcTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRcvSpc' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TFNMRcvSpcTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TFNMRcvSpcTmp FROM TFNMRcvSpc with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMRcvSpcTmp");
                //+++++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMRcv
                aoRcv = C_PRCaListReceive(poRcv.roItem.raRcv);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRcv = new cDataReaderAdapter<cmlTFNMRcvTmp>(aoRcv);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oRcv.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMRcvTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oRcv);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbReceive/TFNMRcvTmp : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMRcv_L
                aoRcvLng = C_PRCaListReceiveLng(poRcv.roItem.raRcvLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRcvLng = new cDataReaderAdapter<cmlTFNMRcvTmp_L>(aoRcvLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oRcvLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMRcvTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oRcvLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbReceive/TFNMRcvTmp_L : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                // Bulk Copy : TFNMRcvSpc
                aoRcvSpc = C_PRCaListReceiveSpc(poRcv.roItem.raRcvSpc);

                oRcvSpc = new cDataReaderAdapter<cmlTFNMRcvSpcTmp>(aoRcvSpc);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {

                    foreach (string tColName in oRcvSpc.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMRcvSpcTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oRcvSpc);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbReceive/TFNMRcvSpcTmp : " + oEx.Message);
                        return false;
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE RCV ");
                oSql.AppendLine("FROM TFNMRcv RCV WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMRcvTmp RCVT WITH(NOLOCK) ON RCV.FTRcvCode = RCVT.FTRcvCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMRcv");
                oSql.AppendLine("SELECT * FROM TFNMRcvTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMRcvTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE RCVL ");
                oSql.AppendLine("FROM TFNMRcv_L RCVL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMRcvTmp_L RCVLT WITH(NOLOCK) ON RCVL.FTRcvCode = RCVLT.FTRcvCode");
                oSql.AppendLine("   AND  RCVL.FNLngID = RCVLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMRcv_L");
                oSql.AppendLine("SELECT * FROM TFNMRcvTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMRcvTmp_L");
                //*Arm 63-04-24
                oSql.AppendLine();
                oSql.AppendLine("   DELETE SPC ");
                oSql.AppendLine("   FROM TFNMRcvSpc SPC WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TFNMRcvSpcTmp SPCTmp WITH(NOLOCK) ON SPC.FTRcvCode = SPCTmp.FTRcvCode AND SPC.FTAppCode = SPCTmp.FTAppCode AND ISNULL(SPC.FTBchCode,'') = ISNULL(SPCTmp.FTBchCode,'')");
                oSql.AppendLine("   AND ISNULL(SPC.FTMerCode,'') = ISNULL(SPCTmp.FTMerCode,'') AND ISNULL(SPC.FTShpCode,'') = ISNULL(SPCTmp.FTShpCode,'') AND ISNULL(SPC.FTAggCode,'') = ISNULL(SPCTmp.FTAggCode,'')");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TFNMRcvSpc ");
                oSql.AppendLine("   SELECT FTRcvCode,FTAppCode,FTBchCode,FTMerCode,FTShpCode,FTAggCode,FTPdtRmk"); //*Arm 63-07-30
                //oSql.AppendLine("   FTAggCode,FTPdtRmk,FTAppStaAlwRet,FTAppStaAlwCancel,FTAppStaPayLast"); //*Arm 63-07-30 Comment Code
                oSql.AppendLine("   FROM TFNMRcvSpcTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //++++++++++++++
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxReceive : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbReceive : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poRcv = null;
                oSql = null;
                oTranscation = null;
                aoRcv = null;
                aoRcvLng = null;
                oRcv = null;
                oRcvLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Receive
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMRcvTmp> C_PRCaListReceive(List<cmlResInfoRcv> paoResRcv)
        {
            List<cmlTFNMRcvTmp> aoRcv = new List<cmlTFNMRcvTmp>();

            try
            {
                aoRcv = paoResRcv.Select(oItem => new cmlTFNMRcvTmp()
                {
                    FTFmtCode = oItem.rtFmtCode,
                    FTRcvCode = oItem.rtRcvCode,
                    FTRcvStaUse = oItem.rtRcvStaUse,
                    FTRcvStaShwInSlip = oItem.rtRcvStaShwInSlip,    //*Arm 63-07-30
                    FTRcv4Ret = oItem.rtRcv4Ret,                    //*Arm 63-07-30
                    FTRcv4ChkOut = oItem.rtRcv4ChkOut,              //*Arm 63-07-30
                    FTAppStaAlwRet = oItem.rtAppStaAlwRet,          //*Arm 63-07-30
                    FTAppStaAlwCancel = oItem.rtAppStaAlwCancel,    //*Arm 63-07-30
                    FTAppStaPayLast = oItem.rtAppStaPayLast,        //*Arm 63-07-30
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                    
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListReceive : " + oEx.Message); }
            finally
            {
                paoResRcv = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRcv;
        }

        /// <summary>
        /// Process list Receive Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMRcvTmp_L> C_PRCaListReceiveLng(List<cmlResInfoRcvLng> paoResRcvLng)
        {
            List<cmlTFNMRcvTmp_L> aoRcv = new List<cmlTFNMRcvTmp_L>();

            try
            {
                aoRcv = paoResRcvLng.Select(oItem => new cmlTFNMRcvTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTRcvCode = oItem.rtRcvCode,
                    FTRcvName = oItem.rtRcvName,
                    FTRcvRmk = oItem.rtRcvRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListReceiveLng : " + oEx.Message); }
            finally
            {
                paoResRcvLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRcv;
        }

        /// <summary>
        /// *Arm 63-03-04-24 RcvSpc
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMRcvSpcTmp> C_PRCaListReceiveSpc(List<cmlResInfoRcvSpc> paoRcvSpc)
        {
            List<cmlTFNMRcvSpcTmp> aoData = new List<cmlTFNMRcvSpcTmp>();

            try
            {
                aoData = paoRcvSpc.Select(oItem => new cmlTFNMRcvSpcTmp()
                {
                    FTRcvCode = oItem.rtRcvCode,
                    FTAppCode = oItem.rtAppCode,
                    FNRcvSeq = oItem.rnRcvSeq,
                    FTBchCode = oItem.rtBchCode,
                    FTMerCode = oItem.rtMerCode,
                    FTShpCode = oItem.rtShpCode,
                    FTAggCode = oItem.rtAggCode,
                    FTPdtRmk = oItem.rtPdtRmk
                    //FTAppStaAlwRet = oItem.rtAppStaAlwRet,        //*Arm 63-07-30 Comment Code (ยกเลิก)
                    //FTAppStaAlwCancel = oItem.rtAppStaAlwCancel,  //*Arm 63-07-30 Comment Code (ยกเลิก)
                    //FTAppStaPayLast = oItem.rtAppStaPayLast       //*Arm 63-07-30 Comment Code (ยกเลิก)


                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListReceiveSpc : " + oEx.Message); }
            finally
            {
                paoRcvSpc = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        #endregion End Receive

        #region Bank

        /// <summary>
        /// Download Bank
        /// </summary>
        /// <param name="poBnk"></param>
        //private void C_DWNxBank(cmlResItemOfcmlResBankDwn poBnk)
        private bool C_DWNbBank(cmlResItemOfcmlResBankDwn poBnk)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMBankTmp> aoBank;
            List<cmlTFNMBankTmp_L> aoBankLng;
            cDataReaderAdapter<cmlTFNMBankTmp> oBank;
            cDataReaderAdapter<cmlTFNMBankTmp_L> oBankLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMBankTmp");
                //oSql.AppendLine("FROM TFNMBank WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMBankTmp_L");
                //oSql.AppendLine("FROM TFNMBank_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMBankTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMBankTmp FROM TFNMBank with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMBankTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMBankTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMBankTmp_L FROM TFNMBank_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMBankTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMBankTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMBankTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMBankTmp FROM TFNMBank with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMBankTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMBank' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMBankTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMBankTmp FROM TFNMBank with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMBankTmp");
                oSql.AppendLine("");

                // TFNMBankTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMBankTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMBankTmp_L FROM TFNMBank_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMBankTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMBank_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMBankTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMBankTmp_L FROM TFNMBank_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMBankTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMBank
                aoBank = C_PRCaListBank(poBnk.roItem.raBank);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oBank = new cDataReaderAdapter<cmlTFNMBankTmp>(aoBank);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oBank.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMBankTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oBank);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBank : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMBank_L
                aoBankLng = C_PRCaListBankLng(poBnk.roItem.raBankLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oBankLng = new cDataReaderAdapter<cmlTFNMBankTmp_L>(aoBankLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oBankLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMBankTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oBankLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBank : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE BNK ");
                oSql.AppendLine("FROM TFNMBank BNK WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMBankTmp BNKT WITH(NOLOCK) ON BNK.FTBnkCode = BNKT.FTBnkCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMBank");
                oSql.AppendLine("SELECT * FROM TFNMBankTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMBankTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE BNKL ");
                oSql.AppendLine("FROM TFNMBank_L BNKL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMBankTmp_L BNKLT WITH(NOLOCK) ON BNKL.FTBnkCode = BNKLT.FTBnkCode");
                oSql.AppendLine("   AND  BNKL.FNLngID = BNKLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMBank_L");
                oSql.AppendLine("SELECT * FROM TFNMBankTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMBankTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            ////catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxBank : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbBank : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poBnk = null;
                oSql = null;
                oTranscation = null;
                aoBank = null;
                aoBankLng = null;
                oBank = null;
                oBankLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Bank
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMBankTmp> C_PRCaListBank(List<cmlResInfoBank> paoResBank)
        {
            List<cmlTFNMBankTmp> aoBank = new List<cmlTFNMBankTmp>();

            try
            {
                aoBank = paoResBank.Select(oItem => new cmlTFNMBankTmp()
                {
                    FTBnkCode = oItem.rtBnkCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListBank : " + oEx.Message); }
            finally
            {
                paoResBank = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoBank;
        }

        /// <summary>
        /// Process list Bank Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMBankTmp_L> C_PRCaListBankLng(List<cmlResInfoBankLng> paoResBankLng)
        {
            List<cmlTFNMBankTmp_L> aoBank = new List<cmlTFNMBankTmp_L>();

            try
            {
                aoBank = paoResBankLng.Select(oItem => new cmlTFNMBankTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTBnkCode = oItem.rtBnkCode,
                    FTBnkName = oItem.rtBnkName,
                    FTBnkRmk = oItem.rtBnkRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListBankLng : " + oEx.Message); }
            finally
            {
                paoResBankLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoBank;
        }

        #endregion End Bank

        #region Credit Card

        /// <summary>
        /// Download Credit Card
        /// </summary>
        /// <param name="poCrd"></param>
        //private void C_DWNxCredit(cmlResItemOfcmlResCreditCardDwn poCrd)
        private bool C_DWNbCredit(cmlResItemOfcmlResCreditCardDwn poCrd)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMCreditCardTmp> aoCredit;
            List<cmlTFNMCreditCardTmp_L> aoCreditLng;
            cDataReaderAdapter<cmlTFNMCreditCardTmp> oCredit;
            cDataReaderAdapter<cmlTFNMCreditCardTmp_L> oCreditLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCreditCardTmp");
                //oSql.AppendLine("FROM TFNMCreditCard WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCreditCardTmp_L");
                //oSql.AppendLine("FROM TFNMCreditCard_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCreditCardTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCreditCardTmp FROM TFNMCreditCard with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCreditCardTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCreditCardTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCreditCardTmp_L FROM TFNMCreditCard_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCreditCardTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMCreditCardTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCreditCardTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCreditCardTmp FROM TFNMCreditCard with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCreditCardTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCreditCard' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCreditCardTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCreditCardTmp FROM TFNMCreditCard with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCreditCardTmp");
                oSql.AppendLine("");

                // TFNMCreditCardTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCreditCardTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCreditCardTmp_L FROM TFNMCreditCard_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCreditCardTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCreditCard_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCreditCardTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCreditCardTmp_L FROM TFNMCreditCard_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCreditCardTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMCreditCard
                aoCredit = C_PRCaListCredit(poCrd.roItem.raCreditCard);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCredit = new cDataReaderAdapter<cmlTFNMCreditCardTmp>(aoCredit);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCredit.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCreditCardTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCredit);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCredit : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMCreditCard_L
                aoCreditLng = C_PRCaListCreditLng(poCrd.roItem.raCreditCardLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCreditLng = new cDataReaderAdapter<cmlTFNMCreditCardTmp_L>(aoCreditLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCreditLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCreditCardTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCreditLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCredit : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CRD ");
                oSql.AppendLine("FROM TFNMCreditCard CRD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCreditCardTmp CRDT WITH(NOLOCK) ON CRD.FTCrdCode = CRDT.FTCrdCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCreditCard");
                oSql.AppendLine("SELECT * FROM TFNMCreditCardTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCreditCardTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CRDL ");
                oSql.AppendLine("FROM TFNMCreditCard_L CRDL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCreditCardTmp_L CRDLT WITH(NOLOCK) ON CRDL.FTCrdCode = CRDLT.FTCrdCode");
                oSql.AppendLine("   AND  CRDL.FNLngID = CRDLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCreditCard_L");
                oSql.AppendLine("SELECT * FROM TFNMCreditCardTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCreditCardTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCredit : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCredit : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poCrd = null;
                oSql = null;
                oTranscation = null;
                aoCredit = null;
                aoCreditLng = null;
                oCredit = null;
                oCreditLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Credit
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCreditCardTmp> C_PRCaListCredit(List<cmlResInfoCreditCard> paoResCredit)
        {
            List<cmlTFNMCreditCardTmp> aoCredit = new List<cmlTFNMCreditCardTmp>();

            try
            {
                aoCredit = paoResCredit.Select(oItem => new cmlTFNMCreditCardTmp()
                {
                    FTBnkCode = oItem.rtBnkCode,
                    FCCrdChgPer = oItem.rcCrdChgPer,
                    FTCrdCode = oItem.rtCrdCode,
                    FTCrdCrdFmt = oItem.rtCrdCrdFmt,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCredit : " + oEx.Message); }
            finally
            {
                paoResCredit = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCredit;
        }

        /// <summary>
        /// Process list Credit Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCreditCardTmp_L> C_PRCaListCreditLng(List<cmlResInfoCreditCardLng> paoResCreditLng)
        {
            List<cmlTFNMCreditCardTmp_L> aoCredit = new List<cmlTFNMCreditCardTmp_L>();

            try
            {
                aoCredit = paoResCreditLng.Select(oItem => new cmlTFNMCreditCardTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCrdCode = oItem.rtCrdCode,
                    FTCrdName = oItem.rtCrdName,
                    FTCrdRmk = oItem.rtCrdRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCreditLng : " + oEx.Message); }
            finally
            {
                paoResCreditLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCredit;
        }

        #endregion End Credit Card

        #region Coupon

        //*Net 63-03-09
        /// <summary>
        /// Download Coupon
        /// </summary>
        /// <param name="poCpn"></param>
        private bool C_DWNbCoupon(cmlResItemOfcmlResCpnDwn poCpn)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNTCouponHDTmp> aoCpnHD;
            List<cmlTFNTCouponHDTmp_L> aoCpnHD_L;
            List<cmlTFNTCouponHDBchTmp> aoCpnHDBch;
            List<cmlTFNTCouponHDCstPriTmp> aoCpnHDCstPri;
            List<cmlTFNTCouponHDPdtTmp> aoCpnHDPdt;
            List<cmlTFNTCouponDTTmp> aoCpnDT;
            List<cmlTFNMCouponTypeTmp> aoCpnType;
            List<cmlTFNMCouponTypeTmp_L> aoCpnType_L;
            List<cmlTCNMImgObjTmp> aoImgObj;

            cDataReaderAdapter<cmlTFNTCouponHDTmp> oCpnHD;
            cDataReaderAdapter<cmlTFNTCouponHDTmp_L> oCpnHD_L;
            cDataReaderAdapter<cmlTFNTCouponHDBchTmp> oCpnHDBch;
            cDataReaderAdapter<cmlTFNTCouponHDCstPriTmp> oCpnHDCstPri;
            cDataReaderAdapter<cmlTFNTCouponHDPdtTmp> oCpnHDPdt;
            cDataReaderAdapter<cmlTFNTCouponDTTmp> oCpnDT;
            cDataReaderAdapter<cmlTFNMCouponTypeTmp> oCpnType;
            cDataReaderAdapter<cmlTFNMCouponTypeTmp_L> oCpnType_L;
            cDataReaderAdapter<cmlTCNMImgObjTmp> oImg;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();

                new cDatabase().C_PRCxCreateDatabaseTmp("TFNTCouponHD", "TFNTCouponHDTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TFNTCouponHD_L", "TFNTCouponHDTmp_L");
                new cDatabase().C_PRCxCreateDatabaseTmp("TFNTCouponHDBch", "TFNTCouponHDBchTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TFNTCouponHDCstPri", "TFNTCouponHDCstPriTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TFNTCouponHDPdt", "TFNTCouponHDPdtTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TFNTCouponDT", "TFNTCouponDTTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TFNMCouponType", "TFNMCouponTypeTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TFNMCouponType_L", "TFNMCouponTypeTmp_L");
                new cDatabase().C_PRCxCreateDatabaseTmp("TCNMImgObj", "TCNMImgObjTmp");

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();

                // Bulk Copy : TFNTCouponHD
                aoCpnHD = C_PRCaListCouponHD(poCpn.roItem.raCpnHD);

                oCpnHD = new cDataReaderAdapter<cmlTFNTCouponHDTmp>(aoCpnHD);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnHD.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNTCouponHDTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnHD);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon/TFNTCouponHDTmp : " + oEx.Message);//*Em 61-11-14  //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;//*Em 61-11-14
                    }
                }

                // Bulk Copy : TFNTCouponHD_L
                aoCpnHD_L = C_PRCaListCouponHD_L(poCpn.roItem.raCpnHD_L);

                oCpnHD_L = new cDataReaderAdapter<cmlTFNTCouponHDTmp_L>(aoCpnHD_L);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnHD_L.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNTCouponHDTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnHD_L);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon/TFNTCouponHDTmp_L : " + oEx.Message);//*Em 61-11-14   //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;//*Em 61-11-14
                    }
                }

                // Bulk Copy : TFNTCouponHDBch
                aoCpnHDBch = C_PRCaListCouponHDBch(poCpn.roItem.raCpnHDBch);

                oCpnHDBch = new cDataReaderAdapter<cmlTFNTCouponHDBchTmp>(aoCpnHDBch);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnHDBch.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNTCouponHDBchTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnHDBch);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon/TFNTCouponHDBchTmp : " + oEx.Message);//*Em 61-11-14 //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;//*Em 61-11-14
                    }
                }

                // Bulk Copy : TFNTCouponHDCstPri
                aoCpnHDCstPri = C_PRCaListCouponHDCstPri(poCpn.roItem.raCpnHDCstPri);

                oCpnHDCstPri = new cDataReaderAdapter<cmlTFNTCouponHDCstPriTmp>(aoCpnHDCstPri);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnHDCstPri.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNTCouponHDCstPriTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnHDCstPri);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon/TFNTCouponHDCstPriTmp : " + oEx.Message);//*Em 61-11-14   //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;//*Em 61-11-14
                    }
                }

                // Bulk Copy : TFNTCouponHDPdt
                aoCpnHDPdt = C_PRCaListCouponHDPdt(poCpn.roItem.raCpnHDPdt);

                oCpnHDPdt = new cDataReaderAdapter<cmlTFNTCouponHDPdtTmp>(aoCpnHDPdt);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnHDPdt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNTCouponHDPdtTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnHDPdt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon/TFNTCouponHDPdtTmp : " + oEx.Message);//*Em 61-11-14   //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;//*Em 61-11-14
                    }
                }

                // Bulk Copy : TFNTCouponDT
                aoCpnDT = C_PRCaListCouponDT(poCpn.roItem.raCpnDT);

                oCpnDT = new cDataReaderAdapter<cmlTFNTCouponDTTmp>(aoCpnDT);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnDT.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNTCouponDTTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnDT);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon/TFNTCouponDTTmp : " + oEx.Message);//*Em 61-11-14   //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;//*Em 61-11-14
                    }
                }


                // Bulk Copy : TFNMCouponType
                aoCpnType = C_PRCaListCouponType(poCpn.roItem.raCpnType);

                oCpnType = new cDataReaderAdapter<cmlTFNMCouponTypeTmp>(aoCpnType);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnType.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCouponTypeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnType);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon/TFNMCouponTypeTmp : " + oEx.Message);//*Em 61-11-14 //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;//*Em 61-11-14
                    }
                }


                // Bulk Copy : TFNMCouponType_L
                aoCpnType_L = C_PRCaListCouponTypeLng(poCpn.roItem.raCpnType_L);

                oCpnType_L = new cDataReaderAdapter<cmlTFNMCouponTypeTmp_L>(aoCpnType_L);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnType_L.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCouponTypeTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnType_L);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon/TFNMCouponTypeTmp_L : " + oEx.Message);//*Em 61-11-14  //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;//*Em 61-11-14
                    }
                }

                // Bulk Copy : TCNMImgObj
                aoImgObj = C_PRCaListImageObject(poCpn.roItem.raImage);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oImg = new cDataReaderAdapter<cmlTCNMImgObjTmp>(aoImgObj);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oImg.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgObjTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImg);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCompany/TCNMImgObjTmp : " + oEx.Message); //*Arm 63-07-17 เพิ่มชื่อ Table Tmp
                        return false;
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                // Coupon HD
                oSql.AppendLine("DELETE HD ");
                oSql.AppendLine("FROM TFNTCouponHD HD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNTCouponHDTmp HDT WITH(NOLOCK) ON ");
                oSql.AppendLine(" HD.FTBchCode = HDT.FTBchCode AND ");
                oSql.AppendLine(" HD.FTCphDocNo = HDT.FTCphDocNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNTCouponHD");
                oSql.AppendLine("SELECT * FROM TFNTCouponHDTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                // Coupon HD_L
                oSql.AppendLine("DELETE HD_L ");
                oSql.AppendLine("FROM TFNTCouponHD_L HD_L WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNTCouponHDTmp_L HDT_L WITH(NOLOCK) ON  ");
                oSql.AppendLine(" HD_L.FTCphDocNo = HDT_L.FTCphDocNo AND ");
                oSql.AppendLine(" HD_L.FNLngID = HDT_L.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNTCouponHD_L");
                oSql.AppendLine("SELECT * FROM TFNTCouponHDTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                // Coupon HDBch
                oSql.AppendLine("DELETE HDB ");
                oSql.AppendLine("FROM TFNTCouponHDBch HDB WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNTCouponHDBchTmp HDBT WITH(NOLOCK) ON ");
                oSql.AppendLine(" HDB.FTBchCode = HDBT.FTBchCode AND ");
                oSql.AppendLine(" HDB.FTCphDocNo = HDBT.FTCphDocNo AND ");
                oSql.AppendLine(" HDB.FTCphBchTo = HDBT.FTCphBchTo AND ");
                oSql.AppendLine(" HDB.FTCphMerTo = HDBT.FTCphMerTo AND ");
                oSql.AppendLine(" HDB.FTCphShpTo = HDBT.FTCphShpTo ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNTCouponHDBch");
                oSql.AppendLine("SELECT * FROM TFNTCouponHDBchTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                // Coupon HDCstPri
                oSql.AppendLine("DELETE HDCP ");
                oSql.AppendLine("FROM TFNTCouponHDCstPri HDCP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNTCouponHDCstPriTmp HDCPT WITH(NOLOCK) ON  ");
                oSql.AppendLine(" HDCP.FTBchCode = HDCPT.FTBchCode AND ");
                oSql.AppendLine(" HDCP.FTCphDocNo = HDCPT.FTCphDocNo AND ");
                oSql.AppendLine(" HDCP.FTPplCode = HDCPT.FTPplCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNTCouponHDCstPri");
                oSql.AppendLine("SELECT * FROM TFNTCouponHDCstPriTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                // Coupon HDPdt
                oSql.AppendLine("DELETE HDP ");
                oSql.AppendLine("FROM TFNTCouponHDPdt HDP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNTCouponHDPdtTmp HDPT WITH(NOLOCK) ON ");
                oSql.AppendLine(" HDP.FTBchCode = HDPT.FTBchCode AND ");
                oSql.AppendLine(" HDP.FTCphDocNo = HDPT.FTCphDocNo AND ");
                oSql.AppendLine(" HDP.FTPdtCode = HDPT.FTPdtCode AND ");
                oSql.AppendLine(" HDP.FTPunCode = HDPT.FTPunCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNTCouponHDPdt");
                oSql.AppendLine("SELECT * FROM TFNTCouponHDPdtTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                // Coupon DT
                oSql.AppendLine("DELETE DT ");
                oSql.AppendLine("FROM TFNTCouponDT DT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNTCouponDTTmp DTT WITH(NOLOCK) ON ");
                oSql.AppendLine(" DT.FTBchCode = DTT.FTBchCode AND ");
                oSql.AppendLine(" DT.FTCphDocNo = DTT.FTCphDocNo AND ");
                oSql.AppendLine(" DT.FTCpdBarCpn = DTT.FTCpdBarCpn ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNTCouponDT");
                oSql.AppendLine("SELECT * FROM TFNTCouponDTTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                // Coupon Type
                oSql.AppendLine("DELETE CPT ");
                oSql.AppendLine("FROM TFNMCouponType CPT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCouponTypeTmp CPTT WITH(NOLOCK) ON ");
                oSql.AppendLine(" CPT.FTCptCode = CPTT.FTCptCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCouponType");
                oSql.AppendLine("SELECT * FROM TFNMCouponTypeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                // Coupon Type_L
                oSql.AppendLine();
                oSql.AppendLine("DELETE CPTL ");
                oSql.AppendLine("FROM TFNMCouponType_L CPTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCouponTypeTmp_L CPTLT WITH(NOLOCK) ON ");
                oSql.AppendLine(" CPTL.FTCptCode = CPTLT.FTCptCode");
                oSql.AppendLine(" AND  CPTL.FNLngID = CPTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCouponType_L");
                oSql.AppendLine("SELECT * FROM TFNMCouponTypeTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                // Coupon Image
                oSql.AppendLine();
                oSql.AppendLine("DELETE IMG ");
                oSql.AppendLine("FROM TCNMImgObj IMG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgObjTmp IMGT WITH(NOLOCK) ON IMG.FTImgRefID = IMGT.FTImgRefID");
                oSql.AppendLine("AND IMG.FNImgSeq = IMGT.FNImgSeq AND IMG.FTImgTable = IMGT.FTImgTable AND IMG.FTImgKey = IMGT.FTImgKey");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgObj");
                oSql.AppendLine("(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy ");
                oSql.AppendLine("FROM TCNMImgObjTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poCpn = null;
                oSql = null;
                oTranscation = null;

                aoCpnHD = null;
                aoCpnHD_L = null;
                aoCpnHDBch = null;
                aoCpnHDCstPri = null;
                aoCpnHDPdt = null;
                aoCpnDT = null;
                aoCpnType = null;
                aoCpnType_L = null;

                oCpnHD = null;
                oCpnHD_L = null;
                oCpnHDBch = null;
                oCpnHDCstPri = null;
                oCpnHDPdt = null;
                oCpnDT = null;
                oCpnType = null;
                oCpnType_L = null;
                //oC_SP.SP_CLExMemory();
            }
        }


        /// <summary>
        /// Process list Coupon HD
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNTCouponHDTmp> C_PRCaListCouponHD(List<cmlResInfoCpnHD> paoResCpnHD)
        {
            List<cmlTFNTCouponHDTmp> aoCpnHD = new List<cmlTFNTCouponHDTmp>();

            try
            {
                aoCpnHD = paoResCpnHD.Select(oItem => new cmlTFNTCouponHDTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTCphDocNo = oItem.rtCphDocNo,
                    FTCptCode = oItem.rtCptCode,
                    FDCphDocDate = oItem.rdCphDocDate,
                    FTCphDisType = oItem.rtCphDisType,
                    FCCphDisValue = oItem.rcCphDisValue,
                    FTPplCode = oItem.rtPplCode,
                    FDCphDateStart = oItem.rdCphDateStart,
                    FDCphDateStop = oItem.rdCphDateStop,
                    FTCphTimeStart = oItem.rtCphTimeStart,
                    FTCphTimeStop = oItem.rtCphTimeStop,
                    FTCphStaClosed = oItem.rtCphStaClosed,
                    FTUsrCode = oItem.rtUsrCode,
                    FTCphUsrApv = oItem.rtCphUsrApv,
                    FTCphStaDoc = oItem.rtCphStaDoc,
                    FTCphStaApv = oItem.rtCphStaApv,
                    FTCphStaPrcDoc = oItem.rtCphStaPrcDoc,
                    FTCphStaDelMQ = oItem.rtCphStaDelMQ,
                    FCCphMinValue = oItem.rtCphMinValue,
                    FTCphStaOnTopPmt = oItem.rtCphStaOnTopPmt,
                    FNCphLimitUsePerBill = oItem.rnCphLimitUsePerBill,
                    FTCphRefAccCode = oItem.rtCphRefAccCode,
                    FTStaChkMember = oItem.rtStaChkMember,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy,


                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponHD : " + oEx.Message); }
            finally
            {
                paoResCpnHD = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpnHD;
        }


        /// <summary>
        /// Process list Coupon HDBch
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNTCouponHDBchTmp> C_PRCaListCouponHDBch(List<cmlResInfoCpnHDBch> paoResCpnHDBch)
        {
            List<cmlTFNTCouponHDBchTmp> aoCpnHDBch = new List<cmlTFNTCouponHDBchTmp>();

            try
            {
                aoCpnHDBch = paoResCpnHDBch.Select(oItem => new cmlTFNTCouponHDBchTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTCphDocNo = oItem.rtCphDocNo,
                    FTCphBchTo = oItem.rtCphBchTo,
                    FTCphMerTo = oItem.rtCphMerTo,
                    FTCphShpTo = oItem.rtCphShpTo,
                    FTCphStaType = oItem.rtCphStaType

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponHDBch : " + oEx.Message); }
            finally
            {
                paoResCpnHDBch = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpnHDBch;
        }


        /// <summary>
        /// Process list Coupon HDCstPri
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNTCouponHDCstPriTmp> C_PRCaListCouponHDCstPri(List<cmlResInfoCpnHDCstPri> paoResCpnHDCstPri)
        {
            List<cmlTFNTCouponHDCstPriTmp> aoCpnHDCstPri = new List<cmlTFNTCouponHDCstPriTmp>();

            try
            {
                aoCpnHDCstPri = paoResCpnHDCstPri.Select(oItem => new cmlTFNTCouponHDCstPriTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTCphDocNo = oItem.rtCphDocNo,
                    FTPplCode = oItem.rtPplCode,
                    FTCphStaType = oItem.rtCphStaType

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponHDCstPri : " + oEx.Message); }
            finally
            {
                paoResCpnHDCstPri = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpnHDCstPri;
        }


        /// <summary>
        /// Process list Coupon HDPdt
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNTCouponHDPdtTmp> C_PRCaListCouponHDPdt(List<cmlResInfoCpnHDPdt> paoResCpnHDPdt)
        {
            List<cmlTFNTCouponHDPdtTmp> aoCpnHDPdt = new List<cmlTFNTCouponHDPdtTmp>();

            try
            {
                aoCpnHDPdt = paoResCpnHDPdt.Select(oItem => new cmlTFNTCouponHDPdtTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTCphDocNo = oItem.rtCphDocNo,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPunCode = oItem.rtPunCode,
                    FTCphStaType = oItem.rtCphStaType

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponHDPdt : " + oEx.Message); }
            finally
            {
                paoResCpnHDPdt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpnHDPdt;
        }


        /// <summary>
        /// Process list Coupon DT
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNTCouponDTTmp> C_PRCaListCouponDT(List<cmlResInfoCpnDT> paoResCpnDT)
        {
            List<cmlTFNTCouponDTTmp> aoCpnDT = new List<cmlTFNTCouponDTTmp>();

            try
            {
                aoCpnDT = paoResCpnDT.Select(oItem => new cmlTFNTCouponDTTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTCphDocNo = oItem.rtCphDocNo,
                    FTCpdBarCpn = oItem.rtCpdBarCpn,
                    FNCpdSeqNo = oItem.rnCpdSeqNo,
                    FNCpdAlwMaxUse = oItem.rnCpdAlwMaxUse

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponDT : " + oEx.Message); }
            finally
            {
                paoResCpnDT = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpnDT;
        }


        /// <summary>
        /// Process list Coupon HD_L
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNTCouponHDTmp_L> C_PRCaListCouponHD_L(List<cmlResInfoCpnHD_L> paoResCpnHD_L)
        {
            List<cmlTFNTCouponHDTmp_L> aoCpnHD_L = new List<cmlTFNTCouponHDTmp_L>();

            try
            {
                aoCpnHD_L = paoResCpnHD_L.Select(oItem => new cmlTFNTCouponHDTmp_L()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTCphDocNo = oItem.rtCphDocNo,
                    FNLngID = oItem.rnLngID,
                    FTCpnName = oItem.rtCpnName,
                    FTCpnMsg1 = oItem.rtCpnMsg1,
                    FTCpnMsg2 = oItem.rtCpnMsg2,
                    FTCpnCond = oItem.rtCpnCond

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponHD_L : " + oEx.Message); }
            finally
            {
                paoResCpnHD_L = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpnHD_L;
        }

        /// <summary>
        /// Download CouponType
        /// </summary>
        /// <param name="poCpnType"></param>
        private bool C_DWNbCouponType(cmlResItemOfcmlResCpnTypeDwn poCpnType)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMCouponTmp> aoCpn;
            List<cmlTFNMCouponTmp_L> aoCpnLng;
            List<cmlTFNMCouponTypeTmp> aoCpnType;
            List<cmlTFNMCouponTypeTmp_L> aoCpnTypeLng;
            cDataReaderAdapter<cmlTFNMCouponTmp> oCpn;
            cDataReaderAdapter<cmlTFNMCouponTmp_L> oCpnLng;
            cDataReaderAdapter<cmlTFNMCouponTypeTmp> oCpnType;
            cDataReaderAdapter<cmlTFNMCouponTypeTmp_L> oCpnTypeLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCouponTmp");
                //oSql.AppendLine("FROM TFNMCoupon WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCouponTmp_L");
                //oSql.AppendLine("FROM TFNMCoupon_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCouponTypeTmp");
                //oSql.AppendLine("FROM TFNMCouponType WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCouponTypeTmp_L");
                //oSql.AppendLine("FROM TFNMCouponType_L WITH(ROWLOCK)");

                //*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCouponTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCouponTmp FROM TFNMCoupon with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCouponTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCouponTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCouponTmp_L FROM TFNMCoupon_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCouponTmp_L");
                //oSql.AppendLine("");
                //*Arm 63-01-10  [Comment Code]


                //*Arm 63-01-17 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCouponTypeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCouponTypeTmp FROM TFNMCouponType with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCouponTypeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCouponType' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCouponTypeTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCouponTypeTmp FROM TFNMCouponType with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCouponTypeTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCouponTypeTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCouponTypeTmp_L FROM TFNMCouponType_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCouponTypeTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCouponType_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCouponTypeTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCouponTypeTmp_L FROM TFNMCouponType_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCouponTypeTmp_L");


                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCouponTypeTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCouponTypeTmp FROM TFNMCouponType with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCouponTypeTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCouponTypeTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCouponTypeTmp_L FROM TFNMCouponType_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCouponTypeTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                oTranscation = cVB.oVB_ConnDB.BeginTransaction(); //*Arm 63-01-10

                // Bulk Copy : TFNMCoupon
                //aoCpn = C_PRCaListCoupon(poCpn.roItem.raCpn);
                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                //oCpn = new cDataReaderAdapter<cmlTFNMCouponTmp>(aoCpn);

                //using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                //{
                //    //*Em 62-08-21
                //    foreach (string tColName in oCpn.ColumnNames)
                //    {
                //        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                //    }
                //    //+++++++++++++
                //    oBulkCopy.BatchSize = 100;
                //    oBulkCopy.DestinationTableName = "dbo.TFNMCouponTmp";

                //    try
                //    {
                //        oBulkCopy.WriteToServer(oCpn);
                //    }
                //    catch(Exception oEx)
                //    {
                //        oTranscation.Rollback();
                //        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon : " + oEx.Message);//*Em 61-11-14
                //        return false;//*Em 61-11-14
                //    }
                //}

                ////oTranscation.Commit();

                //// Bulk Copy : TFNMCoupon_L
                //aoCpnLng = C_PRCaListCouponLng(poCpn.roItem.raCpnLng);

                ////oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                //oCpnLng = new cDataReaderAdapter<cmlTFNMCouponTmp_L>(aoCpnLng);

                //using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                //{
                //    //*Em 62-08-21
                //    foreach (string tColName in oCpnLng.ColumnNames)
                //    {
                //        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                //    }
                //    //+++++++++++++
                //    oBulkCopy.BatchSize = 100;
                //    oBulkCopy.DestinationTableName = "dbo.TFNMCouponTmp_L";

                //    try
                //    {
                //        oBulkCopy.WriteToServer(oCpnLng);
                //    }
                //    catch (Exception oEx)
                //    {
                //        oTranscation.Rollback();
                //        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon : " + oEx.Message);//*Em 61-11-14
                //        return false;//*Em 61-11-14
                //    }
                //}

                //oTranscation.Commit();

                // Bulk Copy : TFNMCouponType
                aoCpnType = C_PRCaListCouponType(poCpnType.roItem.raCpnType);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCpnType = new cDataReaderAdapter<cmlTFNMCouponTypeTmp>(aoCpnType);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnType.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCouponTypeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnType);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMCouponType_L
                aoCpnTypeLng = C_PRCaListCouponTypeLng(poCpnType.roItem.raCpnTypeLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCpnTypeLng = new cDataReaderAdapter<cmlTFNMCouponTypeTmp_L>(aoCpnTypeLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCpnTypeLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCouponTypeTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCpnTypeLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCoupon : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                //oSql.AppendLine("DELETE CPN ");
                //oSql.AppendLine("FROM TFNMCoupon CPN WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TFNMCouponTmp CPNT WITH(NOLOCK) ON CPN.FTCpnCode = CPNT.FTCpnCode");
                //oSql.AppendLine();
                //oSql.AppendLine("INSERT INTO TFNMCoupon");
                //oSql.AppendLine("SELECT * FROM TFNMCouponTmp WITH(NOLOCK) ");
                //oSql.AppendLine();
                ////oSql.AppendLine("DROP TABLE TFNMCouponTmp");
                //oSql.AppendLine();
                //oSql.AppendLine("DELETE CPNL ");
                //oSql.AppendLine("FROM TFNMCoupon_L CPNL WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TFNMCouponTmp_L CPNLT WITH(NOLOCK) ON CPNL.FTCpnCode = CPNLT.FTCpnCode");
                //oSql.AppendLine("   AND  CPNL.FNLngID = CPNLT.FNLngID");
                //oSql.AppendLine();
                //oSql.AppendLine("INSERT INTO TFNMCoupon_L");
                //oSql.AppendLine("SELECT * FROM TFNMCouponTmp_L WITH(NOLOCK) ");
                //oSql.AppendLine();
                ////oSql.AppendLine("DROP TABLE TFNMCouponTmp_L");
                //oSql.AppendLine();
                // Coupon Type
                oSql.AppendLine("DELETE CPT ");
                oSql.AppendLine("FROM TFNMCouponType CPT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCouponTypeTmp CPTT WITH(NOLOCK) ON CPT.FTCptCode = CPTT.FTCptCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCouponType");
                oSql.AppendLine("SELECT * FROM TFNMCouponTypeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCouponTypeTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CPTL ");
                oSql.AppendLine("FROM TFNMCouponType_L CPTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCouponTypeTmp_L CPTLT WITH(NOLOCK) ON CPTL.FTCptCode = CPTLT.FTCptCode");
                oSql.AppendLine("   AND  CPTL.FNLngID = CPTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCouponType_L");
                oSql.AppendLine("SELECT * FROM TFNMCouponTypeTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCouponTypeTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCoupon : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCouponType : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poCpnType = null;
                oSql = null;
                oTranscation = null;
                aoCpn = null;
                aoCpnLng = null;
                oCpn = null;
                oCpnLng = null;
                aoCpnType = null;
                aoCpnTypeLng = null;
                oCpnType = null;
                oCpnTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Coupon
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCouponTmp> C_PRCaListCoupon(List<cmlResInfoCpn> paoResCpn)
        {
            List<cmlTFNMCouponTmp> aoCpn = new List<cmlTFNMCouponTmp>();

            try
            {
                aoCpn = paoResCpn.Select(oItem => new cmlTFNMCouponTmp()
                {
                    FCCpnBalance = oItem.rcCpnBalance,
                    FCCpnSalePri = oItem.rcCpnSalePri,
                    FCCpnValue = oItem.rcCpnValue,
                    FDCpnExpired = oItem.rdCpnExpired,
                    FTCpnBarCode = oItem.rtCpnBarCode,
                    FTCpnCode = oItem.rtCpnCode,
                    FTCpnComBook = oItem.rtCpnComBook,
                    FTCpnStaBook = oItem.rtCpnStaBook,
                    FTCpnStaSale = oItem.rtCpnStaSale,
                    FTCpnStaUse = oItem.rtCpnStaUse,
                    FTCptCode = oItem.rtCptCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCoupon : " + oEx.Message); }
            finally
            {
                paoResCpn = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpn;
        }

        /// <summary>
        /// Process list Coupon Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCouponTmp_L> C_PRCaListCouponLng(List<cmlResInfoCpnLng> paoResCpnLng)
        {
            List<cmlTFNMCouponTmp_L> aoCpn = new List<cmlTFNMCouponTmp_L>();

            try
            {
                aoCpn = paoResCpnLng.Select(oItem => new cmlTFNMCouponTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCpnCode = oItem.rtCpnCode,
                    FTCpnName = oItem.rtCpnName,
                    FTCpnRemark = oItem.rtCpnRemark
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponLng : " + oEx.Message); }
            finally
            {
                paoResCpnLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpn;
        }

        /// <summary>
        /// Process list Coupon Type
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCouponTypeTmp> C_PRCaListCouponType(List<cmlResInfoCpnType> paoResCpnType)
        {
            List<cmlTFNMCouponTypeTmp> aoCpnType = new List<cmlTFNMCouponTypeTmp>();

            try
            {
                aoCpnType = paoResCpnType.Select(oItem => new cmlTFNMCouponTypeTmp()
                {
                    FTCptStaUse = oItem.rtCptStaUse,
                    FTCptCode = oItem.rtCptCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTCptType = oItem.rtCptType,            //*Arm 62-12-20
                    FTCptStaChk = oItem.rtCptStaChk,        //*Arm 62-12-20
                    FTCptStaChkHQ = oItem.rtCptStaChkHQ     //*Arm 62-12-20

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponType : " + oEx.Message); }
            finally
            {
                paoResCpnType = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpnType;
        }

        /// <summary>
        /// Process list Coupon Type Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCouponTypeTmp_L> C_PRCaListCouponTypeLng(List<cmlResInfoCpnType_L> paoResCpnTypeLng)
        {
            List<cmlTFNMCouponTypeTmp_L> aoCpnType = new List<cmlTFNMCouponTypeTmp_L>();

            try
            {
                aoCpnType = paoResCpnTypeLng.Select(oItem => new cmlTFNMCouponTypeTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCptCode = oItem.rtCptCode,
                    FTCptName = oItem.rtCptName,
                    FTCptRemark = oItem.rtCptRemark
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponTypeLng : " + oEx.Message); }
            finally
            {
                paoResCpnTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCpnType;
        }

        #endregion End Coupon

        #region Voucher

        /// <summary>
        /// Download Voucher
        /// </summary>
        /// <param name="poVch"></param>
        //private void C_DWNxVoucher(cmlResItemOfcmlResVchDwn poVch)
        private bool C_DWNbVoucher(cmlResItemOfcmlResVchDwn poVch)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMVoucherTmp> aoVch;
            List<cmlTFNMVoucherTmp_L> aoVchLng;
            List<cmlTFNMVoucherTypeTmp> aoVchType;
            List<cmlTFNMVoucherTypeTmp_L> aoVchTypeLng;
            cDataReaderAdapter<cmlTFNMVoucherTmp> oVch;
            cDataReaderAdapter<cmlTFNMVoucherTmp_L> oVchLng;
            cDataReaderAdapter<cmlTFNMVoucherTypeTmp> oVchType;
            cDataReaderAdapter<cmlTFNMVoucherTypeTmp_L> oVchTypeLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMVoucherTmp");
                //oSql.AppendLine("FROM TFNMVoucher WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMVoucherTmp_L");
                //oSql.AppendLine("FROM TFNMVoucher_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMVoucherTypeTmp");
                //oSql.AppendLine("FROM TFNMVoucherType WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMVoucherTypeTmp_L");
                //oSql.AppendLine("FROM TFNMVoucherType_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMVoucherTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMVoucherTmp FROM TFNMVoucher with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMVoucherTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMVoucherTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMVoucherTmp_L FROM TFNMVoucher_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMVoucherTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMVoucherTypeTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMVoucherTypeTmp FROM TFNMVoucherType with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMVoucherTypeTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMVoucherTypeTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMVoucherTypeTmp_L FROM TFNMVoucherType_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMVoucherTypeTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMVoucherTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMVoucherTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMVoucherTmp FROM TFNMVoucher with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMVoucherTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMVoucher' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMVoucherTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMVoucherTmp FROM TFNMVoucher with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMVoucherTmp");
                oSql.AppendLine("");

                // TFNMVoucherTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMVoucherTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMVoucherTmp_L FROM TFNMVoucher_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMVoucherTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMVoucher_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMVoucherTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMVoucherTmp_L FROM TFNMVoucher_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMVoucherTmp_L");
                oSql.AppendLine("");

                // TFNMVoucherTypeTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMVoucherTypeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMVoucherTypeTmp FROM TFNMVoucherType with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMVoucherTypeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMVoucherType' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMVoucherTypeTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMVoucherTypeTmp FROM TFNMVoucherType with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMVoucherTypeTmp");
                oSql.AppendLine("");

                // TFNMVoucherTypeTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMVoucherTypeTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMVoucherTypeTmp_L FROM TFNMVoucherType_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMVoucherTypeTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMVoucherType_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMVoucherTypeTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMVoucherTypeTmp_L FROM TFNMVoucherType_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMVoucherTypeTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMVoucher
                aoVch = C_PRCaListVoucher(poVch.roItem.raVch);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oVch = new cDataReaderAdapter<cmlTFNMVoucherTmp>(aoVch);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oVch.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMVoucherTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oVch);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbVoucher : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMVoucher_L
                aoVchLng = C_PRCaListVoucherLng(poVch.roItem.raVchLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oVchLng = new cDataReaderAdapter<cmlTFNMVoucherTmp_L>(aoVchLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oVchLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMVoucherTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oVchLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbVoucher : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMVoucherType
                aoVchType = C_PRCaListVoucherType(poVch.roItem.raVchType);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oVchType = new cDataReaderAdapter<cmlTFNMVoucherTypeTmp>(aoVchType);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oVchType.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMVoucherTypeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oVchType);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbVoucher : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMVoucherType_L
                aoVchTypeLng = C_PRCaListVoucherTypeLng(poVch.roItem.raVchTypeLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oVchTypeLng = new cDataReaderAdapter<cmlTFNMVoucherTypeTmp_L>(aoVchTypeLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oVchTypeLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMVoucherTypeTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oVchTypeLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbVoucher : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE VOC ");
                oSql.AppendLine("FROM TFNMVoucher VOC WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMVoucherTmp VOCT WITH(NOLOCK) ON VOC.FTVocCode = VOCT.FTVocCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMVoucher");
                oSql.AppendLine("SELECT * FROM TFNMVoucherTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMVoucherTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE VOCL ");
                oSql.AppendLine("FROM TFNMVoucher_L VOCL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMVoucherTmp_L VOCLT WITH(NOLOCK) ON VOCL.FTVocCode = VOCLT.FTVocCode");
                oSql.AppendLine("   AND  VOCL.FNLngID = VOCLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMVoucher_L");
                oSql.AppendLine("SELECT * FROM TFNMVoucherTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMVoucherTmp_L");
                oSql.AppendLine();
                // Voucher Type
                oSql.AppendLine("DELETE VOT ");
                oSql.AppendLine("FROM TFNMVoucherType VOT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMVoucherTypeTmp VOTT WITH(NOLOCK) ON VOT.FTVotCode = VOTT.FTVotCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMVoucherType");
                oSql.AppendLine("SELECT * FROM TFNMVoucherTypeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMVoucherTypeTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE VOTL ");
                oSql.AppendLine("FROM TFNMVoucherType_L VOTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMVoucherTypeTmp_L VOTLT WITH(NOLOCK) ON VOTL.FTVotCode = VOTLT.FTVotCode");
                oSql.AppendLine("   AND  VOTL.FNLngID = VOTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMVoucherType_L");
                oSql.AppendLine("SELECT * FROM TFNMVoucherTypeTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMVoucherTypeTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxVoucher : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbVoucher : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poVch = null;
                oSql = null;
                oTranscation = null;
                aoVch = null;
                aoVchLng = null;
                oVch = null;
                oVchLng = null;
                aoVchType = null;
                aoVchTypeLng = null;
                oVchType = null;
                oVchTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Voucher
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMVoucherTmp> C_PRCaListVoucher(List<cmlResInfoVch> paoResVch)
        {
            List<cmlTFNMVoucherTmp> aoVch = new List<cmlTFNMVoucherTmp>();

            try
            {
                aoVch = paoResVch.Select(oItem => new cmlTFNMVoucherTmp()
                {
                    FCVocBalance = oItem.rcVocBalance,
                    FCVocSalePri = oItem.rcVocSalePri,
                    FCVocValue = oItem.rcVocValue,
                    FDVocExpired = oItem.rdVocExpired,
                    FTVocBarCode = oItem.rtVocBarCode,
                    FTVocCode = oItem.rtVocCode,
                    FTVocComBook = oItem.rtVocComBook,
                    FTVocStaBook = oItem.rtVocStaBook,
                    FTVocStaSale = oItem.rtVocStaSale,
                    FTVocStaUse = oItem.rtVocStaUse,
                    FTVotCode = oItem.rtVotCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListVoucher : " + oEx.Message); }
            finally
            {
                paoResVch = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoVch;
        }

        /// <summary>
        /// Process list Voucher Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMVoucherTmp_L> C_PRCaListVoucherLng(List<cmlResInfoVchLng> paoResVchLng)
        {
            List<cmlTFNMVoucherTmp_L> aoVch = new List<cmlTFNMVoucherTmp_L>();

            try
            {
                aoVch = paoResVchLng.Select(oItem => new cmlTFNMVoucherTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTVocCode = oItem.rtVocCode,
                    FTVocName = oItem.rtVocName,
                    FTVocRemark = oItem.rtVocRemark
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListVoucherLng : " + oEx.Message); }
            finally
            {
                paoResVchLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoVch;
        }

        /// <summary>
        /// Process list Voucher Type
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMVoucherTypeTmp> C_PRCaListVoucherType(List<cmlResInfoVchType> paoResVchType)
        {
            List<cmlTFNMVoucherTypeTmp> aoVchType = new List<cmlTFNMVoucherTypeTmp>();

            try
            {
                aoVchType = paoResVchType.Select(oItem => new cmlTFNMVoucherTypeTmp()
                {
                    FTVotCode = oItem.rtVotCode,
                    FTVotStaUse = oItem.rtVotStaUse,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListVoucherType : " + oEx.Message); }
            finally
            {
                paoResVchType = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoVchType;
        }

        /// <summary>
        /// Process list Voucher Type Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMVoucherTypeTmp_L> C_PRCaListVoucherTypeLng(List<cmlResInfoVchTypeLng> paoResVchTypeLng)
        {
            List<cmlTFNMVoucherTypeTmp_L> aoVchType = new List<cmlTFNMVoucherTypeTmp_L>();

            try
            {
                aoVchType = paoResVchTypeLng.Select(oItem => new cmlTFNMVoucherTypeTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTVotCode = oItem.rtVotCode,
                    FTVotName = oItem.rtVotName,
                    FTVotRemark = oItem.rtVotRemark
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListVoucherTypeLng : " + oEx.Message); }
            finally
            {
                paoResVchTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoVchType;
        }

        #endregion End Voucher

        #region Rate

        /// <summary>
        /// Download Rate
        /// </summary>
        /// <param name="poRate"></param>
        //private void C_DWNxRate(cmlResItemOfcmlResRateDwn poRate)
        private bool C_DWNbRate(cmlResItemOfcmlResRateDwn poRate)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMRateTmp> aoRate;
            List<cmlTFNMRateTmp_L> aoRateLng;
            List<cmlTFNMRateUnitTmp> aoRateUnit;
            cDataReaderAdapter<cmlTFNMRateTmp> oRate;
            cDataReaderAdapter<cmlTFNMRateTmp_L> oRateLng;
            cDataReaderAdapter<cmlTFNMRateUnitTmp> oRateUnit;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMRateTmp");
                //oSql.AppendLine("FROM TFNMRate WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMRateTmp_L");
                //oSql.AppendLine("FROM TFNMRate_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMRateUnitTmp");
                //oSql.AppendLine("FROM TFNMRateUnit WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRateTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMRateTmp FROM TFNMRate with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMRateTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRateTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMRateTmp_L FROM TFNMRate_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMRateTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRateUnitTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMRateUnitTmp FROM TFNMRateUnit with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMRateUnitTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMRateTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRateTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMRateTmp FROM TFNMRate with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRateTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRate' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMRateTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMRateTmp FROM TFNMRate with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMRateTmp");
                oSql.AppendLine("");

                // TFNMRateTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRateTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMRateTmp_L FROM TFNMRate_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRateTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRate_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMRateTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMRateTmp_L FROM TFNMRate_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMRateTmp_L");
                oSql.AppendLine("");

                // TFNMRateUnitTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRateUnitTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMRateUnitTmp FROM TFNMRateUnit with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRateUnitTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRateUnit' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMRateUnitTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMRateUnitTmp FROM TFNMRateUnit with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMRateUnitTmp");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMRate
                aoRate = C_PRCaListRate(poRate.roItem.raRate);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRate = new cDataReaderAdapter<cmlTFNMRateTmp>(aoRate);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oRate.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMRateTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oRate);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbRate : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMRate_L
                aoRateLng = C_PRCaListRateLng(poRate.roItem.raRateLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRateLng = new cDataReaderAdapter<cmlTFNMRateTmp_L>(aoRateLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oRateLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMRateTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oRateLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbRate : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMRateUnit
                aoRateUnit = C_PRCaListRateUnit(poRate.roItem.raRateUnit);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRateUnit = new cDataReaderAdapter<cmlTFNMRateUnitTmp>(aoRateUnit);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oRateUnit.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMRateUnitTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oRateUnit);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbRate : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE RTE ");
                oSql.AppendLine("FROM TFNMRate RTE WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMRateTmp RTET WITH(NOLOCK) ON RTE.FTRteCode = RTET.FTRteCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMRate");
                oSql.AppendLine("SELECT * FROM TFNMRateTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMRateTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE RTEL ");
                oSql.AppendLine("FROM TFNMRate_L RTEL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMRateTmp_L RTELT WITH(NOLOCK) ON RTEL.FTRteCode = RTELT.FTRteCode");
                oSql.AppendLine("   AND  RTEL.FNLngID = RTELT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMRate_L");
                oSql.AppendLine("SELECT * FROM TFNMRateTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMRateTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE RTU ");
                oSql.AppendLine("FROM TFNMRateUnit RTU WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMRateUnitTmp RTUT WITH(NOLOCK) ON RTU.FTRteCode = RTUT.FTRteCode");
                oSql.AppendLine("   AND RTU.FNRtuSeq = RTUT.FNRtuSeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMRateUnit");
                oSql.AppendLine("SELECT * FROM TFNMRateUnitTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMRateUnitTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxRate : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbRate : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poRate = null;
                oSql = null;
                oTranscation = null;
                aoRate = null;
                aoRateLng = null;
                oRate = null;
                oRateLng = null;
                aoRateUnit = null;
                oRateUnit = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Rate
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMRateTmp> C_PRCaListRate(List<cmlResInfoRate> paoResRate)
        {
            List<cmlTFNMRateTmp> aoRate = new List<cmlTFNMRateTmp>();

            try
            {
                aoRate = paoResRate.Select(oItem => new cmlTFNMRateTmp()
                {
                    FCRteFraction = oItem.rcRteFraction,
                    FCRteRate = oItem.rcRteRate,
                    FTRteCode = oItem.rtRteCode,
                    FTRteSign = oItem.rtRteSign,
                    FTRteStaLocal = oItem.rtRteStaLocal,
                    FTRteStaUse = oItem.rtRteStaUse,
                    FTRteType = oItem.rtRteType,
                    FTRteTypeChg = oItem.rtRteTypeChg,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRate : " + oEx.Message); }
            finally
            {
                paoResRate = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRate;
        }

        /// <summary>
        /// Process list Rate Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMRateTmp_L> C_PRCaListRateLng(List<cmlResInfoRateLng> paoResRateLng)
        {
            List<cmlTFNMRateTmp_L> aoRate = new List<cmlTFNMRateTmp_L>();

            try
            {
                aoRate = paoResRateLng.Select(oItem => new cmlTFNMRateTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTRteCode = oItem.rtRteCode,
                    FTRteDecText = oItem.rtRteDecText,
                    FTRteName = oItem.rtRteName,
                    FTRteNameText = oItem.rtRteNameText,
                    FTRteShtName = oItem.rtRteShtName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRateLng : " + oEx.Message); }
            finally
            {
                paoResRateLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRate;
        }

        /// <summary>
        /// Process list Rate Unit
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMRateUnitTmp> C_PRCaListRateUnit(List<cmlResInfoRateUnit> paoResRateUnit)
        {
            List<cmlTFNMRateUnitTmp> aoRteUnit = new List<cmlTFNMRateUnitTmp>();

            try
            {
                aoRteUnit = paoResRateUnit.Select(oItem => new cmlTFNMRateUnitTmp()
                {
                    FCRtuFac = oItem.rcRtuFac,
                    FNRtuSeq = oItem.rnRtuSeq,
                    FTRteCode = oItem.rtRteCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRateUnit : " + oEx.Message); }
            finally
            {
                paoResRateUnit = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRteUnit;
        }

        #endregion End Rate

        #region Banknote

        /// <summary>
        /// Download Banknote
        /// </summary>
        /// <param name="poBnt"></param>
        //private void C_DWNxBankNote(cmlResItemOfcmlResBankNoteDwn poBnt)
        private bool C_DWNbBankNote(cmlResItemOfcmlResBankNoteDwn poBnt)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMBankNoteTmp> aoBnt;
            List<cmlTFNMBankNoteTmp_L> aoBntLng;
            List<cmlTCNMImgObjTmp> aoImgObj;
            cDataReaderAdapter<cmlTCNMImgObjTmp> oImg;
            cDataReaderAdapter<cmlTFNMBankNoteTmp> oBnt;
            cDataReaderAdapter<cmlTFNMBankNoteTmp_L> oBntLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMBankNoteTmp");
                //oSql.AppendLine("FROM TFNMBankNote WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMBankNoteTmp_L");
                //oSql.AppendLine("FROM TFNMBankNote_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMBankNoteTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMBankNoteTmp FROM TFNMBankNote with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMBankNoteTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMBankNoteTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMBankNoteTmp_L FROM TFNMBankNote_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMBankNoteTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMBankNoteTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMBankNoteTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMBankNoteTmp FROM TFNMBankNote with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMBankNoteTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMBankNote' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMBankNoteTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMBankNoteTmp FROM TFNMBankNote with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMBankNoteTmp");
                oSql.AppendLine("");

                // TFNMBankNoteTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMBankNoteTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMBankNoteTmp_L FROM TFNMBankNote_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMBankNoteTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMBankNote_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMBankNoteTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMBankNoteTmp_L FROM TFNMBankNote_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMBankNoteTmp_L");

                // TCNMImgObjTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgObjTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObjTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObj' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMImgObjTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgObjTmp");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMBankNote
                aoBnt = C_PRCaListBanknote(poBnt.roItem.raBankNote);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oBnt = new cDataReaderAdapter<cmlTFNMBankNoteTmp>(aoBnt);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oBnt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMBankNoteTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oBnt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBankNote : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMBankNote_L
                aoBntLng = C_PRCaListBanknoteLng(poBnt.roItem.raBankNoteLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oBntLng = new cDataReaderAdapter<cmlTFNMBankNoteTmp_L>(aoBntLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oBntLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMBankNoteTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oBntLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBankNote : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                // Bulk Copy : TCNMImgObj
                aoImgObj = C_PRCaListImageObject(poBnt.roItem.raImage);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oImg = new cDataReaderAdapter<cmlTCNMImgObjTmp>(aoImgObj);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oImg.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgObjTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImg);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbBankNote : " + oEx.Message);
                        return false;
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE BNT ");
                oSql.AppendLine("FROM TFNMBankNote BNT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMBankNoteTmp BNTT WITH(NOLOCK) ON BNT.FTRteCode = BNTT.FTRteCode");
                oSql.AppendLine("   AND BNT.FTBntCode = BNTT.FTBntCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMBankNote");
                oSql.AppendLine("SELECT * FROM TFNMBankNoteTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMBankNoteTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE BNTL ");
                oSql.AppendLine("FROM TFNMBankNote_L BNTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMBankNoteTmp_L BNTLT WITH(NOLOCK) ON BNTL.FTRteCode = BNTLT.FTRteCode");
                oSql.AppendLine("   AND BNTL.FTBntCode = BNTLT.FTBntCode");
                oSql.AppendLine("   AND BNTL.FNLngID = BNTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMBankNote_L");
                oSql.AppendLine("SELECT * FROM TFNMBankNoteTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMBankNoteTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE IMG ");
                oSql.AppendLine("FROM TCNMImgObj IMG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgObjTmp IMGT WITH(NOLOCK) ON IMG.FTImgRefID = IMGT.FTImgRefID");
                oSql.AppendLine("AND IMG.FNImgSeq = IMGT.FNImgSeq AND IMG.FTImgTable = IMGT.FTImgTable AND IMG.FTImgKey = IMGT.FTImgKey");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgObj");
                oSql.AppendLine("(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy ");
                oSql.AppendLine("FROM TCNMImgObjTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxBankNote : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbBankNote : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poBnt = null;
                oSql = null;
                oTranscation = null;
                aoBnt = null;
                aoBntLng = null;
                oBnt = null;
                oBntLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Banknote
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMBankNoteTmp> C_PRCaListBanknote(List<cmlResInfoBankNote> paoResBnt)
        {
            List<cmlTFNMBankNoteTmp> aoBnt = new List<cmlTFNMBankNoteTmp>();

            try
            {
                aoBnt = paoResBnt.Select(oItem => new cmlTFNMBankNoteTmp()
                {
                    FCBntRateAmt = oItem.rcBntRateAmt,
                    FTBntCode = oItem.rtBntCode,
                    FTBntStaShw = oItem.rtBntStaShw,
                    FTRteCode = oItem.rtRteCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListBanknote : " + oEx.Message); }
            finally
            {
                paoResBnt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoBnt;
        }

        /// <summary>
        /// Process list Banknote Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMBankNoteTmp_L> C_PRCaListBanknoteLng(List<cmlResInfoBankNoteLng> paoResBntLng)
        {
            List<cmlTFNMBankNoteTmp_L> aoBnt = new List<cmlTFNMBankNoteTmp_L>();

            try
            {
                aoBnt = paoResBntLng.Select(oItem => new cmlTFNMBankNoteTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTBntCode = oItem.rtBntCode,
                    FTBntName = oItem.rtBntName,
                    FTBntRmk = oItem.rtBntRmk,
                    FTRteCode = oItem.rtRteCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListBanknoteLng : " + oEx.Message); }
            finally
            {
                paoResBntLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoBnt;
        }

        #endregion End Banknote

        #region Card

        /// <summary>
        /// Download Card
        /// </summary>
        /// <param name="poCard"></param>
        //private void C_DWNxCard(cmlResItemOfcmlResCardDwn poCard)
        private bool C_DWNbCard(cmlResItemOfcmlResCardDwn poCard)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMCardTmp> aoCard;
            List<cmlTFNMCardTmp_L> aoCardLng;
            cDataReaderAdapter<cmlTFNMCardTmp> oCard;
            cDataReaderAdapter<cmlTFNMCardTmp_L> oCardLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCardTmp");
                //oSql.AppendLine("FROM TFNMCard WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCardTmp_L");
                //oSql.AppendLine("FROM TFNMCard_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCardTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCardTmp FROM TFNMCard with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCardTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCardTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCardTmp_L FROM TFNMCard_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCardTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMCardTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCardTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCardTmp FROM TFNMCard with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCardTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCard' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCardTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCardTmp FROM TFNMCard with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCardTmp");
                oSql.AppendLine("");

                // TFNMCardTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCardTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCardTmp_L FROM TFNMCard_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCardTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCard_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCardTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCardTmp_L FROM TFNMCard_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCardTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMCard
                aoCard = C_PRCaListCard(poCard.roItem.raCard);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCard = new cDataReaderAdapter<cmlTFNMCardTmp>(aoCard);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCard.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCardTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCard);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCard : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMCard_L
                aoCardLng = C_PRCaListCardLng(poCard.roItem.raCardLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCardLng = new cDataReaderAdapter<cmlTFNMCardTmp_L>(aoCardLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCardLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCardTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCardLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCard : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CRD ");
                oSql.AppendLine("FROM TFNMCard CRD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCardTmp CRDT WITH(NOLOCK) ON CRD.FTCrdCode = CRDT.FTCrdCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCard");
                oSql.AppendLine("SELECT * FROM TFNMCardTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCardTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CRDL ");
                oSql.AppendLine("FROM TFNMCard_L CRDL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCardTmp_L CRDLT WITH(NOLOCK) ON CRDL.FTCrdCode = CRDLT.FTCrdCode");
                oSql.AppendLine("   AND  CRDL.FNLngID = CRDLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCard_L");
                oSql.AppendLine("SELECT * FROM TFNMCardTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCardTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCard : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCard : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poCard = null;
                oSql = null;
                oTranscation = null;
                aoCard = null;
                aoCardLng = null;
                oCard = null;
                oCardLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Card
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCardTmp> C_PRCaListCard(List<cmlResInfoCard> paoResCard)
        {
            List<cmlTFNMCardTmp> aoCard = new List<cmlTFNMCardTmp>();

            try
            {
                aoCard = paoResCard.Select(oItem => new cmlTFNMCardTmp()
                {
                    FCCrdDeposit = oItem.rcCrdDeposit,
                    FCCrdValue = oItem.rcCrdValue,
                    FDCrdExpireDate = oItem.rdCrdExpireDate,
                    FDCrdLastTopup = oItem.rdCrdLastTopup,
                    FDCrdResetDate = oItem.rdCrdResetDate,
                    FDCrdStartDate = oItem.rdCrdStartDate,
                    FTCrdCode = oItem.rtCrdCode,
                    FTCrdHolderID = oItem.rtCrdHolderID,
                    FTCrdRefID = oItem.rtCrdRefID,
                    FTCrdStaActive = oItem.rtCrdStaActive,
                    FTCrdStaLocate = oItem.rtCrdStaLocate,
                    FTCrdStaType = oItem.rtCrdStaType,
                    FTCtyCode = oItem.rtCtyCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCard : " + oEx.Message); }
            finally
            {
                paoResCard = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCard;
        }

        /// <summary>
        /// Process list Card Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCardTmp_L> C_PRCaListCardLng(List<cmlResInfoCardLng> paoResCardLng)
        {
            List<cmlTFNMCardTmp_L> aoCard = new List<cmlTFNMCardTmp_L>();

            try
            {
                aoCard = paoResCardLng.Select(oItem => new cmlTFNMCardTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCrdCode = oItem.rtCrdCode,
                    FTCrdName = oItem.rtCrdName,
                    FTCrdRmk = oItem.rtCrdRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCardLng : " + oEx.Message); }
            finally
            {
                paoResCardLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCard;
        }

        #endregion End Card

        #region Card Type

        /// <summary> 
        /// Download Card Type
        /// </summary>
        /// <param name="poCardType"></param>
        //private void C_DWNxCardType(cmlResItemOfcmlResCardTypeDwn poCardType)
        private bool C_DWNbCardType(cmlResItemOfcmlResCardTypeDwn poCardType)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMCardTypeTmp> aoCardType;
            List<cmlTFNMCardTypeTmp_L> aoCardTypeLng;
            cDataReaderAdapter<cmlTFNMCardTypeTmp> oCardType;
            cDataReaderAdapter<cmlTFNMCardTypeTmp_L> oCardTypeLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCardTypeTmp");
                //oSql.AppendLine("FROM TFNMCardType WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCardTypeTmp_L");
                //oSql.AppendLine("FROM TFNMCardType_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCardTypeTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCardTypeTmp FROM TFNMCardType with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCardTypeTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCardTypeTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCardTypeTmp_L FROM TFNMCardType_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCardTypeTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMCardTypeTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCardTypeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCardTypeTmp FROM TFNMCardType with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCardTypeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCardType' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCardTypeTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCardTypeTmp FROM TFNMCardType with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCardTypeTmp");
                oSql.AppendLine("");

                // TFNMCardTypeTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCardTypeTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCardTypeTmp_L FROM TFNMCardType_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCardTypeTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCardType_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCardTypeTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCardTypeTmp_L FROM TFNMCardType_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCardTypeTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMCardType
                aoCardType = C_PRCaListCardType(poCardType.roItem.raCardType);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCardType = new cDataReaderAdapter<cmlTFNMCardTypeTmp>(aoCardType);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCardType.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCardTypeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCardType);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCardType : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMCardType_L
                aoCardTypeLng = C_PRCaListCardTypeLng(poCardType.roItem.raCardTypeLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCardTypeLng = new cDataReaderAdapter<cmlTFNMCardTypeTmp_L>(aoCardTypeLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCardTypeLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCardTypeTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCardTypeLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCardType : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CTY ");
                oSql.AppendLine("FROM TFNMCardType CTY WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCardTypeTmp CTYT WITH(NOLOCK) ON CTY.FTCtyCode = CTYT.FTCtyCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCardType");
                oSql.AppendLine("SELECT * FROM TFNMCardTypeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCardTypeTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CTYL ");
                oSql.AppendLine("FROM TFNMCardType_L CTYL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCardTypeTmp_L CTYLT WITH(NOLOCK) ON CTYL.FTCtyCode = CTYLT.FTCtyCode");
                oSql.AppendLine("   AND  CTYL.FNLngID = CTYLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCardType_L");
                oSql.AppendLine("SELECT * FROM TFNMCardTypeTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCardTypeTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCardType : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCardType : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poCardType = null;
                oSql = null;
                oTranscation = null;
                aoCardType = null;
                aoCardTypeLng = null;
                oCardType = null;
                oCardTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Card Type
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCardTypeTmp> C_PRCaListCardType(List<cmlResInfoCardType> paoResCardType)
        {
            List<cmlTFNMCardTypeTmp> aoCardType = new List<cmlTFNMCardTypeTmp>();

            try
            {
                aoCardType = paoResCardType.Select(oItem => new cmlTFNMCardTypeTmp()
                {
                    FCCtyDeposit = oItem.rcCtyDeposit,
                    FCCtyTopupAuto = oItem.rcCtyTopupAuto,
                    FNCtyExpiredType = oItem.rnCtyExpiredType,
                    FNCtyExpirePeriod = oItem.rnCtyExpirePeriod,
                    FTCtyStaAlwRet = oItem.rtCtyStaAlwRet,
                    FTCtyCode = oItem.rtCtyCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCardType : " + oEx.Message); }
            finally
            {
                paoResCardType = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCardType;
        }

        /// <summary>
        /// Process list Card Type Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCardTypeTmp_L> C_PRCaListCardTypeLng(List<cmlResInfoCardTypeLng> paoResCardTypeLng)
        {
            List<cmlTFNMCardTypeTmp_L> aoCardType = new List<cmlTFNMCardTypeTmp_L>();

            try
            {
                aoCardType = paoResCardTypeLng.Select(oItem => new cmlTFNMCardTypeTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCtyCode = oItem.rtCtyCode,
                    FTCtyName = oItem.rtCtyName,
                    FTCtyRmk = oItem.rtCtyRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCardTypeLng : " + oEx.Message); }
            finally
            {
                paoResCardTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCardType;
        }

        #endregion End Card Type

        #region Coupon List

        /// <summary> 
        /// Download Coupon List
        /// </summary>
        /// <param name="poCrdCpnList"></param>
        //private void C_DWNxCouponList(cmlResItemOfcmlResCrdCpnListDwn poCrdCpnList)
        private bool C_DWNbCouponList(cmlResItemOfcmlResCrdCpnListDwn poCrdCpnList)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMCrdCpnListTmp> aoCrdCpnList;
            List<cmlTFNMCrdCpnListTmp_L> aoCrdCpnListLng;
            cDataReaderAdapter<cmlTFNMCrdCpnListTmp> oCrdCpnList;
            cDataReaderAdapter<cmlTFNMCrdCpnListTmp_L> oCrdCpnListLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCrdCpnListTmp");
                //oSql.AppendLine("FROM TFNMCrdCpnList WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMCrdCpnListTmp_L");
                //oSql.AppendLine("FROM TFNMCrdCpnList_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCrdCpnListTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCrdCpnListTmp FROM TFNMCrdCpnList with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCrdCpnListTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCrdCpnListTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TFNMCrdCpnListTmp_L FROM TFNMCrdCpnList_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TFNMCrdCpnListTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TFNMCrdCpnListTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCrdCpnListTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCrdCpnListTmp FROM TFNMCrdCpnList with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCrdCpnListTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCrdCpnList' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCrdCpnListTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCrdCpnListTmp FROM TFNMCrdCpnList with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCrdCpnListTmp");
                oSql.AppendLine("");

                // TFNMCrdCpnListTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMCrdCpnListTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TFNMCrdCpnListTmp_L FROM TFNMCrdCpnList_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCrdCpnListTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMCrdCpnList_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TFNMCrdCpnListTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TFNMCrdCpnListTmp_L FROM TFNMCrdCpnList_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMCrdCpnListTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TFNMCrdCpnList
                aoCrdCpnList = C_PRCaListCouponList(poCrdCpnList.roItem.raCrdCpnList);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCrdCpnList = new cDataReaderAdapter<cmlTFNMCrdCpnListTmp>(aoCrdCpnList);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCrdCpnList.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCrdCpnListTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCrdCpnList);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCouponList : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMCrdCpnList_L
                aoCrdCpnListLng = C_PRCaListCouponListLng(poCrdCpnList.roItem.raCrdCpnListLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCrdCpnListLng = new cDataReaderAdapter<cmlTFNMCrdCpnListTmp_L>(aoCrdCpnListLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCrdCpnListLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMCrdCpnListTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCrdCpnListLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCouponList : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CCL ");
                oSql.AppendLine("FROM TFNMCrdCpnList CCL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCrdCpnListTmp CCLT WITH(NOLOCK) ON CCL.FTCclCode = CCLT.FTCclCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCrdCpnList");
                oSql.AppendLine("SELECT * FROM TFNMCrdCpnListTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCrdCpnListTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CCLL ");
                oSql.AppendLine("FROM TFNMCrdCpnList_L CCLL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMCrdCpnListTmp_L CCLLT WITH(NOLOCK) ON CCLL.FTCclCode = CCLLT.FTCclCode");
                oSql.AppendLine("   AND CCLL.FNLngID = CCLLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMCrdCpnList_L");
                oSql.AppendLine("SELECT * FROM TFNMCrdCpnListTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMCrdCpnListTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCouponList : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCouponList : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poCrdCpnList = null;
                oSql = null;
                oTranscation = null;
                aoCrdCpnList = null;
                aoCrdCpnListLng = null;
                oCrdCpnList = null;
                oCrdCpnListLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Coupon List
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCrdCpnListTmp> C_PRCaListCouponList(List<cmlResInfoCrdCpnList> paoResCrdCpnList)
        {
            List<cmlTFNMCrdCpnListTmp> aoCrdCpnList = new List<cmlTFNMCrdCpnListTmp>();

            try
            {
                aoCrdCpnList = paoResCrdCpnList.Select(oItem => new cmlTFNMCrdCpnListTmp()
                {
                    FCCclAmt = oItem.rcCclAmt,
                    FDCclEndDate = oItem.rdCclEndDate,
                    FDCclStartDate = oItem.rdCclStartDate,
                    FTCclCode = oItem.rtCclCode,
                    FTCclStaUse = oItem.rtCclStaUse,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponList : " + oEx.Message); }
            finally
            {
                paoResCrdCpnList = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCrdCpnList;
        }

        /// <summary>
        /// Process list Coupon List Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMCrdCpnListTmp_L> C_PRCaListCouponListLng(List<cmlResInfoCrdCpnListLng> paoResCrdCpnListLng)
        {
            List<cmlTFNMCrdCpnListTmp_L> aoCrdCpnList = new List<cmlTFNMCrdCpnListTmp_L>();

            try
            {
                aoCrdCpnList = paoResCrdCpnListLng.Select(oItem => new cmlTFNMCrdCpnListTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCclCode = oItem.rtCclCode,
                    FTCclName = oItem.rtCclName,
                    FTCclPrnCond = oItem.rtCclPrnCond
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCouponListLng : " + oEx.Message); }
            finally
            {
                paoResCrdCpnListLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCrdCpnList;
        }

        #endregion End Coupon List

        #region Pos

        /// <summary>
        /// Download Pos
        /// </summary>
        /// <param name="poPos"></param>
        //private void C_DWNxPos(cmlResItemOfcmlResPosDwn poPos)
        private bool C_DWNbPos(cmlResItemOfcmlResPosDwn poPos)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPosTmp> aoPos;
            List<cmlTCNMPosTmp_L> aoPosLng;    //*Arm 63-04-08
            List<cmlTCNMPosHWTmp> aoPosHW;
            List<cmlTCNMPosLastNoTmp> aoPosLastNo;
            List<cmlTFNMEdcTmp> aoEdc;
            List<cmlTFNMEdcTmp_L> aoEdcLng;
            List<cmlTCNMPrinterTmp> aoPrinter;
            List<cmlTCNMPrinterTmp_L> aoPrinterLng;
            cDataReaderAdapter<cmlTCNMPosTmp> oPos;
            cDataReaderAdapter<cmlTCNMPosTmp_L> oPosLng;    //*Arm 63-04-08
            cDataReaderAdapter<cmlTCNMPosHWTmp> oPosHW;
            cDataReaderAdapter<cmlTCNMPosLastNoTmp> oPosLastNo;
            cDataReaderAdapter<cmlTFNMEdcTmp> oEdc;
            cDataReaderAdapter<cmlTFNMEdcTmp_L> oEdcLng;
            cDataReaderAdapter<cmlTCNMPrinterTmp> oPrinter;
            cDataReaderAdapter<cmlTCNMPrinterTmp_L> oPrinterLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPosTmp");
                //oSql.AppendLine("FROM TCNMPos WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPosHWTmp");
                //oSql.AppendLine("FROM TCNMPosHW WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPosLastNoTmp");
                //oSql.AppendLine("FROM TCNMPosLastNo WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMEdcTmp");
                //oSql.AppendLine("FROM TFNMEdc WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TFNMEdcTmp_L");
                //oSql.AppendLine("FROM TFNMEdc_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPrinterTmp");
                //oSql.AppendLine("FROM TCNMPrinter WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPrinterTmp_L");
                //oSql.AppendLine("FROM TCNMPrinter_L WITH(ROWLOCK)");

                //*Em 62-06-26 ++++++++++
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPosTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPosTmp FROM TCNMPos with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPosTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPos' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPosTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPosTmp FROM TCNMPos with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPosTmp");
                oSql.AppendLine("");
                //*Arm 63-04-08
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPosTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPosTmp_L FROM TCNMPos_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPosTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPos_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPosTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPosTmp_L FROM TCNMPos_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPosTmp_L");
                oSql.AppendLine("");
                //+++++++++++++
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPosHWTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPosHWTmp FROM TCNMPosHW with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPosHWTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPosHW' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPosHWTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPosHWTmp FROM TCNMPosHW with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPosHWTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPosLastNoTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPosLastNoTmp FROM TCNMPosLastNo with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPosLastNoTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPosLastNo' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPosLastNoTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPosLastNoTmp FROM TCNMPosLastNo with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPosLastNoTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMEdcTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TFNMEdcTmp FROM TFNMEdc with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMEdcTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMEdc' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TFNMEdcTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TFNMEdcTmp FROM TFNMEdc with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMEdcTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMEdcTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TFNMEdcTmp_L FROM TFNMEdc_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMEdcTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMEdc_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TFNMEdcTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TFNMEdcTmp_L FROM TFNMEdc_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMEdcTmp_L");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPrinterTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPrinterTmp FROM TCNMPrinter with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPrinterTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPrinter' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPrinterTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPrinterTmp FROM TCNMPrinter with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPrinterTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPrinterTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPrinterTmp_L FROM TCNMPrinter_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPrinterTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPrinter_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPrinterTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPrinterTmp_L FROM TCNMPrinter_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPrinterTmp_L");
                //+++++++++++++++++++++++
                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPos
                aoPos = C_PRCaListPos(poPos.roItem.raPos);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPos = new cDataReaderAdapter<cmlTCNMPosTmp>(aoPos);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPos.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPosTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPos);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPos/TCNMPosTmp : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //*Arm 63-04-08

                // Bulk Copy : TCNMPos_L
                aoPosLng = C_PRCaListPosLng(poPos.roItem.raPosLng);

                oPosLng = new cDataReaderAdapter<cmlTCNMPosTmp_L>(aoPosLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPosLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPosTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPosLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPos/TCNMPosTmp_L : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }
                //+++++++++++++


                //oTranscation.Commit();

                // Bulk Copy : TCNMPosHW
                aoPosHW = C_PRCaListPosHW(poPos.roItem.raPosHW);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPosHW = new cDataReaderAdapter<cmlTCNMPosHWTmp>(aoPosHW);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPosHW.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPosHWTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPosHW);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPos/TCNMPosHWTmp : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPosLastNo
                aoPosLastNo = C_PRCaListPosLastNo(poPos.roItem.raPosLastNo);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPosLastNo = new cDataReaderAdapter<cmlTCNMPosLastNoTmp>(aoPosLastNo);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPosLastNo.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPosLastNoTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPosLastNo);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPos/TCNMPosLastNoTmp : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMEdc
                aoEdc = C_PRCaListEdc(poPos.roItem.raEdc);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oEdc = new cDataReaderAdapter<cmlTFNMEdcTmp>(aoEdc);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oEdc.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMEdcTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oEdc);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPos/TFNMEdcTmp : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TFNMEdc_L
                aoEdcLng = C_PRCaListEdcLng(poPos.roItem.raEdcLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oEdcLng = new cDataReaderAdapter<cmlTFNMEdcTmp_L>(aoEdcLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oEdcLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMEdcTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oEdcLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPos/TFNMEdcTmp_L : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPrinter
                aoPrinter = C_PRCaListPrinter(poPos.roItem.raPrinter);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPrinter = new cDataReaderAdapter<cmlTCNMPrinterTmp>(aoPrinter);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPrinter.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPrinterTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPrinter);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPos/TCNMPrinterTmp : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPrinter_L
                aoPrinterLng = C_PRCaListPrinterLng(poPos.roItem.raPrinterLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPrinterLng = new cDataReaderAdapter<cmlTCNMPrinterTmp_L>(aoPrinterLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPrinterLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPrinterTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPrinterLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPos/TCNMPrinterTmp_L : " + oEx.Message);//*Em 61-11-14
                        return false;//*Em 61-11-14
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                // TCNMPos
                oSql.AppendLine("DELETE POS ");
                oSql.AppendLine("FROM TCNMPos POS WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPosTmp POST WITH(NOLOCK) ON POS.FTPosCode = POST.FTPosCode AND POS.FTBchCode = POST.FTBchCode"); //*Arm 63-08-10 WHERE FTBchCode
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPos");
                oSql.AppendLine("SELECT * FROM TCNMPosTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPosTmp");
                oSql.AppendLine();
                // TCNMPos_L
                oSql.AppendLine("DELETE POSL ");
                oSql.AppendLine("FROM TCNMPos_L POSL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPosTmp_L POSLT WITH(NOLOCK) ON POSL.FTPosCode = POSLT.FTPosCode AND POSL.FTBchCode = POSLT.FTBchCode"); //*Arm 63-08-10 WHERE FTBchCode
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPos_L");
                oSql.AppendLine("SELECT * FROM TCNMPosTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                // TCNMPosHW
                oSql.AppendLine("DELETE PHW ");
                oSql.AppendLine("FROM TCNMPosHW PHW WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPosHWTmp PHWT WITH(NOLOCK) ON PHW.FTPhwCode = PHWT.FTPhwCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPosHW");
                oSql.AppendLine("SELECT * FROM TCNMPosHWTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPosHWTmp");
                oSql.AppendLine();
                // TCNMPosLastNo
                oSql.AppendLine("DELETE PLN ");
                oSql.AppendLine("FROM TCNMPosLastNo PLN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPosLastNoTmp PLNT WITH(NOLOCK) ON PLN.FTPosCode = PLNT.FTPosCode");
                oSql.AppendLine("   AND PLN.FNPosDocType = PLNT.FNPosDocType");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPosLastNo");
                oSql.AppendLine("SELECT * FROM TCNMPosLastNoTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPosLastNoTmp");
                oSql.AppendLine();
                // TFNMEdc
                oSql.AppendLine("DELETE EDC ");
                oSql.AppendLine("FROM TFNMEdc EDC WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMEdcTmp EDCT WITH(NOLOCK) ON EDC.FTEdcCode = EDCT.FTEdcCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMEdc");
                oSql.AppendLine("SELECT * FROM TFNMEdcTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMEdcTmp");
                oSql.AppendLine();
                // TFNMEdc_L
                oSql.AppendLine("DELETE EDCL ");
                oSql.AppendLine("FROM TFNMEdc_L EDCL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TFNMEdcTmp_L EDCLT WITH(NOLOCK) ON EDCL.FTEdcCode = EDCLT.FTEdcCode");
                oSql.AppendLine("   AND  EDCL.FNLngID = EDCLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TFNMEdc_L");
                oSql.AppendLine("SELECT * FROM TFNMEdcTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TFNMEdcTmp_L");
                oSql.AppendLine();
                // TCNMPrinter
                oSql.AppendLine("DELETE PRN ");
                oSql.AppendLine("FROM TCNMPrinter PRN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPrinterTmp PRNT WITH(NOLOCK) ON PRN.FTPrnCode = PRNT.FTPrnCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPrinter");
                oSql.AppendLine("SELECT * FROM TCNMPrinterTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPrinterTmp");
                oSql.AppendLine();
                // TCNMPrinter_L
                oSql.AppendLine("DELETE PRNL ");
                oSql.AppendLine("FROM TCNMPrinter_L PRNL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPrinterTmp_L PRNLT WITH(NOLOCK) ON PRNL.FTPrnCode = PRNLT.FTPrnCode");
                oSql.AppendLine("   AND  PRNL.FNLngID = PRNLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPrinter_L");
                oSql.AppendLine("SELECT * FROM TCNMPrinterTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPrinterTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-14
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPos : " + oEx.Message); }
            //*Em 61-11-14
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPos : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPos = null;
                oSql = null;
                oTranscation = null;
                aoPos = null;
                aoPosHW = null;
                oPos = null;
                oPosHW = null;
                aoPosLastNo = null;
                aoEdc = null;
                aoEdcLng = null;
                aoPrinter = null;
                aoPrinterLng = null;
                oPosLastNo = null;
                oEdc = null;
                oEdcLng = null;
                oPrinter = null;
                oPrinterLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Pos
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPosTmp> C_PRCaListPos(List<cmlResInfoPos> paoResPos)
        {
            List<cmlTCNMPosTmp> aoPos = new List<cmlTCNMPosTmp>();

            try
            {
                aoPos = paoResPos.Select(oItem => new cmlTCNMPosTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPosCode = oItem.rtPosCode,
                    FTPosRegNo = oItem.rtPosRegNo,
                    FTPosStaPrnEJ = oItem.rtPosStaPrnEJ,
                    FTPosStaRorW = oItem.rtPosStaRorW,
                    FTPosStaShift = oItem.rtPosStaShift,
                    FTPosStaUse = oItem.rtPosStaUse,
                    FTPosStaVatSend = oItem.rtPosStaVatSend,
                    FTPosType = oItem.rtPosType,
                    FTSmgCode = oItem.rtSmgCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FTPosStaSumScan = oItem.rtPosStaSumScan,
                    FTPosStaSumPrn = oItem.rtPosStaSumPrn,
                    FTPosStaDate = oItem.rtPosStaDate,   //*Arm 63-06-16 ปรับตามโครงสร้าง SKC
                    FTPrgRegToken = oItem.rtPrgRegToken  //*Arm 63-07-20
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPos : " + oEx.Message); }
            finally
            {
                paoResPos = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPos;
        }

        /// <summary>
        /// *Arm 63-04-08
        /// Process list Pos Languague
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPosTmp_L> C_PRCaListPosLng(List<cmlResInfoPosLng> paoResPosLng)
        {
            List<cmlTCNMPosTmp_L> aoPosLng = new List<cmlTCNMPosTmp_L>();

            try
            {
                aoPosLng = paoResPosLng.Select(oItem => new cmlTCNMPosTmp_L()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPosCode = oItem.rtPosCode,
                    FNLngID = oItem.rnLngID,
                    FTPosName = oItem.rtPosName,
                    FTPosNameOth = oItem.rtPosNameOth,
                    FTPosRmk = oItem.rtPosRmk

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPosLng : " + oEx.Message); }
            finally
            {
                paoResPosLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPosLng;
        }

        /// <summary>
        /// Process list Pos Hardware
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPosHWTmp> C_PRCaListPosHW(List<cmlResInfoPosHW> paoResPosHW)
        {
            List<cmlTCNMPosHWTmp> aoPosHW = new List<cmlTCNMPosHWTmp>();

            try
            {
                aoPosHW = paoResPosHW.Select(oItem => new cmlTCNMPosHWTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FNPhwSeq = oItem.rnPhwSeq,
                    FNPhwTimeOut = oItem.rnPhwTimeOut,
                    FTPhwCode = oItem.rtPhwCode,
                    FTPhwCodeRef = oItem.rtPhwCodeRef,
                    FTPhwConnRef = oItem.rtPhwConnRef,
                    FTPhwConnType = oItem.rtPhwConnType,
                    FTPhwCustom = oItem.rtPhwCustom,
                    FTPhwName = oItem.rtPhwName,
                    FTPosCode = oItem.rtPosCode,
                    FTShwCode = oItem.rtShwCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPosHW : " + oEx.Message); }
            finally
            {
                paoResPosHW = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPosHW;
        }

        /// <summary>
        /// Process list Pos Last No
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPosLastNoTmp> C_PRCaListPosLastNo(List<cmlResInfoPosLastNo> paoResPosLast)
        {
            List<cmlTCNMPosLastNoTmp> aoPosLast = new List<cmlTCNMPosLastNoTmp>();

            try
            {
                aoPosLast = paoResPosLast.Select(oItem => new cmlTCNMPosLastNoTmp()
                {
                    FDPosLastSale = oItem.rdPosLastSale,
                    FNPosDocType = oItem.rnPosDocType,
                    FNPosLastNo = oItem.rnPosLastNo,
                    FTPosCode = oItem.rtPosCode,
                    FTPosComName = oItem.rtPosComName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPosLastNo : " + oEx.Message); }
            finally
            {
                paoResPosLast = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPosLast;
        }

        /// <summary>
        /// Process list Edc
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMEdcTmp> C_PRCaListEdc(List<cmlResInfoEdc> paoResEdc)
        {
            List<cmlTFNMEdcTmp> aoEdc = new List<cmlTFNMEdcTmp>();

            try
            {
                aoEdc = paoResEdc.Select(oItem => new cmlTFNMEdcTmp()
                {
                    FTBnkCode = oItem.rtBnkCode,
                    FTEdcCode = oItem.rtEdcCode,
                    FTEdcOther = oItem.rtEdcOther,
                    FTEdcShwBkg = oItem.rtEdcShwBkg,
                    FTEdcShwFont = oItem.rtEdcShwFont,
                    FTSedCode = oItem.rtSedCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListEdc : " + oEx.Message); }
            finally
            {
                paoResEdc = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoEdc;
        }

        /// <summary>
        /// Process list Edc Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMEdcTmp_L> C_PRCaListEdcLng(List<cmlResInfoEdcLng> paoResEdcLng)
        {
            List<cmlTFNMEdcTmp_L> aoEdc = new List<cmlTFNMEdcTmp_L>();

            try
            {
                aoEdc = paoResEdcLng.Select(oItem => new cmlTFNMEdcTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTEdcCode = oItem.rtEdcCode,
                    FTEdcName = oItem.rtEdcName,
                    FTEdcRmk = oItem.rtEdcRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListEdcLng : " + oEx.Message); }
            finally
            {
                paoResEdcLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoEdc;
        }

        /// <summary>
        /// Process list Printer
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPrinterTmp> C_PRCaListPrinter(List<cmlResInfoPrinter> paoResPrinter)
        {
            List<cmlTCNMPrinterTmp> aoPrinter = new List<cmlTCNMPrinterTmp>();

            try
            {
                aoPrinter = paoResPrinter.Select(oItem => new cmlTCNMPrinterTmp()
                {
                    FTPrnCode = oItem.rtPrnCode,
                    FTPrnDriver = oItem.rtPrnDriver,
                    FTPrnSrcType = oItem.rtPrnSrcType,
                    FTPrnType = oItem.rtPrnType,
                    FTSppCode = oItem.rtSppCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPrinter : " + oEx.Message); }
            finally
            {
                paoResPrinter = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPrinter;
        }

        /// <summary>
        /// Process list Printer Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPrinterTmp_L> C_PRCaListPrinterLng(List<cmlResInfoPrinterLng> paoResPrinterLng)
        {
            List<cmlTCNMPrinterTmp_L> aoPrinter = new List<cmlTCNMPrinterTmp_L>();

            try
            {
                aoPrinter = paoResPrinterLng.Select(oItem => new cmlTCNMPrinterTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPrnCode = oItem.rtPrnCode,
                    FTPrnName = oItem.rtPrnName,
                    FTPrnRmk = oItem.rtPrnRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPrinterLng : " + oEx.Message); }
            finally
            {
                paoResPrinterLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPrinter;
        }

        #endregion End Pos

        #region Slip Msg

        /// <summary>
        /// Download Slip Msg
        /// </summary>
        /// <param name="poSlipMsg"></param>
        //private void C_DWNxSlipMsg(cmlResItemOfcmlResSlipMsgDwn poSlipMsg)
        private bool C_DWNbSlipMsg(cmlResItemOfcmlResSlipMsgDwn poSlipMsg)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSlipMsgHDTmp_L> aoSmgHD;
            List<cmlTCNMSlipMsgDTTmp_L> aoSmgDT;
            cDataReaderAdapter<cmlTCNMSlipMsgHDTmp_L> oSmgHD;
            cDataReaderAdapter<cmlTCNMSlipMsgDTTmp_L> oSmgDT;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSlipMsgHDTmp_L");
                //oSql.AppendLine("FROM TCNMSlipMsgHD_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSlipMsgDTTmp_L");
                //oSql.AppendLine("FROM TCNMSlipMsgDT_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSlipMsgHDTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSlipMsgHDTmp_L FROM TCNMSlipMsgHD_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSlipMsgHDTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSlipMsgDTTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSlipMsgDTTmp_L FROM TCNMSlipMsgDT_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSlipMsgDTTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSlipMsgHDTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSlipMsgHDTmp_L FROM TCNMSlipMsgHD_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSlipMsgHDTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSlipMsgHD_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSlipMsgHDTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSlipMsgHDTmp_L FROM TCNMSlipMsgHD_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSlipMsgHDTmp_L");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSlipMsgDTTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSlipMsgDTTmp_L FROM TCNMSlipMsgDT_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSlipMsgDTTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSlipMsgDT_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSlipMsgDTTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSlipMsgDTTmp_L FROM TCNMSlipMsgDT_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSlipMsgDTTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSlipMsgHD_L
                aoSmgHD = C_PRCaListSlipMsgHDLng(poSlipMsg.roItem.raSlipMsgHDLng);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSmgHD = new cDataReaderAdapter<cmlTCNMSlipMsgHDTmp_L>(aoSmgHD);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSmgHD.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSlipMsgHDTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSmgHD);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSlipMsg : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSlipMsgDT_L
                aoSmgDT = C_PRCaListSlipMsgDTLng(poSlipMsg.roItem.raSlipMsgDTLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSmgDT = new cDataReaderAdapter<cmlTCNMSlipMsgDTTmp_L>(aoSmgDT);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSmgDT.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSlipMsgDTTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSmgDT);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSlipMsg : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SMHD ");
                oSql.AppendLine("FROM TCNMSlipMsgHD_L SMHD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSlipMsgHDTmp_L SMHDT WITH(NOLOCK) ON SMHD.FTSmgCode = SMHDT.FTSmgCode");
                oSql.AppendLine("   AND SMHD.FNLngID = SMHDT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSlipMsgHD_L");
                oSql.AppendLine("SELECT * FROM TCNMSlipMsgHDTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSlipMsgHDTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SMDT ");
                oSql.AppendLine("FROM TCNMSlipMsgDT_L SMDT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSlipMsgDTTmp_L SMDTT WITH(NOLOCK) ON SMDT.FTSmgCode = SMDTT.FTSmgCode");
                oSql.AppendLine("   AND SMDT.FNLngID = SMDTT.FNLngID");
                oSql.AppendLine("   AND SMDT.FTSmgType = SMDTT.FTSmgType");
                oSql.AppendLine("   AND SMDT.FNSmgSeq = SMDTT.FNSmgSeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSlipMsgDT_L");
                oSql.AppendLine("SELECT * FROM TCNMSlipMsgDTTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSlipMsgDTTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSlipMsg : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSlipMsg : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poSlipMsg = null;
                oSql = null;
                oTranscation = null;
                aoSmgHD = null;
                aoSmgDT = null;
                oSmgHD = null;
                oSmgDT = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Slip Msg HD Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSlipMsgHDTmp_L> C_PRCaListSlipMsgHDLng(List<cmlResInfoSlipMsgHDLng> paoResSmgHD)
        {
            List<cmlTCNMSlipMsgHDTmp_L> aoSmgHD = new List<cmlTCNMSlipMsgHDTmp_L>();

            try
            {
                aoSmgHD = paoResSmgHD.Select(oItem => new cmlTCNMSlipMsgHDTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSmgCode = oItem.rtSmgCode,
                    FTSmgTitle = oItem.rtSmgTitle,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSlipMsgHDLng : " + oEx.Message); }
            finally
            {
                paoResSmgHD = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSmgHD;
        }

        /// <summary>
        /// Process list Slip Msg DT Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSlipMsgDTTmp_L> C_PRCaListSlipMsgDTLng(List<cmlResInfoSlipMsgDTLng> paoResSmgDT)
        {
            List<cmlTCNMSlipMsgDTTmp_L> aoSmgDT = new List<cmlTCNMSlipMsgDTTmp_L>();

            try
            {
                aoSmgDT = paoResSmgDT.Select(oItem => new cmlTCNMSlipMsgDTTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FNSmgSeq = oItem.rnSmgSeq,
                    FTSmgCode = oItem.rtSmgCode,
                    FTSmgName = oItem.rtSmgName,
                    FTSmgType = oItem.rtSmgType
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSlipMsgDTLng : " + oEx.Message); }
            finally
            {
                paoResSmgDT = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSmgDT;
        }

        #endregion End Slip Msg

        #region Function

        /// <summary>
        /// Download Function
        /// </summary>
        /// <param name="poFunc"></param>
        //private void C_DWNxFunction(cmlResItemOfcmlResFuncDwn poFunc)
        private bool C_DWNbFunction(cmlResItemOfcmlResFuncDwn poFunc)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTPSMFuncDTTmp> aoFuncDT;
            List<cmlTPSMFuncDTTmp_L> aoFuncDTLng;
            List<cmlTPSMFuncHDTmp> aoFuncHD;
            List<cmlTPSMFuncDTSpcTmp> aoFuncDTSpc;      //*Arm 63-09-10
            cDataReaderAdapter<cmlTPSMFuncDTTmp> oFuncDT;
            cDataReaderAdapter<cmlTPSMFuncDTTmp_L> oFuncDTLng;
            cDataReaderAdapter<cmlTPSMFuncHDTmp> oFuncHD;
            cDataReaderAdapter<cmlTPSMFuncDTSpcTmp> oFuncDTSpc;     //*Arm 63-09-10

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TPSMFuncDTTmp");
                //oSql.AppendLine("FROM TPSMFuncDT WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TPSMFuncDTTmp_L");
                //oSql.AppendLine("FROM TPSMFuncDT_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TPSMFuncHDTmp");
                //oSql.AppendLine("FROM TPSMFuncHD WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TPSMFuncDTTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TPSMFuncDTTmp FROM TPSMFuncDT with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TPSMFuncDTTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TPSMFuncDTTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TPSMFuncDTTmp_L FROM TPSMFuncDT_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TPSMFuncDTTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TPSMFuncHDTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TPSMFuncHDTmp FROM TPSMFuncHD with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TPSMFuncHDTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TPSMFuncDTTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TPSMFuncDTTmp FROM TPSMFuncDT with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TPSMFuncDTTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TPSMFuncDT' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TPSMFuncDTTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TPSMFuncDTTmp FROM TPSMFuncDT with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TPSMFuncDTTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TPSMFuncDTTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TPSMFuncDTTmp_L FROM TPSMFuncDT_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TPSMFuncDTTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TPSMFuncDT_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TPSMFuncDTTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TPSMFuncDTTmp_L FROM TPSMFuncDT_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TPSMFuncDTTmp_L");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TPSMFuncHDTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TPSMFuncHDTmp FROM TPSMFuncHD with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TPSMFuncHDTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TPSMFuncHD' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TPSMFuncHDTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TPSMFuncHDTmp FROM TPSMFuncHD with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TPSMFuncHDTmp");
                //+++++++++++++++++++++++
                //*Arm 63-09-10 TPSMFuncDTSpcTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TPSMFuncDTSpcTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TPSMFuncDTSpcTmp FROM TPSMFuncDTSpc with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TPSMFuncDTSpcTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TPSMFuncDTSpc' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TPSMFuncDTSpcTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TPSMFuncDTSpcTmp FROM TPSMFuncDTSpc with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TPSMFuncDTSpcTmp");
                //+++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TPSMFuncDT
                aoFuncDT = C_PRCaListFuncDT(poFunc.roItem.raFuncDT);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oFuncDT = new cDataReaderAdapter<cmlTPSMFuncDTTmp>(aoFuncDT);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oFuncDT.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TPSMFuncDTTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oFuncDT);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbFunction : " + oEx.Message); //*Em 61-11-15
                        return false; //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TPSMFuncDT_L
                aoFuncDTLng = C_PRCaListFuncDTLng(poFunc.roItem.raFuncDTLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oFuncDTLng = new cDataReaderAdapter<cmlTPSMFuncDTTmp_L>(aoFuncDTLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oFuncDTLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TPSMFuncDTTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oFuncDTLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbFunction : " + oEx.Message); //*Em 61-11-15
                        return false; //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TPSMFuncHD
                aoFuncHD = C_PRCaListFuncHD(poFunc.roItem.raFuncHD);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oFuncHD = new cDataReaderAdapter<cmlTPSMFuncHDTmp>(aoFuncHD);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oFuncHD.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TPSMFuncHDTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oFuncHD);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbFunction : " + oEx.Message); //*Em 61-11-15
                        return false; //*Em 61-11-15
                    }
                }

                //*Arm 63-09-10 TPSMFuncDTSpc
                // Bulk Copy : TPSMFuncDTSpc
                aoFuncDTSpc = C_PRCaListFuncDTSpc(poFunc.roItem.raFuncDTSpc);
                oFuncDTSpc = new cDataReaderAdapter<cmlTPSMFuncDTSpcTmp>(aoFuncDTSpc);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oFuncDTSpc.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TPSMFuncDTSpcTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oFuncDTSpc);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbFunction/TPSMFuncDTSpcTmp : " + oEx.Message); //*Em 61-11-15
                        return false; //*Em 61-11-15
                    }
                }
                //+++++++++++++++

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE FDT ");
                oSql.AppendLine("FROM TPSMFuncDT FDT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TPSMFuncDTTmp FDTT WITH(NOLOCK) ON FDT.FTGhdCode = FDTT.FTGhdCode");
                oSql.AppendLine("   AND FDT.FTSysCode = FDTT.FTSysCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TPSMFuncDT");
                oSql.AppendLine("SELECT * FROM TPSMFuncDTTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TPSMFuncDTTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE FDTL ");
                oSql.AppendLine("FROM TPSMFuncDT_L FDTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TPSMFuncDTTmp_L FDTLT WITH(NOLOCK) ON FDTL.FTGhdCode = FDTLT.FTGhdCode");
                oSql.AppendLine("   AND  FDTL.FNLngID = FDTLT.FNLngID");
                oSql.AppendLine("   AND  FDTL.FTSysCode = FDTLT.FTSysCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TPSMFuncDT_L");
                oSql.AppendLine("SELECT * FROM TPSMFuncDTTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TPSMFuncDTTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("DELETE FHD ");
                oSql.AppendLine("FROM TPSMFuncHD FHD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TPSMFuncHDTmp FHDT WITH(NOLOCK) ON FHD.FTGhdCode = FHDT.FTGhdCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TPSMFuncHD");
                oSql.AppendLine("SELECT * FROM TPSMFuncHDTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TPSMFuncHDTmp");
                //*Arm 63-09-10 TPSMFuncDTSpc
                oSql.AppendLine();
                oSql.AppendLine("DELETE SPC ");
                oSql.AppendLine("FROM TPSMFuncDTSpc SPC WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TPSMFuncDTSpcTmp SPCT WITH(NOLOCK) ON SPC.FTGhdCode = SPCT.FTGhdCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TPSMFuncDTSpc");
                oSql.AppendLine("SELECT * FROM TPSMFuncDTSpcTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //+++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true; //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxFunction : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbFunction : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poFunc = null;
                oSql = null;
                oTranscation = null;
                aoFuncDT = null;
                aoFuncDTLng = null;
                oFuncDT = null;
                oFuncDTLng = null;
                aoFuncHD = null;
                oFuncHD = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Function DTSpc (*Arm 63-09-10)
        /// </summary>
        /// <param name="paoResFuncDTSpc"></param>
        /// <returns></returns>
        private List<cmlTPSMFuncDTSpcTmp> C_PRCaListFuncDTSpc(List<cmlResInfoFuncDTSpc> paoResFuncDTSpc)
        {
            List<cmlTPSMFuncDTSpcTmp> aoFuncDTSpc = new List<cmlTPSMFuncDTSpcTmp>();

            try
            {
                aoFuncDTSpc = paoResFuncDTSpc.Select(oItem => new cmlTPSMFuncDTSpcTmp()
                {
                    FNGdtBtnSizeX = oItem.rnGdtBtnSizeX,
                    FNGdtBtnSizeY = oItem.rnGdtBtnSizeY,
                    FNGdtDefSeq = oItem.rnGdtDefSeq,
                    FNGdtPage = oItem.rnGdtPage,
                    FNGdtUsrSeq = oItem.rnGdtUsrSeq,
                    FTGdtCallByName = oItem.rtGdtCallByName,
                    FTGdtStaUse = oItem.rtGdtStaUse,
                    FTGhdCode = oItem.rtGhdCode,
                    FTSysCode = oItem.rtSysCode,
                    FNGdtFuncLevel = oItem.rnGdtFuncLevel,
                    FTGdtSysUse = oItem.rtGdtSysUse,
                    FTAppCode = oItem.rtAppCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListFuncDT : " + oEx.Message); }
            finally
            {
                paoResFuncDTSpc = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoFuncDTSpc;
        }

        /// <summary>
        /// Process list Function DT
        /// </summary>
        /// <returns></returns>
        private List<cmlTPSMFuncDTTmp> C_PRCaListFuncDT(List<cmlResInfoFuncDT> paoResFuncDT)
        {
            List<cmlTPSMFuncDTTmp> aoFuncDT = new List<cmlTPSMFuncDTTmp>();

            try
            {
                aoFuncDT = paoResFuncDT.Select(oItem => new cmlTPSMFuncDTTmp()
                {
                    FNGdtBtnSizeX = oItem.rnGdtBtnSizeX,
                    FNGdtBtnSizeY = oItem.rnGdtBtnSizeY,
                    FNGdtDefSeq = oItem.rnGdtDefSeq,
                    FNGdtPage = oItem.rnGdtPage,
                    FNGdtUsrSeq = oItem.rnGdtUsrSeq,
                    FTGdtCallByName = oItem.rtGdtCallByName,
                    FTGdtStaUse = oItem.rtGdtStaUse,
                    FTGhdCode = oItem.rtGhdCode,
                    FTSysCode = oItem.rtSysCode,
                    FNGdtFuncLevel = oItem.rnGdtFuncLevel,
                    FTGdtSysUse = oItem.rtGdtSysUse
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListFuncDT : " + oEx.Message); }
            finally
            {
                paoResFuncDT = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoFuncDT;
        }

        /// <summary>
        /// Process list Function DT Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTPSMFuncDTTmp_L> C_PRCaListFuncDTLng(List<cmlResInfoFuncDTLng> paoResFuncDTLng)
        {
            List<cmlTPSMFuncDTTmp_L> aoFunc = new List<cmlTPSMFuncDTTmp_L>();

            try
            {
                aoFunc = paoResFuncDTLng.Select(oItem => new cmlTPSMFuncDTTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSysCode = oItem.rtSysCode,
                    FTGhdCode = oItem.rtGhdCode,
                    FTGdtName = oItem.rtGdtName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListFuncDTLng : " + oEx.Message); }
            finally
            {
                paoResFuncDTLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoFunc;
        }

        /// <summary>
        /// Process list Function HD
        /// </summary>
        /// <returns></returns>
        private List<cmlTPSMFuncHDTmp> C_PRCaListFuncHD(List<cmlResInfoFuncHD> paoResFuncHD)
        {
            List<cmlTPSMFuncHDTmp> aoFuncHD = new List<cmlTPSMFuncHDTmp>();

            try
            {
                aoFuncHD = paoResFuncHD.Select(oItem => new cmlTPSMFuncHDTmp()
                {
                    FTGhdCode = oItem.rtGhdCode,
                    FNGhdMaxLayOutX = oItem.rnGhdMaxLayOutX,
                    FNGhdMaxLayOutY = oItem.rnGhdMaxLayOutY,
                    FNGhdMaxPerPage = oItem.rnGhdMaxPerPage,
                    FTGhdApp = oItem.rtGhdApp,
                    FTGhdLayOut = oItem.rtGhdLayOut,
                    FTGhdStaAlwChg = oItem.rtGhdStaAlwChg,
                    FTKbdGrpName = oItem.rtKbdGrpName,
                    FTKbdScreen = oItem.rtKbdScreen,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListFuncHD : " + oEx.Message); }
            finally
            {
                paoResFuncHD = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoFuncHD;
        }

        #endregion End Function

        #region AdMsg

        /// <summary>
        /// Download AdMsg
        /// </summary>
        /// <param name="poAdMsg"></param>
        //private void C_DWNxAdMsg(cmlResItemOfcmlResAdvMsgDwn poAdMsg)
        private bool C_DWNbAdMsg(cmlResItemOfcmlResAdvMsgDwn poAdMsg)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMAdMsgTmp> aoAdMsg;
            List<cmlTCNMAdMsgTmp_L> aoAdMsgLng;
            List<cmlTCNMMediaObjTmp> aoMediaObj;    //*Em 62-09-15
            List<cmlTCNMImgObjTmp> aoImgObj;    //*Em 62-09-15
            cDataReaderAdapter<cmlTCNMAdMsgTmp> oAdMsg;
            cDataReaderAdapter<cmlTCNMAdMsgTmp_L> oAdMsgLng;
            cDataReaderAdapter<cmlTCNMMediaObjTmp> oMediaObj;    //*Em 62-09-15
            cDataReaderAdapter<cmlTCNMImgObjTmp> oImgObj;    //*Em 62-09-15

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMAdMsgTmp");
                //oSql.AppendLine("FROM TCNMAdMsg WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMAdMsgTmp_L");
                //oSql.AppendLine("FROM TCNMAdMsg_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAdMsgTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMAdMsgTmp FROM TCNMAdMsg with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMAdMsgTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAdMsgTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMAdMsgTmp_L FROM TCNMAdMsg_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMAdMsgTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMAdMsgTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAdMsgTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMAdMsgTmp FROM TCNMAdMsg with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAdMsgTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAdMsg' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMAdMsgTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMAdMsgTmp FROM TCNMAdMsg with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAdMsgTmp");
                oSql.AppendLine("");

                // TCNMAdMsgTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAdMsgTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMAdMsgTmp_L FROM TCNMAdMsg_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAdMsgTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAdMsg_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMAdMsgTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMAdMsgTmp_L FROM TCNMAdMsg_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAdMsgTmp_L");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                //*Em 62-09-15
                oSql.AppendLine();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMMediaObjTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMMediaObjTmp FROM TCNMMediaObj with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMMediaObjTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMMediaObj' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMMediaObjTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMMediaObjTmp FROM TCNMMediaObj with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMMediaObjTmp");
                oSql.AppendLine();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgObjTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObjTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgObj' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMImgObjTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMImgObjTmp FROM TCNMImgObj with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgObjTmp");
                //++++++++++++++++++++
                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMAdMsg
                aoAdMsg = C_PRCaListAdMsg(poAdMsg.roItem.raAdvMsg);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oAdMsg = new cDataReaderAdapter<cmlTCNMAdMsgTmp>(aoAdMsg);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oAdMsg.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAdMsgTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oAdMsg);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbAdMsg : " + oEx.Message);  //*Em 61-11-15
                        return false;  //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMAdMsg_L
                aoAdMsgLng = C_PRCaListAdMsgLng(poAdMsg.roItem.raAdvMsgLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oAdMsgLng = new cDataReaderAdapter<cmlTCNMAdMsgTmp_L>(aoAdMsgLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oAdMsgLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAdMsgTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oAdMsgLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbAdMsg : " + oEx.Message);  //*Em 61-11-15
                        return false;  //*Em 61-11-15
                    }
                }

                //*Em 62-09-15
                aoMediaObj = C_PRCaListMediaObj(poAdMsg.roItem.raTCNMMediaObj);
                oMediaObj = new cDataReaderAdapter<cmlTCNMMediaObjTmp>(aoMediaObj);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oMediaObj.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMMediaObjTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oMediaObj);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbAdMsg/TCNMMediaObjTmp : " + oEx.Message);  //*Em 61-11-15
                        return false;  //*Em 61-11-15
                    }
                }

                aoImgObj = C_PRCaListImageObject(poAdMsg.roItem.raTCNMImgObj);
                oImgObj = new cDataReaderAdapter<cmlTCNMImgObjTmp>(aoImgObj);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oImgObj.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgObjTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImgObj);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbAdMsg/TCNMImgObjTmp : " + oEx.Message);  //*Em 61-11-15
                        return false;  //*Em 61-11-15
                    }
                }
                //+++++++++++++
                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                //*Net 63-07-30 clear ตาราง ก่อน insert ใหม่ทั้งหมด
                //oSql.AppendLine("DELETE ADV ");
                //oSql.AppendLine("FROM TCNMAdMsg ADV WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TCNMAdMsgTmp ADVT WITH(NOLOCK) ON ADV.FTAdvCode = ADVT.FTAdvCode");
                oSql.AppendLine("TRUNCATE TABLE TCNMAdMsg");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMAdMsg");
                oSql.AppendLine("SELECT * FROM TCNMAdMsgTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMAdMsgTmp");
                oSql.AppendLine();
                //*Net 63-07-30 clear ตาราง ก่อน insert ใหม่ทั้งหมด
                //oSql.AppendLine("DELETE ADVL ");
                //oSql.AppendLine("FROM TCNMAdMsg_L ADVL WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TCNMAdMsgTmp_L ADVLT WITH(NOLOCK) ON ADVL.FTAdvCode = ADVLT.FTAdvCode");
                //oSql.AppendLine("   AND ADVL.FNLngID = ADVLT.FNLngID");
                oSql.AppendLine("TRUNCATE TABLE TCNMAdMsg_L");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMAdMsg_L");
                oSql.AppendLine("SELECT * FROM TCNMAdMsgTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMAdMsgTmp_L");
                //*Em 62-09-15
                oSql.AppendLine("DELETE MDO");
                oSql.AppendLine("FROM TCNMMediaObj MDO WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMMediaObjTmp MDOT WITH(NOLOCK) ON MDO.FTMedRefID = MDOT.FTMedRefID");
                //*Net 63-07-30 delete เฉพาะ AdMsg
                //oSql.AppendLine("   AND MDO.FNMedSeq = MDOT.FNMedSeq AND MDO.FNMedType = MDOT.FNMedType");
                //oSql.AppendLine("   AND MDO.FTMedFileType = MDOT.FTMedFileType AND MDO.FTMedTable = MDOT.FTMedTable");
                //oSql.AppendLine("   AND MDO.FTMedKey = MDOT.FTMedKey");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMMediaObj(FTMedRefID,FNMedSeq,FNMedType,FTMedFileType,FTMedTable,FTMedKey,FTMedPath,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)");
                oSql.AppendLine("SELECT FTMedRefID,FNMedSeq,FNMedType,FTMedFileType,FTMedTable,FTMedKey,FTMedPath,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy");
                oSql.AppendLine("FROM TCNMMediaObjTmp WITH(NOLOCK)");
                oSql.AppendLine("WHERE FTMedTable='TCNMAdMsg'"); //*Net 63-07-30 insert เฉพาะ AdMsg
                oSql.AppendLine();
                oSql.AppendLine("DELETE IMG ");
                oSql.AppendLine("FROM TCNMImgObj IMG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgObjTmp IMGT WITH(NOLOCK) ON IMG.FTImgRefID = IMGT.FTImgRefID");
                //oSql.AppendLine("AND IMG.FNImgSeq = IMGT.FNImgSeq AND IMG.FTImgTable = IMGT.FTImgTable AND IMG.FTImgKey = IMGT.FTImgKey");
                oSql.AppendLine("AND IMG.FTImgTable = IMGT.FTImgTable");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgObj");
                oSql.AppendLine("(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy ");
                oSql.AppendLine("FROM TCNMImgObjTmp WITH(NOLOCK) ");
                oSql.AppendLine("WHERE FTImgTable='TCNMAdMsg'"); //*Net 63-07-30 insert เฉพาะ AdMsg
                //*++++++++++++++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;  //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxAdMsg : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbAdMsg : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poAdMsg = null;
                oSql = null;
                oTranscation = null;
                aoAdMsg = null;
                aoAdMsgLng = null;
                oAdMsg = null;
                oAdMsgLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list AdMsg
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMAdMsgTmp> C_PRCaListAdMsg(List<cmlResInfoAdvMsg> paoResAdMsg)
        {
            List<cmlTCNMAdMsgTmp> aoAdMsg = new List<cmlTCNMAdMsgTmp>();

            try
            {
                aoAdMsg = paoResAdMsg.Select(oItem => new cmlTCNMAdMsgTmp()
                {
                    FNAdvSeqNo = oItem.rnAdvSeqNo,
                    FTAdvCode = oItem.rtAdvCode,
                    FTAdvStaUse = oItem.rtAdvStaUse,
                    FTAdvType = oItem.rtAdvType,
                    FDAdvStart = oItem.rdAdvStart, //*Net 63-07-30 ขาด field
                    FDAdvStop = oItem.rdAdvStop, //*Net 63-07-30 ขาด field
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListAdMsg : " + oEx.Message); }
            finally
            {
                paoResAdMsg = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoAdMsg;
        }

        /// <summary>
        /// Process list AdMsg Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMAdMsgTmp_L> C_PRCaListAdMsgLng(List<cmlResInfoAdvMsgLng> paoResAdMsgLng)
        {
            List<cmlTCNMAdMsgTmp_L> aoAdMsg = new List<cmlTCNMAdMsgTmp_L>();

            try
            {
                aoAdMsg = paoResAdMsgLng.Select(oItem => new cmlTCNMAdMsgTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTAdvCode = oItem.rtAdvCode,
                    FTAdvMsg = oItem.rtAdvMsg,
                    FTAdvName = oItem.rtAdvName,
                    FTAdvRmk = oItem.rtAdvRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListAdMsgLng : " + oEx.Message); }
            finally
            {
                paoResAdMsgLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoAdMsg;
        }

        private List<cmlTCNMMediaObjTmp> C_PRCaListMediaObj(List<cmlTCNMMediaObj> paoMediaObj)
        {
            List<cmlTCNMMediaObjTmp> aoData = new List<cmlTCNMMediaObjTmp>();

            try
            {
                aoData = paoMediaObj.Select(oItem => new cmlTCNMMediaObjTmp()
                {
                    FNMedID = oItem.rnMedID,
                    //FTMedRefID = oItem.rnMedRefID,
                    FTMedRefID = oItem.rtMedRefID, //*Net 63-07-30 ปรับชื่อ Field
                    FNMedSeq = oItem.rnMedSeq,
                    FNMedType = oItem.rnMedType,
                    FTMedFileType = oItem.rtMedFileType,
                    FTMedTable = oItem.rtMedTable,
                    FTMedKey = oItem.rtMedKey,
                    //FTMedPath = C_DWNtMediaFile(oItem.rtMedPath),
                    FTMedPath = C_DWNtMediaFile(oItem),     //*Em 63-08-11
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy, //*Net 63-07-30 ขาด Field
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListMediaObj : " + oEx.Message); }
            finally

            {
                paoMediaObj = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        //private string C_DWNtMediaFile(string ptUrlFile)
        private string C_DWNtMediaFile(cmlTCNMMediaObj poMedia) //*Em 63-08-11
        {
            string tMediaPath = "";
            string tFileName = "";
            string tPathFile = "";
            try
            {
                //if (string.IsNullOrEmpty(ptUrlFile)) return tMediaPath;
                //using (WebClient oClient = new WebClient())
                //{
                //    Uri oUri = new Uri(ptUrlFile);
                //    if (oUri.IsAbsoluteUri)
                //    {
                //        tFileName = Path.GetFileName(oUri.LocalPath);
                //        tPathFile = Directory.GetParent(Application.StartupPath).ToString() + @"\AdaImage\Media";
                //        if (!Directory.Exists(tPathFile)) Directory.CreateDirectory(tPathFile);

                //        oClient.DownloadFile(ptUrlFile, tPathFile + @"\" + tFileName);
                //        tMediaPath = tPathFile + @"\" + tFileName;
                //    }

                //}

                //*Em 63-08-11
                if (string.IsNullOrEmpty(poMedia.rtMedPath)) return tMediaPath;
                switch (poMedia.rtMedTable)
                {
                    case "TCNMAdMsg":
                        using (WebClient oClient = new WebClient())
                        {
                            Uri oUri = new Uri(poMedia.rtMedPath);
                            if (oUri.IsAbsoluteUri)
                            {
                                tFileName = Path.GetFileName(oUri.LocalPath);
                                tPathFile = Directory.GetParent(Application.StartupPath).ToString() + @"\AdaMedia\Advertise";
                                if (!Directory.Exists(tPathFile)) Directory.CreateDirectory(tPathFile);

                                oClient.DownloadFile(poMedia.rtMedPath, tPathFile + @"\" + tFileName);
                                tMediaPath = tPathFile + @"\" + tFileName;
                            }

                        }
                        break;
                    default:
                        using (WebClient oClient = new WebClient())
                        {
                            Uri oUri = new Uri(poMedia.rtMedPath);
                            if (oUri.IsAbsoluteUri)
                            {
                                tFileName = Path.GetFileName(oUri.LocalPath);
                                tPathFile = Directory.GetParent(Application.StartupPath).ToString() + @"\AdaMedia\Others";
                                if (!Directory.Exists(tPathFile)) Directory.CreateDirectory(tPathFile);

                                oClient.DownloadFile(poMedia.rtMedPath, tPathFile + @"\" + tFileName);
                                tMediaPath = tPathFile + @"\" + tFileName;
                            }

                        }
                        break;
                }
                //+++++++++++++++
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNtMediaFile : " + oEx.Message); }
            finally
            {
                //oC_SP.SP_CLExMemory();
            }
            return tMediaPath;
        }
        #endregion End AdMsg

        #region Customer

        /// <summary>
        /// Download Customer
        /// </summary>
        /// <param name="poCst"></param>
        //private void C_DWNxCustomer(cmlResItemOfcmlResCstDwn poCst)
        private bool C_DWNbCustomer(cmlResItemOfcmlResCstDwn poCst)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMCstTmp> aoCst;
            List<cmlTCNMCstTmp_L> aoCstLng;
            List<cmlTCNMCstCardTmp> aoCstCard;
            List<cmlTCNMCstContactTmp_L> aoCstContact;
            List<cmlTCNMCstCreditTmp> aoCstCredit;
            List<cmlTCNMCstRFIDTmp_L> aoCstRFID;
            List<cmlTCNTCstPoint> aoCstPoint;
            cDataReaderAdapter<cmlTCNMCstTmp> oCst;
            cDataReaderAdapter<cmlTCNMCstTmp_L> oCstLng;
            cDataReaderAdapter<cmlTCNMCstCardTmp> oCstCard;
            cDataReaderAdapter<cmlTCNMCstContactTmp_L> oCstContact;
            cDataReaderAdapter<cmlTCNMCstCreditTmp> oCstCredit;
            cDataReaderAdapter<cmlTCNMCstRFIDTmp_L> oCstRFID;
            cDataReaderAdapter<cmlTCNTCstPoint> oCstPoint;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstTmp");
                //oSql.AppendLine("FROM TCNMCst WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstTmp_L");
                //oSql.AppendLine("FROM TCNMCst_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstCardTmp");
                //oSql.AppendLine("FROM TCNMCstCard WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstContactTmp_L");
                //oSql.AppendLine("FROM TCNMCstContact_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstCreditTmp");
                //oSql.AppendLine("FROM TCNMCstCredit WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstRFIDTmp_L");
                //oSql.AppendLine("FROM TCNMCstRFID_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTCstPointTmp");
                //oSql.AppendLine("FROM TCNTCstPoint WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstTmp FROM TCNMCst with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstTmp_L FROM TCNMCst_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstCardTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstCardTmp FROM TCNMCstCard with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstCardTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstContactTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstContactTmp_L FROM TCNMCstContact_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstContactTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstCreditTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstCreditTmp FROM TCNMCstCredit with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstCreditTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstRFIDTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstRFIDTmp_L FROM TCNMCstRFID_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstRFIDTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTCstPointTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTCstPointTmp FROM TCNTCstPoint with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTCstPointTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                // TCNMCstTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstTmp FROM TCNMCst with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCst' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstTmp FROM TCNMCst with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstTmp");
                oSql.AppendLine("");

                // TCNMCstTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstTmp_L FROM TCNMCst_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCst_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstTmp_L FROM TCNMCst_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstTmp_L");
                oSql.AppendLine("");

                // TCNMCstCardTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstCardTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstCardTmp FROM TCNMCstCard with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstCardTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstCard' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstCardTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstCardTmp FROM TCNMCstCard with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstCardTmp");
                oSql.AppendLine("");

                // TCNMCstContactTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstContactTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstContactTmp_L FROM TCNMCstContact_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstContactTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstContact_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstContactTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstContactTmp_L FROM TCNMCstContact_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstContactTmp_L");
                oSql.AppendLine("");

                // TCNMCstCreditTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstCreditTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstCreditTmp FROM TCNMCstCredit with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstCreditTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstCredit' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstCreditTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstCreditTmp FROM TCNMCstCredit with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstCreditTmp");
                oSql.AppendLine("");

                // TCNMCstRFIDTmp_L
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstRFIDTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstRFIDTmp_L FROM TCNMCstRFID_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstRFIDTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstRFID_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstRFIDTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstRFIDTmp_L FROM TCNMCstRFID_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstRFIDTmp_L");
                oSql.AppendLine("");

                // TCNTCstPointTmp
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTCstPointTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTCstPointTmp FROM TCNTCstPoint with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTCstPointTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTCstPoint' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTCstPointTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTCstPointTmp FROM TCNTCstPoint with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTCstPointTmp");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMCst
                aoCst = C_PRCaListCst(poCst.roItem.raCst);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCst = new cDataReaderAdapter<cmlTCNMCstTmp>(aoCst);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCst.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCst);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCustomer/TCNMCstTmp : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMCst_L
                aoCstLng = C_PRCaListCstLng(poCst.roItem.raCstLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstLng = new cDataReaderAdapter<cmlTCNMCstTmp_L>(aoCstLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCustomer/TCNMCstTmp_L : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMCstCard
                aoCstCard = C_PRCaListCstCard(poCst.roItem.raCstCard);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstCard = new cDataReaderAdapter<cmlTCNMCstCardTmp>(aoCstCard);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstCard.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstCardTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstCard);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCustomer/TCNMCstCardTmp : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMCstContact_L
                aoCstContact = C_PRCaListCstContactLng(poCst.roItem.raCstContactLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstContact = new cDataReaderAdapter<cmlTCNMCstContactTmp_L>(aoCstContact);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstContact.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstContactTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstContact);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCustomer/TCNMCstContactTmp_L : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : cmlTCNMCstCredit
                aoCstCredit = C_PRCaListCstCredit(poCst.roItem.raCstCredit);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstCredit = new cDataReaderAdapter<cmlTCNMCstCreditTmp>(aoCstCredit);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstCredit.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstCreditTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstCredit);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCustomer/TCNMCstCreditTmp : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMCstRFID_L
                aoCstRFID = C_PRCaListCstRFIDLng(poCst.roItem.raCstRFIDLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstRFID = new cDataReaderAdapter<cmlTCNMCstRFIDTmp_L>(aoCstRFID);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstRFID.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstRFIDTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstRFID);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCustomer/TCNMCstRFIDTmp_L : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNTCstPoint
                aoCstPoint = C_PRCaListCstPoint(poCst.roItem.raCstPoint);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstPoint = new cDataReaderAdapter<cmlTCNTCstPoint>(aoCstPoint);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstPoint.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTCstPointTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstPoint);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCustomer/TCNTCstPointTmp : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                // TCNMCst
                oSql.AppendLine("DELETE CST ");
                oSql.AppendLine("FROM TCNMCst CST WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstTmp CSTT WITH(NOLOCK) ON CST.FTCstCode = CSTT.FTCstCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCst");
                oSql.AppendLine("SELECT * FROM TCNMCstTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstTmp");
                oSql.AppendLine();
                // TCNMCst_L
                oSql.AppendLine("DELETE CSTL ");
                oSql.AppendLine("FROM TCNMCst_L CSTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstTmp_L CSTLT WITH(NOLOCK) ON CSTL.FTCstCode = CSTLT.FTCstCode");
                oSql.AppendLine("   AND CSTL.FNLngID = CSTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCst_L");
                oSql.AppendLine("SELECT * FROM TCNMCstTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstTmp_L");
                oSql.AppendLine();
                // TCNMCstCard
                oSql.AppendLine("DELETE CCD ");
                oSql.AppendLine("FROM TCNMCstCard CCD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstCardTmp CCDT WITH(NOLOCK) ON CCD.FTCstCode = CCDT.FTCstCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstCard");
                oSql.AppendLine("SELECT * FROM TCNMCstCardTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstCardTmp");
                oSql.AppendLine();
                // TCNMCstContact_L
                oSql.AppendLine("DELETE CCNL ");
                oSql.AppendLine("FROM TCNMCstContact_L CCNL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstContactTmp_L CCNLT WITH(NOLOCK) ON CCNL.FTCstCode = CCNLT.FTCstCode");
                oSql.AppendLine("   AND CCNL.FNLngID = CCNLT.FNLngID");
                oSql.AppendLine("   AND CCNL.FNCtrSeq = CCNLT.FNCtrSeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstContact_L");
                oSql.AppendLine("(FTCstCode, FNLngID, FTCtrName, FTCtrFax, FTCtrTel, FTCtrEmail, FTCtrRmk, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTCstCode, FNLngID, FTCtrName, FTCtrFax, FTCtrTel, FTCtrEmail, FTCtrRmk, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy");
                oSql.AppendLine("FROM TCNMCstContactTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstContactTmp_L");
                oSql.AppendLine();
                // TCNMCstCredit
                oSql.AppendLine("DELETE CCT ");
                oSql.AppendLine("FROM TCNMCstCredit CCT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstCreditTmp CCTT WITH(NOLOCK) ON CCT.FTCstCode = CCTT.FTCstCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstCredit");
                oSql.AppendLine("SELECT * FROM TCNMCstCreditTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstCreditTmp");
                oSql.AppendLine();
                // TCNMCstRFID_L
                oSql.AppendLine("DELETE CSR ");
                oSql.AppendLine("FROM TCNMCstRFID_L CSR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstRFIDTmp_L CSRT WITH(NOLOCK) ON CSR.FTCstCode = CSRT.FTCstCode");
                oSql.AppendLine("   AND CSR.FNLngID = CSRT.FNLngID");
                oSql.AppendLine("   AND CSR.FTCstID = CSRT.FTCstID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstRFID_L");
                oSql.AppendLine("SELECT * FROM TCNMCstRFIDTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstRFIDTmp_L");
                oSql.AppendLine();
                // TCNTCstPoint
                oSql.AppendLine("DELETE CPT ");
                oSql.AppendLine("FROM TCNTCstPoint CPT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTCstPointTmp CPTT WITH(NOLOCK) ON CPT.FTBchCode = CPTT.FTBchCode");
                oSql.AppendLine("   AND CPT.FTCstCode = CPTT.FTCstCode");
                oSql.AppendLine("   AND CPT.FTPntRefDoc = CPTT.FTPntRefDoc");
                oSql.AppendLine("   AND CPT.FTSplCode = CPTT.FTSplCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTCstPoint");
                oSql.AppendLine("SELECT * FROM TCNTCstPointTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTCstPointTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;   //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCustomer : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCustomer : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poCst = null;
                oSql = null;
                oTranscation = null;
                aoCst = null;
                aoCstLng = null;
                oCst = null;
                oCstLng = null;
                aoCstCard = null;
                aoCstContact = null;
                aoCstCredit = null;
                aoCstRFID = null;
                aoCstPoint = null;
                oCstCard = null;
                oCstContact = null;
                oCstCredit = null;
                oCstRFID = null;
                oCstPoint = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Customer
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstTmp> C_PRCaListCst(List<cmlResInfoCst> paoResCst)
        {
            List<cmlTCNMCstTmp> aoCst = new List<cmlTCNMCstTmp>();

            try
            {
                aoCst = paoResCst.Select(oItem => new cmlTCNMCstTmp()
                {
                    FDCstDob = oItem.rdCstDob,
                    FTCgpCode = oItem.rtCgpCode,
                    FTClvCode = oItem.rtClvCode,
                    FTCstBchCode = oItem.rtCstBchCode,
                    FTCstBchHQ = oItem.rtCstBchHQ,
                    FTCstBusiness = oItem.rtCstBusiness,
                    FTCstCardID = oItem.rtCstCardID,
                    FTCstCode = oItem.rtCstCode,
                    FTCstDiscRet = oItem.rtCstDiscRet,
                    FTCstDiscWhs = oItem.rtCstDiscWhs,
                    FTCstEmail = oItem.rtCstEmail,
                    FTCstFax = oItem.rtCstFax,
                    FTCstSex = oItem.rtCstSex,
                    FTCstStaActive = oItem.rtCstStaActive,
                    FTCstTel = oItem.rtCstTel,
                    FTCtyCode = oItem.rtCtyCode,
                    FTOcpCode = oItem.rtOcpCode,
                    FTPmgCode = oItem.rtPmgCode,
                    FTPplCodenNet = oItem.rtPplCodenNet,
                    FTPplCodeRet = oItem.rtPplCodeRet,
                    FTPplCodeWhs = oItem.rtPplCodeWhs,
                    FTSpnCode = oItem.rtSpnCode,
                    FTUsrCode = oItem.rtUsrCode,
                    FTCstTaxNo = oItem.rtCstTaxNo,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCst : " + oEx.Message); }
            finally
            {
                paoResCst = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCst;
        }

        /// <summary>
        /// Process list Customer Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstTmp_L> C_PRCaListCstLng(List<cmlResInfoCstLng> paoResCstLng)
        {
            List<cmlTCNMCstTmp_L> aoCst = new List<cmlTCNMCstTmp_L>();

            try
            {
                aoCst = paoResCstLng.Select(oItem => new cmlTCNMCstTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCstCode = oItem.rtCstCode,
                    FTCstName = oItem.rtCstName,
                    FTCstNameOth = oItem.rtCstNameOth,
                    FTCstRmk = oItem.rtCstRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstLng : " + oEx.Message); }
            finally
            {
                paoResCstLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCst;
        }

        /// <summary>
        /// Process list Customer Card
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstCardTmp> C_PRCaListCstCard(List<cmlResInfoCstCard> paoResCstCard)
        {
            List<cmlTCNMCstCardTmp> aoCard = new List<cmlTCNMCstCardTmp>();

            try
            {
                aoCard = paoResCstCard.Select(oItem => new cmlTCNMCstCardTmp()
                {
                    FDCstApply = oItem.rdCstApply,
                    FDCstCrdExpire = oItem.rdCstCrdExpire,
                    FDCstCrdIssue = oItem.rdCstCrdIssue,
                    FTBchCode = oItem.rtBchCode,
                    FTCstCode = oItem.rtCstCode,
                    FTCstCrdNo = oItem.rtCstCrdNo,
                    FTCstStaAge = oItem.rtCstStaAge
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstCard : " + oEx.Message); }
            finally
            {
                paoResCstCard = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCard;
        }

        /// <summary>
        /// Process list Customer Contact Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstContactTmp_L> C_PRCaListCstContactLng(List<cmlResInfoCstContactLng> paoResCstContactLng)
        {
            List<cmlTCNMCstContactTmp_L> aoContact = new List<cmlTCNMCstContactTmp_L>();

            try
            {
                aoContact = paoResCstContactLng.Select(oItem => new cmlTCNMCstContactTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCstCode = oItem.rtCstCode,
                    FNCtrSeq = oItem.rnCtrSeq,
                    FTCtrEmail = oItem.rtCtrEmail,
                    FTCtrFax = oItem.rtCtrFax,
                    FTCtrName = oItem.rtCtrName,
                    FTCtrRmk = oItem.rtCtrRmk,
                    FTCtrTel = oItem.rtCtrTel,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstContactLng : " + oEx.Message); }
            finally
            {
                paoResCstContactLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoContact;
        }

        /// <summary>
        /// Process list Customer Credit
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstCreditTmp> C_PRCaListCstCredit(List<cmlResInfoCstCredit> paoResCstCredit)
        {
            List<cmlTCNMCstCreditTmp> aoCredit = new List<cmlTCNMCstCreditTmp>();

            try
            {
                aoCredit = paoResCstCredit.Select(oItem => new cmlTCNMCstCreditTmp()
                {
                    FCCstCrLimit = oItem.rcCstCrLimit,
                    FDCstLastCta = oItem.rdCstLastCta,
                    FDCstLastPay = oItem.rdCstLastPay,
                    FNCstCrTerm = oItem.rnCstCrTerm,
                    FNCstViaTime = oItem.rnCstViaTime,
                    FTCstBillRmk = oItem.rtCstBillRmk,
                    FTCstCode = oItem.rtCstCode,
                    FTCstPayRmk = oItem.rtCstPayRmk,
                    FTCstStaAlwOrdFri = oItem.rtCstStaAlwOrdFri,
                    FTCstStaAlwOrdMon = oItem.rtCstStaAlwOrdMon,
                    FTCstStaAlwOrdSat = oItem.rtCstStaAlwOrdSat,
                    FTCstStaAlwOrdSun = oItem.rtCstStaAlwOrdSun,
                    FTCstStaAlwOrdThu = oItem.rtCstStaAlwOrdThu,
                    FTCstStaAlwOrdTue = oItem.rtCstStaAlwOrdTue,
                    FTCstStaAlwOrdWed = oItem.rtCstStaAlwOrdWed,
                    FTCstStaApv = oItem.rtCstStaApv,
                    FTCstTspPaid = oItem.rtCstTspPaid,
                    FTCstViaRmk = oItem.rtCstViaRmk,
                    FTViaCode = oItem.rtViaCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstCredit : " + oEx.Message); }
            finally
            {
                paoResCstCredit = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCredit;
        }

        /// <summary>
        /// Process list Customer RFID Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstRFIDTmp_L> C_PRCaListCstRFIDLng(List<cmlResInfoCstRFIDLng> paoResCsRFIDtLng)
        {
            List<cmlTCNMCstRFIDTmp_L> aoRFID = new List<cmlTCNMCstRFIDTmp_L>();

            try
            {
                aoRFID = paoResCsRFIDtLng.Select(oItem => new cmlTCNMCstRFIDTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCstCode = oItem.rtCstCode,
                    FTCrfName = oItem.rtCrfName,
                    FTCstID = oItem.rtCstID
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstRFIDLng : " + oEx.Message); }
            finally
            {
                paoResCsRFIDtLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoRFID;
        }

        /// <summary>
        /// Process list Customer Point
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTCstPoint> C_PRCaListCstPoint(List<cmlResInfoCstPoint> paoResCstPoint)
        {
            List<cmlTCNTCstPoint> aoPoint = new List<cmlTCNTCstPoint>();

            try
            {
                aoPoint = paoResCstPoint.Select(oItem => new cmlTCNTCstPoint()
                {
                    FCPntBillAmt = oItem.rcPntBillAmt,
                    FCPntOptBuyAmt = oItem.rcPntOptBuyAmt,
                    FCPntOptGetAmt = oItem.rcPntOptGetAmt,
                    FDPntDate = oItem.rdPntDate,
                    FDPntSplExpired = oItem.rdPntSplExpired,
                    FDPntSplStart = oItem.rdPntSplStart,
                    FNPntB4Bill = oItem.rnPntB4Bill,
                    FNPntBillQty = oItem.rnPntBillQty,
                    FTBchCode = oItem.rtBchCode,
                    FTCptJDate = oItem.rtCptJDate,
                    FTCptTime = oItem.rtCptTime,
                    FTCstCode = oItem.rtCstCode,
                    FTPntCardType = oItem.rtPntCardType,
                    FTPntExpired = oItem.rtPntExpired,
                    FTPntRefDoc = oItem.rtPntRefDoc,
                    FTPntStaExpired = oItem.rtPntStaExpired,
                    FTPntStaPrcDoc = oItem.rtPntStaPrcDoc,
                    FTSplCode = oItem.rtSplCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstPoint : " + oEx.Message); }
            finally
            {
                paoResCstPoint = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPoint;
        }

        #endregion End Customer

        #region Customer Group

        /// <summary>
        /// Download Customer Group
        /// </summary>
        /// <param name="poCstType"></param>
        //private void C_DWNxCstGroup(cmlResItemOfcmlResCstGrpDwn poCstGroup)
        private bool C_DWNbCstGroup(cmlResItemOfcmlResCstGrpDwn poCstGroup)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMCstGrpTmp> aoCstGrp;
            List<cmlTCNMCstGrpTmp_L> aoCstGrpLng;
            cDataReaderAdapter<cmlTCNMCstGrpTmp> oCstGrp;
            cDataReaderAdapter<cmlTCNMCstGrpTmp_L> oCstGrpLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstGrpTmp");
                //oSql.AppendLine("FROM TCNMCstGrp WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstGrpTmp_L");
                //oSql.AppendLine("FROM TCNMCstGrp_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstGrpTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstGrpTmp FROM TCNMCstGrp with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstGrpTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstGrpTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstGrpTmp_L FROM TCNMCstGrp_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstGrpTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstGrpTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstGrpTmp FROM TCNMCstGrp with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstGrpTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstGrp' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstGrpTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstGrpTmp FROM TCNMCstGrp with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstGrpTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstGrpTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstGrpTmp_L FROM TCNMCstGrp_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstGrpTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstGrp_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstGrpTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstGrpTmp_L FROM TCNMCstGrp_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstGrpTmp_L");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMCstGrp
                aoCstGrp = C_PRCaListCstGroup(poCstGroup.roItem.raCstGrp);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstGrp = new cDataReaderAdapter<cmlTCNMCstGrpTmp>(aoCstGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstGrpTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstGroup : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMCstGrp_L
                aoCstGrpLng = C_PRCaListCstGroupLng(poCstGroup.roItem.raCstGrpLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstGrpLng = new cDataReaderAdapter<cmlTCNMCstGrpTmp_L>(aoCstGrpLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstGrpLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstGrpTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstGrpLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstGroup : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CGP ");
                oSql.AppendLine("FROM TCNMCstGrp CGP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstGrpTmp CGPT WITH(NOLOCK) ON CGP.FTCgpCode = CGPT.FTCgpCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstGrp");
                oSql.AppendLine("SELECT * FROM TCNMCstGrpTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstGrpTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CGPL ");
                oSql.AppendLine("FROM TCNMCstGrp_L CGPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstGrpTmp_L CGPLT WITH(NOLOCK) ON CGPL.FTCgpCode = CGPLT.FTCgpCode");
                oSql.AppendLine("   AND CGPL.FNLngID = CGPLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstGrp_L");
                oSql.AppendLine("SELECT * FROM TCNMCstGrpTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstGrpTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;   //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCstGroup : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCstGroup : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poCstGroup = null;
                oSql = null;
                oTranscation = null;
                aoCstGrp = null;
                aoCstGrpLng = null;
                oCstGrp = null;
                oCstGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Customer Group
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstGrpTmp> C_PRCaListCstGroup(List<cmlResInfoCstGrp> paoResCstGrp)
        {
            List<cmlTCNMCstGrpTmp> aoCstGrp = new List<cmlTCNMCstGrpTmp>();

            try
            {
                aoCstGrp = paoResCstGrp.Select(oItem => new cmlTCNMCstGrpTmp()
                {
                    FTCgpCode = oItem.rtCgpCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstGroup : " + oEx.Message); }
            finally
            {
                paoResCstGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCstGrp;
        }

        /// <summary>
        /// Process list Customer Group Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstGrpTmp_L> C_PRCaListCstGroupLng(List<cmlResInfoCstGrpLng> paoResCstGrpLng)
        {
            List<cmlTCNMCstGrpTmp_L> aoCstGrp = new List<cmlTCNMCstGrpTmp_L>();

            try
            {
                aoCstGrp = paoResCstGrpLng.Select(oItem => new cmlTCNMCstGrpTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCgpCode = oItem.rtCgpCode,
                    FTCgpName = oItem.rtCgpName,
                    FTCgpRmk = oItem.rtCgpRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstGroupLng : " + oEx.Message); }
            finally
            {
                paoResCstGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCstGrp;
        }

        #endregion End Customer Group

        #region Customer Type

        /// <summary>
        /// Download Customer Type
        /// </summary>
        /// <param name="poCstType"></param>
        //private void C_DWNxCstType(cmlResItemOfcmlResCstTypeDwn poCstType)
        private bool C_DWNbCstType(cmlResItemOfcmlResCstTypeDwn poCstType)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMCstTypeTmp> aoCstType;
            List<cmlTCNMCstTypeTmp_L> aoCstTypeLng;
            cDataReaderAdapter<cmlTCNMCstTypeTmp> oCstType;
            cDataReaderAdapter<cmlTCNMCstTypeTmp_L> oCstTypeLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstTypeTmp");
                //oSql.AppendLine("FROM TCNMCstType WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstTypeTmp_L");
                //oSql.AppendLine("FROM TCNMCstType_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstTypeTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstTypeTmp FROM TCNMCstType with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstTypeTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstTypeTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstTypeTmp_L FROM TCNMCstType_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstTypeTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstTypeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstTypeTmp FROM TCNMCstType with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstTypeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstType' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstTypeTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstTypeTmp FROM TCNMCstType with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstTypeTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstTypeTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstTypeTmp_L FROM TCNMCstType_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstTypeTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstType_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstTypeTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstTypeTmp_L FROM TCNMCstType_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstTypeTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMCstType
                aoCstType = C_PRCaListCstType(poCstType.roItem.raCstType);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstType = new cDataReaderAdapter<cmlTCNMCstTypeTmp>(aoCstType);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstType.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstTypeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstType);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstType : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMCstType_L
                aoCstTypeLng = C_PRCaListCstTypeLng(poCstType.roItem.raCstTypeLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstTypeLng = new cDataReaderAdapter<cmlTCNMCstTypeTmp_L>(aoCstTypeLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstTypeLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstTypeTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstTypeLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstType : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CTY ");
                oSql.AppendLine("FROM TCNMCstType CTY WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstTypeTmp CTYT WITH(NOLOCK) ON CTY.FTCtyCode = CTYT.FTCtyCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstType");
                oSql.AppendLine("SELECT * FROM TCNMCstTypeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstTypeTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CTYL ");
                oSql.AppendLine("FROM TCNMCstType_L CTYL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstTypeTmp_L CTYLT WITH(NOLOCK) ON CTYL.FTCtyCode = CTYLT.FTCtyCode");
                oSql.AppendLine("   AND CTYL.FNLngID = CTYLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstType_L");
                oSql.AppendLine("SELECT * FROM TCNMCstTypeTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstTypeTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;    //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCstType : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCstType : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poCstType = null;
                oSql = null;
                oTranscation = null;
                aoCstType = null;
                aoCstTypeLng = null;
                oCstType = null;
                oCstTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Customer Type
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstTypeTmp> C_PRCaListCstType(List<cmlResInfoCstType> paoResCstType)
        {
            List<cmlTCNMCstTypeTmp> aoCstType = new List<cmlTCNMCstTypeTmp>();

            try
            {
                aoCstType = paoResCstType.Select(oItem => new cmlTCNMCstTypeTmp()
                {
                    FTCtyCode = oItem.rtCtyCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstType : " + oEx.Message); }
            finally
            {
                paoResCstType = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCstType;
        }

        /// <summary>
        /// Process list Customer Type Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstTypeTmp_L> C_PRCaListCstTypeLng(List<cmlResInfoCstTypeLng> paoResCstTypeLng)
        {
            List<cmlTCNMCstTypeTmp_L> aoCstType = new List<cmlTCNMCstTypeTmp_L>();

            try
            {
                aoCstType = paoResCstTypeLng.Select(oItem => new cmlTCNMCstTypeTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTCtyCode = oItem.rtCtyCode,
                    FTCtyName = oItem.rtCtyName,
                    FTCtyRmk = oItem.rtCtyRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstTypeLng : " + oEx.Message); }
            finally
            {
                paoResCstTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCstType;
        }

        #endregion End Customer Type

        #region Customer Level

        /// <summary>
        /// Download Customer Level
        /// </summary>
        /// <param name="poCstLev"></param>
        //private void C_DWNxCstLevel(cmlResItemOfcmlResCstLevDwn poCstLev)
        private bool C_DWNbCstLevel(cmlResItemOfcmlResCstLevDwn poCstLev)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMCstLevTmp> aoCstLev;
            List<cmlTCNMCstLevTmp_L> aoCstLevLng;
            cDataReaderAdapter<cmlTCNMCstLevTmp> oCstLev;
            cDataReaderAdapter<cmlTCNMCstLevTmp_L> oCstLevLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstLevTmp");
                //oSql.AppendLine("FROM TCNMCstLev WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstLevTmp_L");
                //oSql.AppendLine("FROM TCNMCstLev_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstLevTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstLevTmp FROM TCNMCstLev with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstLevTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstLevTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstLevTmp_L FROM TCNMCstLev_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstLevTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstLevTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstLevTmp FROM TCNMCstLev with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstLevTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstLev' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstLevTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstLevTmp FROM TCNMCstLev with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstLevTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstLevTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstLevTmp_L FROM TCNMCstLev_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstLevTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstLev_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstLevTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstLevTmp_L FROM TCNMCstLev_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstLevTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMCstLev
                aoCstLev = C_PRCaListCstLev(poCstLev.roItem.raCstLev);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstLev = new cDataReaderAdapter<cmlTCNMCstLevTmp>(aoCstLev);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCstLev.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstLevTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstLev);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstLevel : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMCstLev_L
                aoCstLevLng = C_PRCaListCstLevLng(poCstLev.roItem.raCstLevLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstLevLng = new cDataReaderAdapter<cmlTCNMCstLevTmp_L>(aoCstLevLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCstLevLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstLevTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstLevLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstLevel : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CLV ");
                oSql.AppendLine("FROM TCNMCstLev CLV WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstLevTmp CLVT WITH(NOLOCK) ON CLV.FTClvCode = CLVT.FTClvCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstLev");
                oSql.AppendLine("SELECT * FROM TCNMCstLevTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstLevTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CLVL ");
                oSql.AppendLine("FROM TCNMCstLev_L CLVL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstLevTmp_L CLVLT WITH(NOLOCK) ON CLVL.FTClvCode = CLVLT.FTClvCode");
                oSql.AppendLine("   AND CLVL.FNLngID = CLVLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstLev_L");
                oSql.AppendLine("SELECT * FROM TCNMCstLevTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstLevTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;   //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCstLevel : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCstLevel : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poCstLev = null;
                oSql = null;
                oTranscation = null;
                aoCstLev = null;
                aoCstLevLng = null;
                oCstLev = null;
                oCstLevLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Customer Level
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstLevTmp> C_PRCaListCstLev(List<cmlResInfoCstLev> paoResCstLev)
        {
            List<cmlTCNMCstLevTmp> aoCstLev = new List<cmlTCNMCstLevTmp>();

            try
            {
                aoCstLev = paoResCstLev.Select(oItem => new cmlTCNMCstLevTmp()
                {
                    FTClvCode = oItem.rtClvCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstLev : " + oEx.Message); }
            finally
            {
                paoResCstLev = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCstLev;
        }

        /// <summary>
        /// Process list Customer Level Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstLevTmp_L> C_PRCaListCstLevLng(List<cmlResInfoCstLevLng> paoResCstLevLng)
        {
            List<cmlTCNMCstLevTmp_L> aoCstLev = new List<cmlTCNMCstLevTmp_L>();

            try
            {
                aoCstLev = paoResCstLevLng.Select(oItem => new cmlTCNMCstLevTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTClvCode = oItem.rtClvCode,
                    FTClvName = oItem.rtClvName,
                    FTClvRmk = oItem.rtClvRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstLevLng : " + oEx.Message); }
            finally
            {
                paoResCstLevLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCstLev;
        }

        #endregion End Customer Level

        #region Customer Address

        /// <summary>
        /// Download Customer Address
        /// </summary>
        /// <param name="poCstAddress"></param>
        //private void C_DWNxCstAddress(cmlResListOfcmlResInfoCstAddrLng poCstAddress)
        private bool C_DWNbCstAddress(cmlResListOfcmlResInfoCstAddrLng poCstAddress)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMCstAddressTmp_L> aoCstAddLng;
            cDataReaderAdapter<cmlTCNMCstAddressTmp_L> oCstAddLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstAddressTmp_L");
                //oSql.AppendLine("FROM TCNMCstAddress_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstAddressTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstAddressTmp_L FROM TCNMCstAddress_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstAddressTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstAddressTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstAddressTmp_L FROM TCNMCstAddress_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstAddressTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstAddress_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstAddressTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstAddressTmp_L FROM TCNMCstAddress_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstAddressTmp_L");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMCstAddress_L
                aoCstAddLng = C_PRCaListCstAddressLng(poCstAddress.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstAddLng = new cDataReaderAdapter<cmlTCNMCstAddressTmp_L>(aoCstAddLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oCstAddLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstAddressTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstAddLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstAddress : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CAD ");
                oSql.AppendLine("FROM TCNMCstAddress_L CAD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstAddressTmp_L CADT WITH(NOLOCK) ON CAD.FTCstCode = CADT.FTCstCode");
                oSql.AppendLine("   AND CAD.FNLngID = CADT.FNLngID");
                oSql.AppendLine("   AND CAD.FTAddGrpType = CADT.FTAddGrpType");
                //oSql.AppendLine("   AND CAD.FNAddSeqNo = CADT.FNAddSeqNo");       //*Arm 63-04-09 Comment
                oSql.AppendLine("   AND CAD.FTAddRefNo = CADT.FTAddRefNo");         //*Arm 63-04-09

                oSql.AppendLine("INSERT INTO TCNMCstAddress_L");
                oSql.AppendLine("(FTCstCode, FNLngID, FTAddGrpType, FTAddRefNo, FTAddName, FTAddRmk, FTAddCountry, FTAreCode, FTZneCode, FTAddVersion, ");
                oSql.AppendLine("FTAddV1No, FTAddV1Soi, FTAddV1Village, FTAddV1Road, FTAddV1SubDist, FTAddV1DstCode, FTAddV1PvnCode, FTAddV1PostCode,");
                oSql.AppendLine("FTAddV2Desc1, FTAddV2Desc2, FTAddWebsite, FTAddLongitude, FTAddLatitude, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTCstCode, FNLngID, FTAddGrpType, FTAddRefNo, FTAddName, FTAddRmk, FTAddCountry, FTAreCode, FTZneCode, FTAddVersion,");
                oSql.AppendLine("FTAddV1No, FTAddV1Soi, FTAddV1Village, FTAddV1Road, FTAddV1SubDist, FTAddV1DstCode, FTAddV1PvnCode, FTAddV1PostCode, ");
                oSql.AppendLine("FTAddV2Desc1, FTAddV2Desc2, FTAddWebsite, FTAddLongitude, FTAddLatitude, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy");
                oSql.AppendLine("FROM TCNMCstAddressTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstAddressTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;    //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCstAddress : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCstAddress : " + oEx.Message);
                return false;
            }
            //+++++++++++++++
            finally
            {
                poCstAddress = null;
                oSql = null;
                oTranscation = null;
                aoCstAddLng = null;
                oCstAddLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        #endregion End Customer Address

        #region Customer Occupation

        /// <summary>
        /// Download Customer Occupation
        /// </summary>
        /// <param name="poCstLev"></param>
        //private void C_DWNxCstOccupation(cmlResItemOfcmlResCstOcpDwn poCstOcp)
        private bool C_DWNbCstOccupation(cmlResItemOfcmlResCstOcpDwn poCstOcp)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMCstOcpTmp> aoCstOcp;
            List<cmlTCNMCstOcpTmp_L> aoCstOcpLng;
            cDataReaderAdapter<cmlTCNMCstOcpTmp> oCstOcp;
            cDataReaderAdapter<cmlTCNMCstOcpTmp_L> oCstOcpLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstOcpTmp");
                //oSql.AppendLine("FROM TCNMCstOcp WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMCstOcpTmp_L");
                //oSql.AppendLine("FROM TCNMCstOcp_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstOcpTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstOcpTmp FROM TCNMCstOcp with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstOcpTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstOcpTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMCstOcpTmp_L FROM TCNMCstOcp_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMCstOcpTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstOcpTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstOcpTmp FROM TCNMCstOcp with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstOcpTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstOcp' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstOcpTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstOcpTmp FROM TCNMCstOcp with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstOcpTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMCstOcpTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMCstOcpTmp_L FROM TCNMCstOcp_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstOcpTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMCstOcp_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMCstOcpTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMCstOcpTmp_L FROM TCNMCstOcp_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMCstOcpTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMCstOcp
                aoCstOcp = C_PRCaListCstOcp(poCstOcp.roItem.raCstOcp);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstOcp = new cDataReaderAdapter<cmlTCNMCstOcpTmp>(aoCstOcp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCstOcp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstOcpTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstOcp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstOccupation : " + oEx.Message);  //*Em 61-11-15
                        return false;  //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMCstOcp_L
                aoCstOcpLng = C_PRCaListCstOcpLng(poCstOcp.roItem.raCstOcpLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCstOcpLng = new cDataReaderAdapter<cmlTCNMCstOcpTmp_L>(aoCstOcpLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCstOcpLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMCstOcpTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oCstOcpLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCstOccupation : " + oEx.Message);  //*Em 61-11-15
                        return false;  //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE OCP ");
                oSql.AppendLine("FROM TCNMCstOcp OCP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstOcpTmp OCPT WITH(NOLOCK) ON OCP.FTOcpCode = OCPT.FTOcpCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstOcp");
                oSql.AppendLine("SELECT * FROM TCNMCstOcpTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstOcpTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE OCPL ");
                oSql.AppendLine("FROM TCNMCstOcp_L OCPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMCstOcpTmp_L OCPLT WITH(NOLOCK) ON OCPL.FTOcpCode = OCPLT.FTOcpCode");
                oSql.AppendLine("   AND OCPL.FNLngID = OCPLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMCstOcp_L");
                oSql.AppendLine("SELECT * FROM TCNMCstOcpTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMCstOcpTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;  //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxCstOccupation : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCstOccupation : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poCstOcp = null;
                oSql = null;
                oTranscation = null;
                aoCstOcp = null;
                aoCstOcpLng = null;
                oCstOcp = null;
                oCstOcpLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Customer Occupation
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstOcpTmp> C_PRCaListCstOcp(List<cmlResInfoCstOcp> paoResCstOcp)
        {
            List<cmlTCNMCstOcpTmp> aoCstOcp = new List<cmlTCNMCstOcpTmp>();

            try
            {
                aoCstOcp = paoResCstOcp.Select(oItem => new cmlTCNMCstOcpTmp()
                {
                    FTOcpCode = oItem.rtOcpCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstOcp : " + oEx.Message); }
            finally
            {
                paoResCstOcp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCstOcp;
        }

        /// <summary>
        /// Process list Customer Occupation Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMCstOcpTmp_L> C_PRCaListCstOcpLng(List<cmlResInfoCstOcpLng> paoResCstOcpLng)
        {
            List<cmlTCNMCstOcpTmp_L> aoCstOcp = new List<cmlTCNMCstOcpTmp_L>();

            try
            {
                aoCstOcp = paoResCstOcpLng.Select(oItem => new cmlTCNMCstOcpTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTOcpCode = oItem.rtOcpCode,
                    FTOcpName = oItem.rtOcpName,
                    FTOcpRmk = oItem.rtOcpRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCstOcpLng : " + oEx.Message); }
            finally
            {
                paoResCstOcpLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoCstOcp;
        }

        #endregion End Customer Occupation

        #region Product

        /// <summary>
        /// Download Product
        /// </summary>
        /// <param name="poPdt"></param>
        //private void C_DWNxProduct(cmlResItemOfcmlResPdtItemDwn poPdt)
        private bool C_DWNbProduct(cmlResItemOfcmlResPdtItemDwn poPdt)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtTmp> aoPdt;
            List<cmlTCNMPdtTmp_L> aoPdtLng;
            List<cmlTCNMPdtBarTmp> aoPdtBar;
            List<cmlTCNMPdtPackSizeTmp> aoPdtPackSize;
            cDataReaderAdapter<cmlTCNMPdtTmp> oPdt;
            cDataReaderAdapter<cmlTCNMPdtTmp_L> oPdtLng;
            cDataReaderAdapter<cmlTCNMPdtBarTmp> oPdtBar;
            cDataReaderAdapter<cmlTCNMPdtPackSizeTmp> oPdtPackSize;
            List<cmlTCNMImgPdtTmp> aoImgPdt;    //*Em 62-06-24
            cDataReaderAdapter<cmlTCNMImgPdtTmp> oImgPdt;   //*Em 62-06-24
            List<cmlTCNMPdtSpcBchTmp> aoTCNMPdtSpcBch;  //*Em 62-09-09
            cDataReaderAdapter<cmlTCNMPdtSpcBchTmp> oTCNMPdtSpcBch; //*Em 62-09-09

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtTmp");
                //oSql.AppendLine("FROM TCNMPdt WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtTmp_L");
                //oSql.AppendLine("FROM TCNMPdt_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtBarTmp");
                //oSql.AppendLine("FROM TCNMPdtBar WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtPackSizeTmp");
                //oSql.AppendLine("FROM TCNMPdtPackSize WITH(ROWLOCK)");

                //*Em 61-11-13 ++++++++++
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPdtTmp FROM TCNMPdt with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdt' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPdtTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPdtTmp FROM TCNMPdt with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPdtTmp_L FROM TCNMPdt_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdt_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPdtTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPdtTmp_L FROM TCNMPdt_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtTmp_L");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtBarTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPdtBarTmp FROM TCNMPdtBar with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtBarTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtBar' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPdtBarTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPdtBarTmp FROM TCNMPdtBar with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtBarTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPackSizeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPdtPackSizeTmp FROM TCNMPdtPackSize with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPackSizeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPackSize' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPdtPackSizeTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPdtPackSizeTmp FROM TCNMPdtPackSize with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtPackSizeTmp");
                //+++++++++++++++++++++++
                //*Em 62-06-24
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgPdtTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMImgPdtTmp FROM TCNMImgPdt with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgPdtTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgPdt' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMImgPdtTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMImgPdtTmp FROM TCNMImgPdt with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgPdtTmp");
                //++++++++++++++++++++++++
                //*Em  62-09-09
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtSpcBchTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPdtSpcBchTmp FROM TCNMPdtSpcBch with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtSpcBchTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtSpcBch' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPdtSpcBchTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPdtSpcBchTmp FROM TCNMImgPdt with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtSpcBchTmp");
                //+++++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdt
                aoPdt = C_PRCaListProduct(poPdt.roItem.raPdt);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdt = new cDataReaderAdapter<cmlTCNMPdtTmp>(aoPdt);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbProduct/TCNMPdtTmp : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdt_L
                aoPdtLng = C_PRCaListProductLng(poPdt.roItem.raPdtLng);
                oPdtLng = new cDataReaderAdapter<cmlTCNMPdtTmp_L>(aoPdtLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbProduct/TCNMPdtTmp_L : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtBar
                aoPdtBar = C_PRCaListProductBar(poPdt.roItem.raPdtBar);
                oPdtBar = new cDataReaderAdapter<cmlTCNMPdtBarTmp>(aoPdtBar);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtBar.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtBarTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtBar);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbProduct/TCNMPdtBarTmp : " + oEx.Message);    //*Em 61-11-15
                        return false;       //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtPackSize
                aoPdtPackSize = C_PRCaListProductPackSize(poPdt.roItem.raPdtPackSize);
                oPdtPackSize = new cDataReaderAdapter<cmlTCNMPdtPackSizeTmp>(aoPdtPackSize);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtPackSize.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtPackSizeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPackSize);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbProduct/TCNMPdtPackSizeTmp : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }

                //*Em 62-06-24
                aoImgPdt = C_PRCaListImagePdt(poPdt.roItem.raImgPdt);
                oImgPdt = new cDataReaderAdapter<cmlTCNMImgPdtTmp>(aoImgPdt);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oImgPdt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgPdtTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImgPdt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbProduct/TCNMImgPdtTmp : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }
                //+++++++++++++

                //*Em 62-09-09
                aoTCNMPdtSpcBch = C_PRCaListPdtSpcBch(poPdt.roItem.raTCNMPdtSpcBch);
                oTCNMPdtSpcBch = new cDataReaderAdapter<cmlTCNMPdtSpcBchTmp>(aoTCNMPdtSpcBch);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oTCNMPdtSpcBch.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtSpcBchTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oTCNMPdtSpcBch);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbProduct/TCNMPdtSpcBchTmp : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }
                //+++++++++++++
                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                // TCNMPdt
                oSql.AppendLine("DELETE PDT ");
                oSql.AppendLine("FROM TCNMPdt PDT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtTmp PDTT WITH(NOLOCK) ON PDT.FTPdtCode = PDTT.FTPdtCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdt");
                oSql.AppendLine("SELECT * FROM TCNMPdtTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtTmp");
                oSql.AppendLine();
                // TCNMPdt_L
                oSql.AppendLine("DELETE PDTL ");
                oSql.AppendLine("FROM TCNMPdt_L PDTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtTmp_L PDTLT WITH(NOLOCK) ON PDTL.FTPdtCode = PDTLT.FTPdtCode");
                oSql.AppendLine("   AND PDTL.FNLngID = PDTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdt_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtTmp_L");
                oSql.AppendLine();
                // TCNMPdtBar
                oSql.AppendLine("DELETE BAR ");
                oSql.AppendLine("FROM TCNMPdtBar BAR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtBarTmp BART WITH(NOLOCK) ON BAR.FTPdtCode = BART.FTPdtCode");
                oSql.AppendLine("   AND BAR.FTBarCode = BART.FTBarCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtBar");
                oSql.AppendLine("SELECT * FROM TCNMPdtBarTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtBarTmp");
                oSql.AppendLine();
                // TCNMPdtPackSize
                oSql.AppendLine("DELETE PPS ");
                oSql.AppendLine("FROM TCNMPdtPackSize PPS WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtPackSizeTmp PPST WITH(NOLOCK) ON PPS.FTPdtCode = PPST.FTPdtCode");
                oSql.AppendLine("   AND PPS.FTPunCode = PPST.FTPunCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtPackSize");
                oSql.AppendLine("SELECT * FROM TCNMPdtPackSizeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtPackSizeTmp");
                //*Em 62-06-24
                //TCNMImagePdt
                oSql.AppendLine("DELETE IPT ");
                oSql.AppendLine("FROM TCNMImgPdt IPT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgPdtTmp IPTT WITH(NOLOCK) ON IPT.FTImgRefID = IPTT.FTImgRefID");
                oSql.AppendLine("   AND IPT.FTImgKey = IPTT.FTImgKey AND IPT.FTImgTable = 'TCNMPdt'");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgPdt(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy FROM TCNMImgPdtTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //++++++++++++++++
                //*Em 62-09-09
                oSql.AppendLine("DELETE PSB ");
                oSql.AppendLine("FROM TCNMPdtSpcBch PSB WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtSpcBchTmp PSBT WITH(NOLOCK) ON PSB.FTPdtCode = PSBT.FTPdtCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtSpcBch(FTPdtCode,FTBchCode,FTMerCode,FTMgpCode,FCPdtMin,FTShpCode,FTPdtRmk)");
                oSql.AppendLine("SELECT FTPdtCode,FTBchCode,FTMerCode,FTMgpCode,FCPdtMin,FTShpCode,FTPdtRmk FROM TCNMPdtSpcBchTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //++++++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString(), cVB.nVB_CmdTimeout); //*Arm 63-08-06
                return true;    //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxProduct : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbProduct : " + oEx.Message);
                return false;
            }
            //+++++++++++++++
            finally
            {
                poPdt = null;
                oSql = null;
                oTranscation = null;
                aoPdt = null;
                aoPdtLng = null;
                oPdt = null;
                oPdtLng = null;
                aoPdtBar = null;
                aoPdtPackSize = null;
                oPdtBar = null;
                oPdtPackSize = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtTmp> C_PRCaListProduct(List<cmlResInfoPdt> paoResPdt)
        {
            List<cmlTCNMPdtTmp> aoPdt = new List<cmlTCNMPdtTmp>();

            try
            {
                aoPdt = paoResPdt.Select(oItem => new cmlTCNMPdtTmp()
                {
                    FTPdtCode = oItem.rtPdtCode,
                    //FTPdtStkCode = oItem.rtPdtStkCode,
                    FTPdtStkControl = oItem.rtPdtStkControl,
                    FTPdtGrpControl = oItem.rtPdtGrpControl,
                    FTPdtForSystem = oItem.rtPdtForSystem,
                    FCPdtQtyOrdBuy = oItem.rcPdtQtyOrdBuy,
                    FCPdtCostDef = oItem.rcPdtCostDef,
                    FCPdtCostOth = oItem.rcPdtCostOth,
                    FCPdtCostStd = oItem.rcPdtCostStd,
                    FCPdtMin = oItem.rcPdtMin,
                    FCPdtMax = oItem.rcPdtMax,
                    FTPdtPoint = oItem.rtPdtPoint,
                    FCPdtPointTime = oItem.rcPdtPointTime,
                    FTPdtType = oItem.rtPdtType,
                    FTPdtSaleType = oItem.rtPdtSaleType,
                    FTPdtSetOrSN = oItem.rtPdtSetOrSN,
                    FTPdtStaSetPri = oItem.rtPdtStaSetPri,
                    FTPdtStaSetShwDT = oItem.rtPdtStaSetShwDT,
                    FTPdtStaAlwDis = oItem.rtPdtStaAlwDis,
                    FTPdtStaAlwReturn = oItem.rtPdtStaAlwReturn,
                    FTPdtStaVatBuy = oItem.rtPdtStaVatBuy,
                    FTPdtStaVat = oItem.rtPdtStaVat,
                    FTPdtStaActive = oItem.rtPdtStaActive,
                    FTPdtStaAlwReCalOpt = oItem.rtPdtStaAlwReCalOpt,
                    FTPdtStaCsm = oItem.rtPdtStaCsm,
                    //FTShpCode = oItem.rtShpCode,
                    //FTPdtRefShop = oItem.rtPdtRefShop,
                    FTTcgCode = oItem.rtTcgCode,
                    FTPgpChain = oItem.rtPgpChain,
                    FTPtyCode = oItem.rtPtyCode,
                    FTPbnCode = oItem.rtPbnCode,
                    FTPmoCode = oItem.rtPmoCode,
                    FTVatCode = oItem.rtVatCode,
                    FTEvhCode = oItem.rtEvhCode,
                    FDPdtSaleStart = oItem.rdPdtSaleStart,
                    FDPdtSaleStop = oItem.rdPdtSaleStop,
                    //FTBchCode = oItem.rtBchCode,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListProduct : " + oEx.Message); }
            finally
            {
                paoResPdt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdt;
        }

        /// <summary>
        /// Process list Product Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtTmp_L> C_PRCaListProductLng(List<cmlResInfoPdtLng> paoResPdtLng)
        {
            List<cmlTCNMPdtTmp_L> aoPdt = new List<cmlTCNMPdtTmp_L>();

            try
            {
                aoPdt = paoResPdtLng.Select(oItem => new cmlTCNMPdtTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPdtName = oItem.rtPdtName,
                    FTPdtNameABB = oItem.rtPdtNameABB,
                    FTPdtNameOth = oItem.rtPdtNameOth,
                    FTPdtRmk = oItem.rtPdtRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListProductLng : " + oEx.Message); }
            finally
            {
                paoResPdtLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdt;
        }

        /// <summary>
        /// Process list Product Bar
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtBarTmp> C_PRCaListProductBar(List<cmlResInfoPdtBar> paoResPdt)
        {
            List<cmlTCNMPdtBarTmp> aoPdt = new List<cmlTCNMPdtBarTmp>();

            try
            {
                aoPdt = paoResPdt.Select(oItem => new cmlTCNMPdtBarTmp()
                {
                    FNPldSeq = oItem.rnPldSeq,
                    FTBarCode = oItem.rtBarCode,
                    FTBarStaAlwSale = oItem.rtBarStaAlwSale,
                    FTBarStaByGen = oItem.rtBarStaByGen,
                    FTBarStaUse = oItem.rtBarStaUse,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPlcCode = oItem.rtPlcCode,
                    FTPunCode = oItem.rtPunCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListProductBar : " + oEx.Message); }
            finally
            {
                paoResPdt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdt;
        }

        /// <summary>
        /// Process list Product Pack Size
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtPackSizeTmp> C_PRCaListProductPackSize(List<cmlResInfoPdtPackSize> paoResPdt)
        {
            List<cmlTCNMPdtPackSizeTmp> aoPdt = new List<cmlTCNMPdtPackSizeTmp>();

            try
            {
                aoPdt = paoResPdt.Select(oItem => new cmlTCNMPdtPackSizeTmp()
                {
                    FCPdtPriceNET = oItem.rcPdtPriceNET,
                    FCPdtPriceRET = oItem.rcPdtPriceRET,
                    FCPdtPriceWHS = oItem.rcPdtPriceWHS,
                    FCPdtUnitFact = oItem.rcPdtUnitFact,
                    FCPdtWeight = oItem.rcPdtWeight,
                    FTClrCode = oItem.rtClrCode,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPdtGrade = oItem.rtPdtGrade,
                    FTPdtPkgDim = oItem.rtPdtPkgDim,
                    FTPdtStaAlwPick = oItem.rtPdtStaAlwPick,
                    FTPdtStaAlwPoHQ = oItem.rtPdtStaAlwPoHQ,
                    FTPdtUnitDim = oItem.rtPdtUnitDim,
                    FTPszCode = oItem.rtPszCode,
                    FTPunCode = oItem.rtPunCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListProductPackSize : " + oEx.Message); }
            finally
            {
                paoResPdt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdt;
        }

        private List<cmlTCNMImgPdtTmp> C_PRCaListImagePdt(List<cmlResInfoImgPdt> paoResImgPdt)
        {
            List<cmlTCNMImgPdtTmp> aoImgPdt = new List<cmlTCNMImgPdtTmp>();

            try
            {
                aoImgPdt = paoResImgPdt.Select(oItem => new cmlTCNMImgPdtTmp()
                {
                    FNImgID = oItem.rnImgID,
                    FTImgRefID = oItem.rtImgRefID,
                    FNImgSeq = oItem.rnImgSeq,
                    FTImgTable = oItem.rtImgTable,
                    FTImgKey = oItem.rtImgKey,
                    FTImgObj = string.IsNullOrEmpty(oItem.rtImgObj) ? "" : new cSP().SP_PRCtBase64ToImagePath(oItem),
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListImagePdt : " + oEx.Message); }
            finally
            {
                paoResImgPdt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoImgPdt;
        }

        /// <summary>
        /// Process list Product spacial branch
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtSpcBchTmp> C_PRCaListPdtSpcBch(List<cmlResTCNMPdtSpcBch> paoResPdt)
        {
            List<cmlTCNMPdtSpcBchTmp> aoPdt = new List<cmlTCNMPdtSpcBchTmp>();

            try
            {
                aoPdt = paoResPdt.Select(oItem => new cmlTCNMPdtSpcBchTmp()
                {
                    FTPdtCode = oItem.rtPdtCode,
                    FTBchCode = oItem.rtBchCode,
                    FTMerCode = oItem.rtMerCode,
                    FTMgpCode = oItem.rtMgpCode,
                    FCPdtMin = oItem.rcPdtMin,
                    FTShpCode = oItem.rtShpCode,
                    FTPdtRmk = oItem.rtPdtRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtSpcBch : " + oEx.Message); }
            finally
            {
                paoResPdt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdt;
        }
        #endregion End Product

        #region Rental

        /// <summary>
        /// Download Rental
        /// </summary>
        /// <param name="poRental"></param>
        //private void C_DWNxRental(cmlResItemOfcmlResPdtRentalDwn poRental)
        private bool C_DWNbRental(cmlResItemOfcmlResPdtRentalDwn poRental)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtRentalTmp> aoPdtRental;
            cDataReaderAdapter<cmlTCNMPdtRentalTmp> oPdtRental;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtRentalTmp");
                //oSql.AppendLine("FROM TCNMPdtRental WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtRentalTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtRentalTmp FROM TCNMPdtRental with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtRentalTmp");

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtRentalTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtRentalTmp FROM TCNMPdtRental with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtRentalTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtRental' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtRentalTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtRentalTmp FROM TCNMPdtRental with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtRentalTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtRental
                aoPdtRental = C_PRCaListPdtRental(poRental.roItem.raPdtRental);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtRental = new cDataReaderAdapter<cmlTCNMPdtRentalTmp>(aoPdtRental);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtRental.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtRentalTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtRental);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtRental : " + oEx.Message);  //*Em 61-11-15
                        return false;  //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE RNT ");
                oSql.AppendLine("FROM TCNMPdtRental RNT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtRentalTmp RNTT WITH(NOLOCK) ON RNT.FTPdtCode = RNTT.FTPdtCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtRental");
                oSql.AppendLine("SELECT * FROM TCNMPdtRentalTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtRentalTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;  //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtRental : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtRental : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poRental = null;
                oSql = null;
                oTranscation = null;
                aoPdtRental = null;
                oPdtRental = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Rental
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtRentalTmp> C_PRCaListPdtRental(List<cmlResInfoPdtRental> paoResPdtRental)
        {
            List<cmlTCNMPdtRentalTmp> aoPdtRental = new List<cmlTCNMPdtRentalTmp>();

            try
            {
                aoPdtRental = paoResPdtRental.Select(oItem => new cmlTCNMPdtRentalTmp()
                {
                    FCPdtDeposit = oItem.rcPdtDeposit,
                    FCPdtFee = oItem.rcPdtFee,
                    FCPdtQtyAvai = oItem.rcPdtQtyAvai,
                    FCPdtRent = oItem.rcPdtRent,
                    FCPdtRentTimeQty = oItem.rcPdtRentTimeQty,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPdtRentType = oItem.rtPdtRentType,
                    FTPdtStaReqRet = oItem.rtPdtStaReqRet,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtRental : " + oEx.Message); }
            finally
            {
                paoResPdtRental = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtRental;
        }

        #endregion End Rental

        #region Product Unit

        /// <summary>
        /// Download Product Unit
        /// </summary>
        /// <param name="poPdtUnit"></param>
        //private void C_DWNxPdtUnit(cmlResItemOfcmlResPdtUnitDwn poPdtUnit)
        private bool C_DWNbPdtUnit(cmlResItemOfcmlResPdtUnitDwn poPdtUnit)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtUnitTmp> aoPdtUnit;
            List<cmlTCNMPdtUnitTmp_L> aoPdtUnitLng;
            cDataReaderAdapter<cmlTCNMPdtUnitTmp> oPdtUnit;
            cDataReaderAdapter<cmlTCNMPdtUnitTmp_L> oPdtUnitLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtUnitTmp");
                //oSql.AppendLine("FROM TCNMPdtUnit WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtUnitTmp_L");
                //oSql.AppendLine("FROM TCNMPdtUnit_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtUnitTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtUnitTmp FROM TCNMPdtUnit with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtUnitTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtUnitTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtUnitTmp_L FROM TCNMPdtUnit_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtUnitTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtUnitTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtUnitTmp FROM TCNMPdtUnit with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtUnitTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtUnit' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtUnitTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtUnitTmp FROM TCNMPdtUnit with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtUnitTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtUnitTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtUnitTmp_L FROM TCNMPdtUnit_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtUnitTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtUnit_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtUnitTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtUnitTmp_L FROM TCNMPdtUnit_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtUnitTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtUnit
                aoPdtUnit = C_PRCaListPdtUnit(poPdtUnit.roItem.raPdtUnit);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtUnit = new cDataReaderAdapter<cmlTCNMPdtUnitTmp>(aoPdtUnit);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtUnit.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtUnitTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtUnit);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtUnit : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtUnit_L
                aoPdtUnitLng = C_PRCaListPdtUnitLng(poPdtUnit.roItem.raPdtUnitLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtUnitLng = new cDataReaderAdapter<cmlTCNMPdtUnitTmp_L>(aoPdtUnitLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtUnitLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtUnitTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtUnitLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtUnit : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PUN ");
                oSql.AppendLine("FROM TCNMPdtUnit PUN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtUnitTmp PUNT WITH(NOLOCK) ON PUN.FTPunCode = PUNT.FTPunCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtUnit");
                oSql.AppendLine("SELECT * FROM TCNMPdtUnitTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtUnitTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PUNL ");
                oSql.AppendLine("FROM TCNMPdtUnit_L PUNL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtUnitTmp_L PUNLT WITH(NOLOCK) ON PUNL.FTPunCode = PUNLT.FTPunCode");
                oSql.AppendLine("   AND PUNL.FNLngID = PUNLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtUnit_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtUnitTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtUnitTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;   //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtUnit : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtUnit : " + oEx.Message);
                return false;
            }
            //+++++++++++++++
            finally
            {
                poPdtUnit = null;
                oSql = null;
                oTranscation = null;
                aoPdtUnit = null;
                aoPdtUnitLng = null;
                oPdtUnit = null;
                oPdtUnitLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Unit
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtUnitTmp> C_PRCaListPdtUnit(List<cmlResInfoPdtUnit> paoResPdtUnit)
        {
            List<cmlTCNMPdtUnitTmp> aoPdtUnit = new List<cmlTCNMPdtUnitTmp>();

            try
            {
                aoPdtUnit = paoResPdtUnit.Select(oItem => new cmlTCNMPdtUnitTmp()
                {
                    FTPunCode = oItem.rtPunCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtUnit : " + oEx.Message); }
            finally
            {
                paoResPdtUnit = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtUnit;
        }

        /// <summary>
        /// Process list Product Unit Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtUnitTmp_L> C_PRCaListPdtUnitLng(List<cmlResInfoPdtUnitLng> paoResPdtUnitLng)
        {
            List<cmlTCNMPdtUnitTmp_L> aoPdtUnit = new List<cmlTCNMPdtUnitTmp_L>();

            try
            {
                aoPdtUnit = paoResPdtUnitLng.Select(oItem => new cmlTCNMPdtUnitTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPunCode = oItem.rtPunCode,
                    FTPunName = oItem.rtPunName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtUnitLng : " + oEx.Message); }
            finally
            {
                paoResPdtUnitLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtUnit;
        }

        #endregion End Product Unit

        #region Product Group

        /// <summary>
        /// Download Product Group
        /// </summary>
        /// <param name="poPdtGrp"></param>
        //private void C_DWNxPdtGroup(cmlResItemOfcmlResPdtGrpDwn poPdtGrp)
        private bool C_DWNbPdtGroup(cmlResItemOfcmlResPdtGrpDwn poPdtGrp)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtGrpTmp> aoPdtGrp;
            List<cmlTCNMPdtGrpTmp_L> aoPdtGrpLng;
            cDataReaderAdapter<cmlTCNMPdtGrpTmp> oPdtGrp;
            cDataReaderAdapter<cmlTCNMPdtGrpTmp_L> oPdtGrpLng;
            List<cmlTCNMImgPdtTmp> aoImgPdtGrp;             //*Arm 62-11-18
            cDataReaderAdapter<cmlTCNMImgPdtTmp> oImgPdtGrp;   //*Arm 62-11-18

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtGrpTmp");
                //oSql.AppendLine("FROM TCNMPdtGrp WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtGrpTmp_L");
                //oSql.AppendLine("FROM TCNMPdtGrp_L WITH(ROWLOCK)");

                //*Em 61-11-13 ++++++++++
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtGrpTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPdtGrpTmp FROM TCNMPdtGrp with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtGrpTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtGrp' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPdtGrpTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPdtGrpTmp FROM TCNMPdtGrp with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtGrpTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtGrpTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPdtGrpTmp_L FROM TCNMPdtGrp_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtGrpTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtGrp_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPdtGrpTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPdtGrpTmp_L FROM TCNMPdtGrp_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtGrpTmp_L");
                //+++++++++++++++++++++++
                //*Arm 62-11-18 TCNMImgPdt
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgPdtTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMImgPdtTmp FROM TCNMImgPdt with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgPdtTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgPdt' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMImgPdtTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMImgPdtTmp FROM TCNMImgPdt with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgPdtTmp");
                //++++++++++++++++++++++++
                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtGrp
                aoPdtGrp = C_PRCaListPdtGrp(poPdtGrp.roItem.raPdtGrp);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtGrp = new cDataReaderAdapter<cmlTCNMPdtGrpTmp>(aoPdtGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtGrpTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtGroup : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtGrp_L
                aoPdtGrpLng = C_PRCaListPdtGrpLng(poPdtGrp.roItem.raPdtGrpLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtGrpLng = new cDataReaderAdapter<cmlTCNMPdtGrpTmp_L>(aoPdtGrpLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtGrpLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtGrpTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtGrpLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtGroup : " + oEx.Message);   //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                //*Arm  62-11-18
                // Bulk Copy : TCNMImgPdt

                aoImgPdtGrp = C_PRCaListImagePdt(poPdtGrp.roItem.raPdtGrpImg);

                oImgPdtGrp = new cDataReaderAdapter<cmlTCNMImgPdtTmp>(aoImgPdtGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oImgPdtGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgPdtTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oImgPdtGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtGroup/TCNMImgPdtTmp : " + oEx.Message);
                        return false;
                    }
                }
                //+++++++++++++

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PGP ");
                oSql.AppendLine("FROM TCNMPdtGrp PGP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtGrpTmp PGPT WITH(NOLOCK) ON PGP.FTPgpChain = PGPT.FTPgpChain");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtGrp");
                oSql.AppendLine("SELECT * FROM TCNMPdtGrpTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtGrpTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PGPL ");
                oSql.AppendLine("FROM TCNMPdtGrp_L PGPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtGrpTmp_L PGPLT WITH(NOLOCK) ON PGPL.FTPgpChain = PGPLT.FTPgpChain");
                oSql.AppendLine("   AND PGPL.FNLngID = PGPLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtGrp_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtGrpTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtGrpTmp_L");
                //*Arm 62-11-18  TCNMImagePdt 
                oSql.AppendLine("DELETE IPT ");
                oSql.AppendLine("FROM TCNMImgPdt IPT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgPdtTmp IPTT WITH(NOLOCK) ON IPT.FTImgRefID = IPTT.FTImgRefID");
                oSql.AppendLine("   AND IPT.FTImgKey = IPTT.FTImgKey");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgPdt(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy FROM TCNMImgPdtTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //++++++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("END CATCH");


                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;   //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtGroup : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtGroup : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtGrp = null;
                oSql = null;
                oTranscation = null;
                aoPdtGrp = null;
                aoPdtGrpLng = null;
                oPdtGrp = null;
                oPdtGrpLng = null;
                aoImgPdtGrp = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Group
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtGrpTmp> C_PRCaListPdtGrp(List<cmlResInfoPdtGrp> paoResPdtGrp)
        {
            List<cmlTCNMPdtGrpTmp> aoPdtGrp = new List<cmlTCNMPdtGrpTmp>();

            try
            {
                aoPdtGrp = paoResPdtGrp.Select(oItem => new cmlTCNMPdtGrpTmp()
                {
                    FTPgpCode = oItem.rtPgpCode,
                    FNPgpLevel = oItem.rnPgpLevel,
                    FTPgpChain = oItem.rtPgpChain,
                    FTPgpParent = oItem.rtPgpParent,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtGrp : " + oEx.Message); }
            finally
            {
                paoResPdtGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtGrp;
        }

        /// <summary>
        /// Process list Product Group Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtGrpTmp_L> C_PRCaListPdtGrpLng(List<cmlResInfoPdtGrpLng> paoResPdtGrpLng)
        {
            List<cmlTCNMPdtGrpTmp_L> aoPdtGrp = new List<cmlTCNMPdtGrpTmp_L>();

            try
            {
                aoPdtGrp = paoResPdtGrpLng.Select(oItem => new cmlTCNMPdtGrpTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPgpChainName = oItem.rtPgpChainName,
                    FTPgpChain = oItem.rtPgpChain,
                    FTPgpName = oItem.rtPgpName,
                    FTPgpRmk = oItem.rtPgpRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtGrpLng : " + oEx.Message); }
            finally
            {
                paoResPdtGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtGrp;
        }

        #endregion End Product Group

        #region Product Price List

        /// <summary>
        /// Download Product Price List
        /// </summary>
        /// <param name="poPdtPriList"></param>
        //private void C_DWNxPdtPriList(cmlResItemOfcmlResPdtPriListDwn poPdtPriList)
        private bool C_DWNbPdtPriList(cmlResItemOfcmlResPdtPriListDwn poPdtPriList)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtPriListTmp> aoPdtPriList;
            List<cmlTCNMPdtPriListTmp_L> aoPdtPriListLng;
            cDataReaderAdapter<cmlTCNMPdtPriListTmp> oPdtPriList;
            cDataReaderAdapter<cmlTCNMPdtPriListTmp_L> oPdtPriListLng;

            oTranscation = cVB.oVB_ConnDB.BeginTransaction();    //*Em 61-11-15
            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtPriListTmp");
                //oSql.AppendLine("FROM TCNMPdtPriList WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtPriListTmp_L");
                //oSql.AppendLine("FROM TCNMPdtPriList_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPriListTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtPriListTmp FROM TCNMPdtPriList with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtPriListTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPriListTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtPriListTmp_L FROM TCNMPdtPriList_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtPriListTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPriListTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtPriListTmp FROM TCNMPdtPriList with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPriListTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPriList' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtPriListTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtPriListTmp FROM TCNMPdtPriList with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtPriListTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPriListTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtPriListTmp_L FROM TCNMPdtPriList_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPriListTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPriList_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtPriListTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtPriListTmp_L FROM TCNMPdtPriList_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtPriListTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtPriList
                aoPdtPriList = C_PRCaListPdtPriList(poPdtPriList.roItem.raPdtPriList);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPriList = new cDataReaderAdapter<cmlTCNMPdtPriListTmp>(aoPdtPriList);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPriList.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtPriListTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPriList);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtPriList : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtPriList_L
                aoPdtPriListLng = C_PRCaListPdtPriListLng(poPdtPriList.roItem.raPdtPriListLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPriListLng = new cDataReaderAdapter<cmlTCNMPdtPriListTmp_L>(aoPdtPriListLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPriListLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtPriListTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPriListLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtPriList : " + oEx.Message);    //*Em 61-11-15
                        return false;    //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PPL ");
                oSql.AppendLine("FROM TCNMPdtPriList PPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtPriListTmp PPLT WITH(NOLOCK) ON PPL.FTPplCode = PPLT.FTPplCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtPriList");
                oSql.AppendLine("SELECT * FROM TCNMPdtPriListTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtPriListTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PPLL ");
                oSql.AppendLine("FROM TCNMPdtPriList_L PPLL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtPriListTmp_L PPLLT WITH(NOLOCK) ON PPLL.FTPplCode = PPLLT.FTPplCode");
                oSql.AppendLine("   AND PPLL.FNLngID = PPLLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtPriList_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtPriListTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtPriListTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                oTranscation.Commit();    //*Em 61-11-15
                return true;    //*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtPriList : " + oEx.Message); }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtPriList : " + oEx.Message); oTranscation.Rollback(); return false; }    //*Em 61-11-15
            finally
            {
                poPdtPriList = null;
                oSql = null;
                oTranscation = null;
                aoPdtPriList = null;
                aoPdtPriListLng = null;
                oPdtPriList = null;
                oPdtPriListLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Price List
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtPriListTmp> C_PRCaListPdtPriList(List<cmlResInfoPdtPriList> paoResPdtPriList)
        {
            List<cmlTCNMPdtPriListTmp> aoPdtPriList = new List<cmlTCNMPdtPriListTmp>();

            try
            {
                aoPdtPriList = paoResPdtPriList.Select(oItem => new cmlTCNMPdtPriListTmp()
                {
                    FTPplCode = oItem.rtPplCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPriList : " + oEx.Message); }
            finally
            {
                paoResPdtPriList = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPriList;
        }

        /// <summary>
        /// Process list Product Price List Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtPriListTmp_L> C_PRCaListPdtPriListLng(List<cmlResInfoPdtPriListLng> paoResPdtPriListLng)
        {
            List<cmlTCNMPdtPriListTmp_L> aoPdtPriList = new List<cmlTCNMPdtPriListTmp_L>();

            try
            {
                aoPdtPriList = paoResPdtPriListLng.Select(oItem => new cmlTCNMPdtPriListTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPplCode = oItem.rtPplCode,
                    FTPplName = oItem.rtPplName,
                    FTPplRmk = oItem.rtPplRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPriListLng : " + oEx.Message); }
            finally
            {
                paoResPdtPriListLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPriList;
        }

        #endregion End Product Price List

        #region Product Promotion Group

        /// <summary>
        /// Download Product Promotion Group
        /// </summary>
        /// <param name="poPdtPmtGrp"></param>
        //private void C_DWNxPdtPmtGrp(cmlResItemOfcmlResPdtPmtGrpDwn poPdtPmtGrp)
        private bool C_DWNbPdtPmtGrp(cmlResItemOfcmlResPdtPmtGrpDwn poPdtPmtGrp)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtPmtGrpTmp> aoPdtPmtGrp;
            List<cmlTCNMPdtPmtGrpTmp_L> aoPdtPmtGrpLng;
            cDataReaderAdapter<cmlTCNMPdtPmtGrpTmp> oPdtPmtGrp;
            cDataReaderAdapter<cmlTCNMPdtPmtGrpTmp_L> oPdtPmtGrpLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtPmtGrpTmp");
                //oSql.AppendLine("FROM TCNMPdtPmtGrp WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtPmtGrpTmp_L");
                //oSql.AppendLine("FROM TCNMPdtPmtGrp_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPmtGrpTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtPmtGrpTmp FROM TCNMPdtPmtGrp with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtPmtGrpTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPmtGrpTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtPmtGrpTmp_L FROM TCNMPdtPmtGrp_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtPmtGrpTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPmtGrpTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtPmtGrpTmp FROM TCNMPdtPmtGrp with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPmtGrpTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPmtGrp' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtPmtGrpTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtPmtGrpTmp FROM TCNMPdtPmtGrp with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtPmtGrpTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtPmtGrpTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtPmtGrpTmp_L FROM TCNMPdtPmtGrp_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPmtGrpTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtPmtGrp_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtPmtGrpTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtPmtGrpTmp_L FROM TCNMPdtPmtGrp_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtPmtGrpTmp_L");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtPmtGrp
                aoPdtPmtGrp = C_PRCaListPdtPmtGrp(poPdtPmtGrp.roItem.raPdtPmtGrp);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtGrp = new cDataReaderAdapter<cmlTCNMPdtPmtGrpTmp>(aoPdtPmtGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtPmtGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtPmtGrpTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPmtGrp : " + oEx.Message);  //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtPmtGrp_L
                aoPdtPmtGrpLng = C_PRCaListPdtPmtGrpLng(poPdtPmtGrp.roItem.raPdtPmtGrpLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtGrpLng = new cDataReaderAdapter<cmlTCNMPdtPmtGrpTmp_L>(aoPdtPmtGrpLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtPmtGrpLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtPmtGrpTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtGrpLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPmtGrp : " + oEx.Message);  //*Em 61-11-15
                        return false;   //*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PMG ");
                oSql.AppendLine("FROM TCNMPdtPmtGrp PMG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtPmtGrpTmp PMGT WITH(NOLOCK) ON PMG.FTPmgCode = PMGT.FTPmgCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtPmtGrp");
                oSql.AppendLine("SELECT * FROM TCNMPdtPmtGrpTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtPmtGrpTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMGL ");
                oSql.AppendLine("FROM TCNMPdtPmtGrp_L PMGL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtPmtGrpTmp_L PMGLT WITH(NOLOCK) ON PMGL.FTPmgCode = PMGLT.FTPmgCode");
                oSql.AppendLine("   AND PMGL.FNLngID = PMGLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtPmtGrp_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtPmtGrpTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtPmtGrpTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtPmtGrp : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPmtGrp : " + oEx.Message);
                return false;
            }
            //+++++++++++++++
            finally
            {
                poPdtPmtGrp = null;
                oSql = null;
                oTranscation = null;
                aoPdtPmtGrp = null;
                aoPdtPmtGrpLng = null;
                oPdtPmtGrp = null;
                oPdtPmtGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Promotion Group
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtPmtGrpTmp> C_PRCaListPdtPmtGrp(List<cmlResInfoPdtPmtGrp> paoResPdtPmtGrp)
        {
            List<cmlTCNMPdtPmtGrpTmp> aoPdtPmtGrp = new List<cmlTCNMPdtPmtGrpTmp>();

            try
            {
                aoPdtPmtGrp = paoResPdtPmtGrp.Select(oItem => new cmlTCNMPdtPmtGrpTmp()
                {
                    FTPmgCode = oItem.rtPmgCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtGrp : " + oEx.Message); }
            finally
            {
                paoResPdtPmtGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtGrp;
        }

        /// <summary>
        /// Process list Product Promotion Group Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtPmtGrpTmp_L> C_PRCaListPdtPmtGrpLng(List<cmlResInfoPdtPmtGrpLng> paoResPdtPmtGrpLng)
        {
            List<cmlTCNMPdtPmtGrpTmp_L> aoPdtPmtGrp = new List<cmlTCNMPdtPmtGrpTmp_L>();

            try
            {
                aoPdtPmtGrp = paoResPdtPmtGrpLng.Select(oItem => new cmlTCNMPdtPmtGrpTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPmgCode = oItem.rtPmgCode,
                    FTPmgName = oItem.rtPmgName,
                    FTPmgRmk = oItem.rtPmgRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtGrpLng : " + oEx.Message); }
            finally
            {
                paoResPdtPmtGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtGrp;
        }

        #endregion End Product Promotion Group

        #region Product Touch Group

        /// <summary>
        /// Download Product Touch Group
        /// </summary>
        /// <param name="poPdtTouchGrp"></param>
        //private void C_DWNxPdtTouchGrp(cmlResItemOfcmlResPdtTouchGrpDwn poPdtTouchGrp)
        private bool C_DWNbPdtTouchGrp(cmlResItemOfcmlResPdtTouchGrpDwn poPdtTouchGrp)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtTouchGrpTmp> aoPdtTouchGrp;
            List<cmlTCNMPdtTouchGrpTmp_L> aoPdtTouchGrpLng;
            List<cmlTCNMImgPdtTmp> aoTouchGrpImgPdt; //*Arm 63-02-12
            cDataReaderAdapter<cmlTCNMPdtTouchGrpTmp> oPdtTouchGrp;
            cDataReaderAdapter<cmlTCNMPdtTouchGrpTmp_L> oPdtTouchGrpLng;
            cDataReaderAdapter<cmlTCNMImgPdtTmp> oTouchGrpImgPdt; //*Arm 63-02-12

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtTouchGrpTmp");
                //oSql.AppendLine("FROM TCNMPdtTouchGrp WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtTouchGrpTmp_L");
                //oSql.AppendLine("FROM TCNMPdtTouchGrp_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTouchGrpTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtTouchGrpTmp FROM TCNMPdtTouchGrp with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtTouchGrpTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTouchGrpTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtTouchGrpTmp_L FROM TCNMPdtTouchGrp_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtTouchGrpTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTouchGrpTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtTouchGrpTmp FROM TCNMPdtTouchGrp with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtTouchGrpTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtTouchGrp' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtTouchGrpTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtTouchGrpTmp FROM TCNMPdtTouchGrp with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtTouchGrpTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTouchGrpTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtTouchGrpTmp_L FROM TCNMPdtTouchGrp_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtTouchGrpTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtTouchGrp_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtTouchGrpTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtTouchGrpTmp_L FROM TCNMPdtTouchGrp_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtTouchGrpTmp_L");
                //+++++++++++++++++++++++

                //*Arm 63-02-12 - TCNMImgPdt (image Touch Group)
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMImgPdtTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMImgPdtTmp FROM TCNMImgPdt with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgPdtTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMImgPdt' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMImgPdtTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMImgPdtTmp FROM TCNMImgPdt with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMImgPdtTmp");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtTouchGrp
                aoPdtTouchGrp = C_PRCaListPdtTouchGrp(poPdtTouchGrp.roItem.raPdtTouchGrp);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtTouchGrp = new cDataReaderAdapter<cmlTCNMPdtTouchGrpTmp>(aoPdtTouchGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtTouchGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtTouchGrpTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtTouchGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtTouchGrp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtTouchGrp_L
                aoPdtTouchGrpLng = C_PRCaListPdtTouchGrpLng(poPdtTouchGrp.roItem.raPdtTouchGrpLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtTouchGrpLng = new cDataReaderAdapter<cmlTCNMPdtTouchGrpTmp_L>(aoPdtTouchGrpLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtTouchGrpLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtTouchGrpTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtTouchGrpLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtTouchGrp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //*Arm 63-02-12 - Bulk Copy : TCNMImgPdt (image Touch Group)
                aoTouchGrpImgPdt = C_PRCaListImagePdtTchGrp(poPdtTouchGrp.roItem.raPdtTouchGrpImg);
                oTouchGrpImgPdt = new cDataReaderAdapter<cmlTCNMImgPdtTmp>(aoTouchGrpImgPdt);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oTouchGrpImgPdt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMImgPdtTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oTouchGrpImgPdt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtTouchGrp/TCNMImgPdtTmp : " + oEx.Message);
                        return false;
                    }
                }
                //+++++++++++++

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE TCG ");
                oSql.AppendLine("FROM TCNMPdtTouchGrp TCG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtTouchGrpTmp TCGT WITH(NOLOCK) ON TCG.FTTcgCode = TCGT.FTTcgCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtTouchGrp");
                oSql.AppendLine("SELECT * FROM TCNMPdtTouchGrpTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtTouchGrpTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE TCGL ");
                oSql.AppendLine("FROM TCNMPdtTouchGrp_L TCGL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtTouchGrpTmp_L TCGLT WITH(NOLOCK) ON TCGL.FTTcgCode = TCGLT.FTTcgCode");
                oSql.AppendLine("   AND TCGL.FNLngID = TCGLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtTouchGrp_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtTouchGrpTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtTouchGrpTmp_L");
                oSql.AppendLine();
                //*Arm 63-02-12 TCNMImgPdt (image Touch Group)
                oSql.AppendLine("DELETE IPT ");
                oSql.AppendLine("FROM TCNMImgPdt IPT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMImgPdtTmp IPTT WITH(NOLOCK) ON IPT.FTImgRefID = IPTT.FTImgRefID");
                oSql.AppendLine("   AND IPT.FTImgKey = IPTT.FTImgKey AND IPT.FTImgTable = 'TCNMPdt'");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMImgPdt(FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTImgRefID, FNImgSeq, FTImgTable, FTImgKey, FTImgObj, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy FROM TCNMImgPdtTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //++++++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtTouchGrp : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtTouchGrp : " + oEx.Message);
                return false;
            }
            //++++++++++++
            finally
            {
                poPdtTouchGrp = null;
                oSql = null;
                oTranscation = null;
                aoPdtTouchGrp = null;
                aoPdtTouchGrpLng = null;
                oPdtTouchGrp = null;
                oPdtTouchGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Image Product Touch Group
        /// </summary>
        /// <param name="paoResImgPdt"></param>
        /// <returns></returns>
        private List<cmlTCNMImgPdtTmp> C_PRCaListImagePdtTchGrp(List<cmlResInfoImgPdt> paoResImgPdtTchGrp)
        {
            //*Arm 63-02-12 
            List<cmlTCNMImgPdtTmp> aoImgPdtTchGrp = new List<cmlTCNMImgPdtTmp>();

            try
            {
                aoImgPdtTchGrp = paoResImgPdtTchGrp.Select(oItem => new cmlTCNMImgPdtTmp()
                {
                    FNImgID = oItem.rnImgID,
                    FTImgRefID = oItem.rtImgRefID,
                    FNImgSeq = oItem.rnImgSeq,
                    FTImgTable = oItem.rtImgTable,
                    FTImgKey = oItem.rtImgKey,
                    FTImgObj = string.IsNullOrEmpty(oItem.rtImgObj) ? "" : new cSP().SP_PRCtBase64Image(oItem.rtImgObj, oItem.rtImgRefID + (string.IsNullOrEmpty(oItem.rtImgKey) ? "" : "_" + oItem.rtImgKey), "PdtTchGrp"),
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListImagePdtTchGrp : " + oEx.Message); }
            finally
            {
                paoResImgPdtTchGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoImgPdtTchGrp;
        }

        /// <summary>
        /// Process list Product Touch Group
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtTouchGrpTmp> C_PRCaListPdtTouchGrp(List<cmlResInfoPdtTouchGrp> paoResPdtTouchGrp)
        {
            List<cmlTCNMPdtTouchGrpTmp> aoPdtTouchGrp = new List<cmlTCNMPdtTouchGrpTmp>();

            try
            {
                aoPdtTouchGrp = paoResPdtTouchGrp.Select(oItem => new cmlTCNMPdtTouchGrpTmp()
                {
                    FTTcgCode = oItem.rtTcgCode,
                    FTTcgStaUse = oItem.rtTcgStaUse,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtTouchGrp : " + oEx.Message); }
            finally
            {
                paoResPdtTouchGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtTouchGrp;
        }

        /// <summary>
        /// Process list Product Touch Group Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtTouchGrpTmp_L> C_PRCaListPdtTouchGrpLng(List<cmlResInfoPdtTouchGrpLng> paoResPdtTouchGrpLng)
        {
            List<cmlTCNMPdtTouchGrpTmp_L> aoPdtTouchGrp = new List<cmlTCNMPdtTouchGrpTmp_L>();

            try
            {
                aoPdtTouchGrp = paoResPdtTouchGrpLng.Select(oItem => new cmlTCNMPdtTouchGrpTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTTcgCode = oItem.rtTcgCode,
                    FTTcgName = oItem.rtTcgName,
                    FTTcgRmk = oItem.rtTcgRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtTouchGrpLng : " + oEx.Message); }
            finally
            {
                paoResPdtTouchGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtTouchGrp;
        }

        #endregion End Product Touch Group

        #region Product Type

        /// <summary>
        /// Download Product Type
        /// </summary>
        /// <param name="poPdtType"></param>
        //private void C_DWNxPdtType(cmlResItemOfcmlResPdtTypeDwn poPdtType)
        private bool C_DWNbPdtType(cmlResItemOfcmlResPdtTypeDwn poPdtType)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtTypeTmp> aoPdtType;
            List<cmlTCNMPdtTypeTmp_L> aoPdtTypeLng;
            cDataReaderAdapter<cmlTCNMPdtTypeTmp> oPdtType;
            cDataReaderAdapter<cmlTCNMPdtTypeTmp_L> oPdtTypeLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtTypeTmp");
                //oSql.AppendLine("FROM TCNMPdtType WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtTypeTmp_L");
                //oSql.AppendLine("FROM TCNMPdtType_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTypeTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtTypeTmp FROM TCNMPdtType with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtTypeTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTypeTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtTypeTmp_L FROM TCNMPdtType_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtTypeTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTypeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtTypeTmp FROM TCNMPdtType with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtTypeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtType' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtTypeTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtTypeTmp FROM TCNMPdtType with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtTypeTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtTypeTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtTypeTmp_L FROM TCNMPdtType_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtTypeTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtType_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtTypeTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtTypeTmp_L FROM TCNMPdtType_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtTypeTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtType
                aoPdtType = C_PRCaListPdtType(poPdtType.roItem.raPdtType);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtType = new cDataReaderAdapter<cmlTCNMPdtTypeTmp>(aoPdtType);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtType.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtTypeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtType);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtType : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtType_L
                aoPdtTypeLng = C_PRCaListPdtTypeLng(poPdtType.roItem.raPdtTypeLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtTypeLng = new cDataReaderAdapter<cmlTCNMPdtTypeTmp_L>(aoPdtTypeLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtTypeLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtTypeTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtTypeLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtType : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PTY ");
                oSql.AppendLine("FROM TCNMPdtType PTY WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtTypeTmp PTYT WITH(NOLOCK) ON PTY.FTPtyCode = PTYT.FTPtyCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtType");
                oSql.AppendLine("SELECT * FROM TCNMPdtTypeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtTypeTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PTYL ");
                oSql.AppendLine("FROM TCNMPdtType_L PTYL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtTypeTmp_L PTYLT WITH(NOLOCK) ON PTYL.FTPtyCode = PTYLT.FTPtyCode");
                oSql.AppendLine("   AND PTYL.FNLngID = PTYLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtType_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtTypeTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtTypeTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtType : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtType : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtType = null;
                oSql = null;
                oTranscation = null;
                aoPdtType = null;
                aoPdtTypeLng = null;
                oPdtType = null;
                oPdtTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Type
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtTypeTmp> C_PRCaListPdtType(List<cmlResInfoPdtType> paoResPdtType)
        {
            List<cmlTCNMPdtTypeTmp> aoPdtType = new List<cmlTCNMPdtTypeTmp>();

            try
            {
                aoPdtType = paoResPdtType.Select(oItem => new cmlTCNMPdtTypeTmp()
                {
                    FTPtyCode = oItem.rtPtyCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtType : " + oEx.Message); }
            finally
            {
                paoResPdtType = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtType;
        }

        /// <summary>
        /// Process list Product Type Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtTypeTmp_L> C_PRCaListPdtTypeLng(List<cmlResInfoPdtTypeLng> paoResPdtTypeLng)
        {
            List<cmlTCNMPdtTypeTmp_L> aoPdtType = new List<cmlTCNMPdtTypeTmp_L>();

            try
            {
                aoPdtType = paoResPdtTypeLng.Select(oItem => new cmlTCNMPdtTypeTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPtyCode = oItem.rtPtyCode,
                    FTPtyName = oItem.rtPtyName,
                    FTPtyRmk = oItem.rtPtyRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtTypeLng : " + oEx.Message); }
            finally
            {
                paoResPdtTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtType;
        }

        #endregion End Product Type

        #region Product Brand

        /// <summary>
        /// Download Product Brand
        /// </summary>
        /// <param name="poPdtBrand"></param>
        //private void C_DWNxPdtBrand(cmlResItemOfcmlResPdtBrandDwn poPdtBrand)
        private bool C_DWNbPdtBrand(cmlResItemOfcmlResPdtBrandDwn poPdtBrand)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtBrandTmp> aoPdtBrand;
            List<cmlTCNMPdtBrandTmp_L> aoPdtBrandLng;
            cDataReaderAdapter<cmlTCNMPdtBrandTmp> oPdtBrand;
            cDataReaderAdapter<cmlTCNMPdtBrandTmp_L> oPdtBrandLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtBrandTmp");
                //oSql.AppendLine("FROM TCNMPdtBrand WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtBrandTmp_L");
                //oSql.AppendLine("FROM TCNMPdtBrand_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtBrandTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtBrandTmp FROM TCNMPdtBrand with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtBrandTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtBrandTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtBrandTmp_L FROM TCNMPdtBrand_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtBrandTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtBrandTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtBrandTmp FROM TCNMPdtBrand with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtBrandTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtBrand' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtBrandTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtBrandTmp FROM TCNMPdtBrand with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtBrandTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtBrandTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtBrandTmp_L FROM TCNMPdtBrand_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtBrandTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtBrand_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtBrandTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtBrandTmp_L FROM TCNMPdtBrand_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtBrandTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtBrand
                aoPdtBrand = C_PRCaListPdtBrand(poPdtBrand.roItem.raPdtBrand);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtBrand = new cDataReaderAdapter<cmlTCNMPdtBrandTmp>(aoPdtBrand);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtBrand.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtBrandTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtBrand);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtBrand : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtBrand_L
                aoPdtBrandLng = C_PRCaListPdtBrandLng(poPdtBrand.roItem.raPdtBrandLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtBrandLng = new cDataReaderAdapter<cmlTCNMPdtBrandTmp_L>(aoPdtBrandLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtBrandLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtBrandTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtBrandLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtBrand : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PBN ");
                oSql.AppendLine("FROM TCNMPdtBrand PBN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtBrandTmp PBNT WITH(NOLOCK) ON PBN.FTPbnCode = PBNT.FTPbnCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtBrand");
                oSql.AppendLine("SELECT * FROM TCNMPdtBrandTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtBrandTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PBNL ");
                oSql.AppendLine("FROM TCNMPdtBrand_L PBNL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtBrandTmp_L PBNLT WITH(NOLOCK) ON PBNL.FTPbnCode = PBNLT.FTPbnCode");
                oSql.AppendLine("   AND PBNL.FNLngID = PBNLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtBrand_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtBrandTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtBrandTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtBrand : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtBrand : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtBrand = null;
                oSql = null;
                oTranscation = null;
                aoPdtBrand = null;
                aoPdtBrandLng = null;
                oPdtBrand = null;
                oPdtBrandLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Brand
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtBrandTmp> C_PRCaListPdtBrand(List<cmlResInfoPdtBrand> paoResPdtBrand)
        {
            List<cmlTCNMPdtBrandTmp> aoPdtBrand = new List<cmlTCNMPdtBrandTmp>();

            try
            {
                aoPdtBrand = paoResPdtBrand.Select(oItem => new cmlTCNMPdtBrandTmp()
                {
                    FTPbnCode = oItem.rtPbnCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtBrand : " + oEx.Message); }
            finally
            {
                paoResPdtBrand = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtBrand;
        }

        /// <summary>
        /// Process list Product Brand Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtBrandTmp_L> C_PRCaListPdtBrandLng(List<cmlResInfoPdtBrandLng> paoResPdtBrandLng)
        {
            List<cmlTCNMPdtBrandTmp_L> aoPdtBrand = new List<cmlTCNMPdtBrandTmp_L>();

            try
            {
                aoPdtBrand = paoResPdtBrandLng.Select(oItem => new cmlTCNMPdtBrandTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPbnCode = oItem.rtPbnCode,
                    FTPbnName = oItem.rtPbnName,
                    FTPbnRmk = oItem.rtPbnRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtBrandLng : " + oEx.Message); }
            finally
            {
                paoResPdtBrandLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtBrand;
        }

        #endregion End Product Brand

        #region Product Model

        /// <summary>
        /// Download Product Model
        /// </summary>
        /// <param name="poPdtModel"></param>
        //private void C_DWNxPdtModel(cmlResItemOfcmlResPdtModelDwn poPdtModel)
        private bool C_DWNbPdtModel(cmlResItemOfcmlResPdtModelDwn poPdtModel)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtModelTmp> aoPdtModel;
            List<cmlTCNMPdtModelTmp_L> aoPdtModelLng;
            cDataReaderAdapter<cmlTCNMPdtModelTmp> oPdtModel;
            cDataReaderAdapter<cmlTCNMPdtModelTmp_L> oPdtModelLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtModelTmp");
                //oSql.AppendLine("FROM TCNMPdtModel WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtModelTmp_L");
                //oSql.AppendLine("FROM TCNMPdtModel_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtModelTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtModelTmp FROM TCNMPdtModel with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtModelTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtModelTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtModelTmp_L FROM TCNMPdtModel_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtModelTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtModelTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtModelTmp FROM TCNMPdtModel with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtModelTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtModel' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtModelTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtModelTmp FROM TCNMPdtModel with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtModelTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtModelTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtModelTmp_L FROM TCNMPdtModel_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtModelTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtModel_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtModelTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtModelTmp_L FROM TCNMPdtModel_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtModelTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtModel
                aoPdtModel = C_PRCaListPdtModel(poPdtModel.roItem.raPdtModel);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtModel = new cDataReaderAdapter<cmlTCNMPdtModelTmp>(aoPdtModel);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtModel.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtModelTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtModel);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtModel : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtModel_L
                aoPdtModelLng = C_PRCaListPdtModelLng(poPdtModel.roItem.raPdtModelLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtModelLng = new cDataReaderAdapter<cmlTCNMPdtModelTmp_L>(aoPdtModelLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtModelLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtModelTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtModelLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtModel : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PMO ");
                oSql.AppendLine("FROM TCNMPdtModel PMO WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtModelTmp PMOT WITH(NOLOCK) ON PMO.FTPmoCode = PMOT.FTPmoCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtModel");
                oSql.AppendLine("SELECT * FROM TCNMPdtModelTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtModelTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMOL ");
                oSql.AppendLine("FROM TCNMPdtModel_L PMOL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtModelTmp_L PMOLT WITH(NOLOCK) ON PMOL.FTPmoCode = PMOLT.FTPmoCode");
                oSql.AppendLine("   AND PMOL.FNLngID = PMOLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtModel_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtModelTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtModelTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtModel : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtModel : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtModel = null;
                oSql = null;
                oTranscation = null;
                aoPdtModel = null;
                aoPdtModelLng = null;
                oPdtModel = null;
                oPdtModelLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Model
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtModelTmp> C_PRCaListPdtModel(List<cmlResInfoPdtModel> paoResPdtModel)
        {
            List<cmlTCNMPdtModelTmp> aoPdtModel = new List<cmlTCNMPdtModelTmp>();

            try
            {
                aoPdtModel = paoResPdtModel.Select(oItem => new cmlTCNMPdtModelTmp()
                {
                    FTPmoCode = oItem.rtPmoCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtModel : " + oEx.Message); }
            finally
            {
                paoResPdtModel = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtModel;
        }

        /// <summary>
        /// Process list Product Model Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtModelTmp_L> C_PRCaListPdtModelLng(List<cmlResInfoPdtModelLng> paoResPdtModelLng)
        {
            List<cmlTCNMPdtModelTmp_L> aoPdtModel = new List<cmlTCNMPdtModelTmp_L>();

            try
            {
                aoPdtModel = paoResPdtModelLng.Select(oItem => new cmlTCNMPdtModelTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPmoCode = oItem.rtPmoCode,
                    FTPmoName = oItem.rtPmoName,
                    FTPmoRmk = oItem.rtPmoRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtModelLng : " + oEx.Message); }
            finally
            {
                paoResPdtModelLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtModel;
        }

        #endregion End Product Model

        #region Product Color

        /// <summary>
        /// Download Product Color
        /// </summary>
        /// <param name="poPdtColor"></param>
        //private void C_DWNxPdtColor(cmlResItemOfcmlResPdtColorDwn poPdtColor)
        private bool C_DWNbPdtColor(cmlResItemOfcmlResPdtColorDwn poPdtColor)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtColorTmp> aoPdtColor;
            List<cmlTCNMPdtColorTmp_L> aoPdtColorLng;
            cDataReaderAdapter<cmlTCNMPdtColorTmp> oPdtColor;
            cDataReaderAdapter<cmlTCNMPdtColorTmp_L> oPdtColorLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtColorTmp");
                //oSql.AppendLine("FROM TCNMPdtColor WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtColorTmp_L");
                //oSql.AppendLine("FROM TCNMPdtColor_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtColorTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtColorTmp FROM TCNMPdtColor with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtColorTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtColorTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtColorTmp_L FROM TCNMPdtColor_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtColorTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtColorTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtColorTmp FROM TCNMPdtColor with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtColorTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtColor' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtColorTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtColorTmp FROM TCNMPdtColor with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtColorTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtColorTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtColorTmp_L FROM TCNMPdtColor_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtColorTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtColor_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtColorTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtColorTmp_L FROM TCNMPdtColor_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtColorTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtColor
                aoPdtColor = C_PRCaListPdtColor(poPdtColor.roItem.raPdtColor);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtColor = new cDataReaderAdapter<cmlTCNMPdtColorTmp>(aoPdtColor);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtColor.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtColorTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtColor);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtColor : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtColor_L
                aoPdtColorLng = C_PRCaListPdtColorLng(poPdtColor.roItem.raPdtColorLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtColorLng = new cDataReaderAdapter<cmlTCNMPdtColorTmp_L>(aoPdtColorLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtColorLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtColorTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtColorLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtColor : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CLR ");
                oSql.AppendLine("FROM TCNMPdtColor CLR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtColorTmp CLRT WITH(NOLOCK) ON CLR.FTClrCode = CLRT.FTClrCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtColor");
                oSql.AppendLine("SELECT * FROM TCNMPdtColorTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtColorTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CLRL ");
                oSql.AppendLine("FROM TCNMPdtColor_L CLRL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtColorTmp_L CLRLT WITH(NOLOCK) ON CLRL.FTClrCode = CLRLT.FTClrCode");
                oSql.AppendLine("   AND CLRL.FNLngID = CLRLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtColor_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtColorTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtColorTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtColor : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtColor : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtColor = null;
                oSql = null;
                oTranscation = null;
                aoPdtColor = null;
                aoPdtColorLng = null;
                oPdtColor = null;
                oPdtColorLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Color
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtColorTmp> C_PRCaListPdtColor(List<cmlResInfoPdtColor> paoResPdtColor)
        {
            List<cmlTCNMPdtColorTmp> aoPdtColor = new List<cmlTCNMPdtColorTmp>();

            try
            {
                aoPdtColor = paoResPdtColor.Select(oItem => new cmlTCNMPdtColorTmp()
                {
                    FTClrCode = oItem.rtClrCode,
                    FTClrRefValue = oItem.rtClrRefValue,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtColor : " + oEx.Message); }
            finally
            {
                paoResPdtColor = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtColor;
        }

        /// <summary>
        /// Process list Product Color Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtColorTmp_L> C_PRCaListPdtColorLng(List<cmlResInfoPdtColorLng> paoResPdtColorLng)
        {
            List<cmlTCNMPdtColorTmp_L> aoPdtColor = new List<cmlTCNMPdtColorTmp_L>();

            try
            {
                aoPdtColor = paoResPdtColorLng.Select(oItem => new cmlTCNMPdtColorTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTClrCode = oItem.rtClrCode,
                    FTClrName = oItem.rtClrName,
                    FTClrRmk = oItem.rtClrRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtColorLng : " + oEx.Message); }
            finally
            {
                paoResPdtColorLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtColor;
        }

        #endregion End Product Color

        #region Product Size

        /// <summary>
        /// Download Product Size
        /// </summary>
        /// <param name="poPdtSize"></param>
        //private void C_DWNxPdtSize(cmlResItemOfcmlResPdtSizeDwn poPdtSize)
        private bool C_DWNbPdtSize(cmlResItemOfcmlResPdtSizeDwn poPdtSize)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtSizeTmp> aoPdtSize;
            List<cmlTCNMPdtSizeTmp_L> aoPdtSizeLng;
            cDataReaderAdapter<cmlTCNMPdtSizeTmp> oPdtSize;
            cDataReaderAdapter<cmlTCNMPdtSizeTmp_L> oPdtSizeLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtSizeTmp");
                //oSql.AppendLine("FROM TCNMPdtSize WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtSizeTmp_L");
                //oSql.AppendLine("FROM TCNMPdtSize_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtSizeTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtSizeTmp FROM TCNMPdtSize with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtSizeTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtSizeTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtSizeTmp_L FROM TCNMPdtSize_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtSizeTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtSizeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtSizeTmp FROM TCNMPdtSize with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtSizeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtSize' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtSizeTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtSizeTmp FROM TCNMPdtSize with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtSizeTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtSizeTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtSizeTmp_L FROM TCNMPdtSize_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtSizeTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtSize_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtSizeTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtSizeTmp_L FROM TCNMPdtSize_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtSizeTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtSize
                aoPdtSize = C_PRCaListPdtSize(poPdtSize.roItem.raPdtSize);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtSize = new cDataReaderAdapter<cmlTCNMPdtSizeTmp>(aoPdtSize);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtSize.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtSizeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtSize);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtSize : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtSize_L
                aoPdtSizeLng = C_PRCaListPdtSizeLng(poPdtSize.roItem.raPdtSizeLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtSizeLng = new cDataReaderAdapter<cmlTCNMPdtSizeTmp_L>(aoPdtSizeLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtSizeLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtSizeTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtSizeLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtSize : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PSZ ");
                oSql.AppendLine("FROM TCNMPdtSize PSZ WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtSizeTmp PSZT WITH(NOLOCK) ON PSZ.FTPszCode = PSZT.FTPszCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtSize");
                oSql.AppendLine("SELECT * FROM TCNMPdtSizeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtSizeTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PSZL ");
                oSql.AppendLine("FROM TCNMPdtSize_L PSZL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtSizeTmp_L PSZLT WITH(NOLOCK) ON PSZL.FTPszCode = PSZLT.FTPszCode");
                oSql.AppendLine("   AND PSZL.FNLngID = PSZLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtSize_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtSizeTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtSizeTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtSize : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtSize : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtSize = null;
                oSql = null;
                oTranscation = null;
                aoPdtSize = null;
                aoPdtSizeLng = null;
                oPdtSize = null;
                oPdtSizeLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Size
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtSizeTmp> C_PRCaListPdtSize(List<cmlResInfoPdtSize> paoResPdtSize)
        {
            List<cmlTCNMPdtSizeTmp> aoPdtSize = new List<cmlTCNMPdtSizeTmp>();

            try
            {
                aoPdtSize = paoResPdtSize.Select(oItem => new cmlTCNMPdtSizeTmp()
                {
                    FTPszCode = oItem.rtPszCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtSize : " + oEx.Message); }
            finally
            {
                paoResPdtSize = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtSize;
        }

        /// <summary>
        /// Process list Product Size Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtSizeTmp_L> C_PRCaListPdtSizeLng(List<cmlResInfoPdtSizeLng> paoResPdtSizeLng)
        {
            List<cmlTCNMPdtSizeTmp_L> aoPdtSize = new List<cmlTCNMPdtSizeTmp_L>();

            try
            {
                aoPdtSize = paoResPdtSizeLng.Select(oItem => new cmlTCNMPdtSizeTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTPszCode = oItem.rtPszCode,
                    FTPszName = oItem.rtPszName,
                    FTPszRmk = oItem.rtPszRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtSizeLng : " + oEx.Message); }
            finally
            {
                paoResPdtSizeLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtSize;
        }

        #endregion End Product Size

        #region  Event

        /// <summary>
        /// Download  Event
        /// </summary>
        /// <param name="poPdtNoSleByEvn"></param>
        //private void C_DWNxPdtNoSleByEvn(cmlResItemOfcmlResPdtNoSleByEvnDwn poPdtNoSleByEvn)
        //private bool C_DWNbPdtNoSleByEvn(cmlResItemOfcmlResPdtNoSleByEvnDwn poPdtNoSleByEvn)
        //{
        //    StringBuilder oSql;
        //    SqlTransaction oTranscation;
        //    List<cmlTCNMPdtNoSleByEvnTmp> aoPdtNoSleByEvn;
        //    List<cmlTCNMPdtNoSleByEvnTmp_L> aoPdtNoSleByEvnLng;
        //    cDataReaderAdapter<cmlTCNMPdtNoSleByEvnTmp> oPdtNoSleByEvn;
        //    cDataReaderAdapter<cmlTCNMPdtNoSleByEvnTmp_L> oPdtNoSleByEvnLng;

        //    try
        //    {
        //        // Create Tmp
        //        oSql = new StringBuilder();
        //        //oSql.AppendLine("SELECT TOP(0) *");
        //        //oSql.AppendLine("INTO TCNMPdtNoSleByEvnTmp");
        //        //oSql.AppendLine("FROM TCNMPdtNoSleByEvn WITH(ROWLOCK)");
        //        //oSql.AppendLine();
        //        //oSql.AppendLine("SELECT TOP(0) *");
        //        //oSql.AppendLine("INTO TCNMPdtNoSleByEvnTmp_L");
        //        //oSql.AppendLine("FROM TCNMPdtNoSleByEvn_L WITH(ROWLOCK)");

        //        //*Em 61-11-13 ++++++++++
        //        oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtNoSleByEvnTmp'))");
        //        oSql.AppendLine("BEGIN");
        //        oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtNoSleByEvnTmp FROM TCNMPdtNoSleByEvn with(nolock)");
        //        oSql.AppendLine("END");
        //        oSql.AppendLine("TRUNCATE TABLE TCNMPdtNoSleByEvnTmp");
        //        oSql.AppendLine("");
        //        oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtNoSleByEvnTmp_L'))");
        //        oSql.AppendLine("BEGIN");
        //        oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtNoSleByEvnTmp_L FROM TCNMPdtNoSleByEvn_L with(nolock)");
        //        oSql.AppendLine("END");
        //        oSql.AppendLine("TRUNCATE TABLE TCNMPdtNoSleByEvnTmp_L");
        //        //+++++++++++++++++++++++
        //        new cDatabase().C_SETxDataQuery(oSql.ToString());

        //        // Bulk Copy : TCNMPdtNoSleByEvn
        //        aoPdtNoSleByEvn = C_PRCaListPdtNoSleByEvn(poPdtNoSleByEvn.roItem.raPdtNoSleByEvn);

        //        oTranscation = cVB.oVB_ConnDB.BeginTransaction();
        //        oPdtNoSleByEvn = new cDataReaderAdapter<cmlTCNMPdtNoSleByEvnTmp>(aoPdtNoSleByEvn);

        //        using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
        //        {
        //            //*Em 61-11-16
        //            foreach (string tColName in oPdtNoSleByEvn.ColumnNames)
        //            {
        //                oBulkCopy.ColumnMappings.Add(tColName, tColName);
        //            }
        //            //+++++++++++++++
        //            oBulkCopy.BatchSize = 100;
        //            oBulkCopy.DestinationTableName = "dbo.TCNMPdtNoSleByEvnTmp";

        //            try
        //            {
        //                oBulkCopy.WriteToServer(oPdtNoSleByEvn);
        //            }
        //            catch(Exception oEx)
        //            {
        //                oTranscation.Rollback();
        //                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtNoSleByEvn : " + oEx.Message);//*Em 61-11-15
        //                return false;//*Em 61-11-15
        //            }
        //        }

        //        //oTranscation.Commit();

        //        // Bulk Copy : TCNMPdtNoSleByEvn_L
        //        aoPdtNoSleByEvnLng = C_PRCaListPdtNoSleByEvnLng(poPdtNoSleByEvn.roItem.raPdtNoSleByEvnLng);

        //        //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
        //        oPdtNoSleByEvnLng = new cDataReaderAdapter<cmlTCNMPdtNoSleByEvnTmp_L>(aoPdtNoSleByEvnLng);

        //        using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
        //        {
        //            //*Em 61-11-16
        //            foreach (string tColName in oPdtNoSleByEvnLng.ColumnNames)
        //            {
        //                oBulkCopy.ColumnMappings.Add(tColName, tColName);
        //            }
        //            //+++++++++++++++
        //            oBulkCopy.BatchSize = 100;
        //            oBulkCopy.DestinationTableName = "dbo.TCNMPdtNoSleByEvnTmp_L";

        //            try
        //            {
        //                oBulkCopy.WriteToServer(oPdtNoSleByEvnLng);
        //            }
        //            catch (Exception oEx)
        //            {
        //                oTranscation.Rollback();
        //                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtNoSleByEvn : " + oEx.Message);//*Em 61-11-15
        //                return false;//*Em 61-11-15
        //            }
        //        }

        //        oTranscation.Commit();

        //        // JOIN DELETE & Insert & Drop Table
        //        oSql.Clear();
        //        oSql.AppendLine("BEGIN TRY");
        //        oSql.AppendLine("BEGIN TRANSACTION");
        //        oSql.AppendLine("DELETE EVN ");
        //        oSql.AppendLine("FROM TCNMPdtNoSleByEvn EVN WITH(ROWLOCK)");
        //        oSql.AppendLine("INNER JOIN TCNMPdtNoSleByEvnTmp EVNT WITH(NOLOCK) ON EVN.FTEvnCode = EVNT.FTEvnCode");
        //        oSql.AppendLine("   AND EVN.FNEvnSeqNo = EVNT.FNEvnSeqNo");
        //        oSql.AppendLine();
        //        oSql.AppendLine("INSERT INTO TCNMPdtNoSleByEvn");
        //        oSql.AppendLine("SELECT * FROM TCNMPdtNoSleByEvnTmp WITH(NOLOCK) ");
        //        oSql.AppendLine();
        //        //oSql.AppendLine("DROP TABLE TCNMPdtNoSleByEvnTmp");
        //        oSql.AppendLine();
        //        oSql.AppendLine("DELETE EVNL ");
        //        oSql.AppendLine("FROM TCNMPdtNoSleByEvn_L EVNL WITH(ROWLOCK)");
        //        oSql.AppendLine("INNER JOIN TCNMPdtNoSleByEvnTmp_L EVNLT WITH(NOLOCK) ON EVNL.FTEvnCode = EVNLT.FTEvnCode");
        //        oSql.AppendLine("   AND EVNL.FNLngID = EVNLT.FNLngID");
        //        oSql.AppendLine();
        //        oSql.AppendLine("INSERT INTO TCNMPdtNoSleByEvn_L");
        //        oSql.AppendLine("SELECT * FROM TCNMPdtNoSleByEvnTmp_L WITH(NOLOCK) ");
        //        oSql.AppendLine();
        //        //oSql.AppendLine("DROP TABLE TCNMPdtNoSleByEvnTmp_L");
        //        oSql.AppendLine();
        //        oSql.AppendLine("COMMIT TRANSACTION");
        //        oSql.AppendLine("END TRY");
        //        oSql.AppendLine("BEGIN CATCH");
        //        oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
        //        oSql.AppendLine("       ROLLBACK TRAN;");
        //        oSql.AppendLine("   THROW;");
        //        oSql.AppendLine("END CATCH");

        //        new cDatabase().C_SETxDataQuery(oSql.ToString());
        //        return true;//*Em 61-11-15
        //    }
        //    //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtNoSleByEvn : " + oEx.Message); }
        //    //*Em 61-11-15
        //    catch (Exception oEx)
        //    {
        //        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtNoSleByEvn : " + oEx.Message);
        //        return false;
        //    }
        //    //++++++++++++
        //    finally
        //    {
        //        poPdtNoSleByEvn = null;
        //        oSql = null;
        //        oTranscation = null;
        //        aoPdtNoSleByEvn = null;
        //        aoPdtNoSleByEvnLng = null;
        //        oPdtNoSleByEvn = null;
        //        oPdtNoSleByEvnLng = null;
        //        //oC_SP.SP_CLExMemory();
        //    }
        //}

        private bool C_DWNbPdtEvent(cmlResItemOfcmlResEventDwn poEvnDwn)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMEventHDTmp> aoEvnHD;
            List<cmlTCNMEventHDTmp_L> aoEvnHDLng;
            List<cmlTCNMEventDTTmp> aoEvnDT;
            List<cmlTCNMEventDTTmp_L> aoEvnDTLng;
            cDataReaderAdapter<cmlTCNMEventHDTmp> oEvnHD;
            cDataReaderAdapter<cmlTCNMEventHDTmp_L> oEvnHDLng;
            cDataReaderAdapter<cmlTCNMEventDTTmp> oEvnDT;
            cDataReaderAdapter<cmlTCNMEventDTTmp_L> oEvnDTLng;
            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMEventHDTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMEventHDTmp FROM TCNMEventHD with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMEventHDTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMEventHD' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMEventHDTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMEventHDTmp FROM TCNMEventHD with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMEventHDTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMEventHDTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMEventHDTmp_L FROM TCNMEventHD_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMEventHDTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMEventHD_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMEventHDTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMEventHDTmp_L FROM TCNMEventHD_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMEventHDTmp_L");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMEventDTTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMEventDTTmp FROM TCNMEventDT with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMEventDTTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMEventDT' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMEventDTTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMEventDTTmp FROM TCNMEventDT with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMEventDTTmp");
                oSql.AppendLine("");
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMEventDTTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMEventDTTmp_L FROM TCNMEventDT_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMEventDTTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMEventDT_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMEventDTTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMEventDTTmp_L FROM TCNMEventDT_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMEventDTTmp_L");
                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtNoSleByEvn
                aoEvnHD = C_PRCaListPdtEventHD(poEvnDwn.roItem.raEvnHD);
                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oEvnHD = new cDataReaderAdapter<cmlTCNMEventHDTmp>(aoEvnHD);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oEvnHD.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMEventHDTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oEvnHD);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtEvent/TCNMEventHDTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                aoEvnHDLng = C_PRCaListPdtEventHDLng(poEvnDwn.roItem.raEvnHDLng);
                oEvnHDLng = new cDataReaderAdapter<cmlTCNMEventHDTmp_L>(aoEvnHDLng);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oEvnHDLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMEventHDTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oEvnHDLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtEvent/TCNMEventHDTmp_L : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                aoEvnDT = C_PRCaListPdtEventDT(poEvnDwn.roItem.raEvnDT);
                oEvnDT = new cDataReaderAdapter<cmlTCNMEventDTTmp>(aoEvnDT);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oEvnDT.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMEventDTTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oEvnDT);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtEvent/TCNMEventDTTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                aoEvnDTLng = C_PRCaListPdtEventDTLng(poEvnDwn.roItem.raEvnDTLng);
                oEvnDTLng = new cDataReaderAdapter<cmlTCNMEventDTTmp_L>(aoEvnDTLng);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oEvnDTLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMEventDTTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oEvnDTLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtEvent/TCNMEventDTTmp_L : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }
                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("   DELETE EHD ");
                oSql.AppendLine("   FROM TCNMEventHD EHD WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TCNMEventHDTmp EHDT WITH(NOLOCK) ON EHD.FTEvhCode = EHDT.FTEvhCode");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMEventHD");
                oSql.AppendLine("   SELECT * FROM TCNMEventHDTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   DELETE EHL ");
                oSql.AppendLine("   FROM TCNMEventHD_L EHL WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TCNMEventHDTmp_L EHLT WITH(NOLOCK) ON EHL.FTEvhCode = EHLT.FTEvhCode");
                oSql.AppendLine("      AND EHL.FNLngID = EHLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMEventHD_L");
                oSql.AppendLine("   SELECT * FROM TCNMEventHDTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   DELETE EDT ");
                oSql.AppendLine("   FROM TCNMEventDT EDT WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TCNMEventDTTmp EDTT WITH(NOLOCK) ON EDT.FTEvhCode = EDTT.FTEvhCode");
                oSql.AppendLine("      AND EDT.FNEvdSeqNo = EDTT.FNEvdSeqNo");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMEventDT");
                oSql.AppendLine("   SELECT * FROM TCNMEventDTTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMEventHD_L");
                oSql.AppendLine("   SELECT * FROM TCNMEventHDTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   DELETE EDL ");
                oSql.AppendLine("   FROM TCNMEventDT_L EDL WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TCNMEventDTTmp_L EDLT WITH(NOLOCK) ON EDL.FTEvhCode = EDLT.FTEvhCode");
                oSql.AppendLine("      AND EDL.FNEvdSeqNo = EDLT.FNEvdSeqNo AND EDL.FNLngID = EDLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMEventDT_L");
                oSql.AppendLine("   SELECT * FROM TCNMEventDTTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtEvent : " + oEx.Message);
                return false;
            }
            //++++++++++++
            finally
            {
                poEvnDwn = null;
                oSql = null;
                oTranscation = null;
                aoEvnHD = null;
                aoEvnHDLng = null;
                aoEvnDT = null;
                aoEvnDTLng = null;
                oEvnHD = null;
                oEvnHDLng = null;
                oEvnDT = null;
                oEvnDTLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list  Product No Sale By Event
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMEventHDTmp> C_PRCaListPdtEventHD(List<cmlResInfoEventHD> paoEvnHD)
        {
            List<cmlTCNMEventHDTmp> aoEvnHD = new List<cmlTCNMEventHDTmp>();

            try
            {
                aoEvnHD = paoEvnHD.Select(oItem => new cmlTCNMEventHDTmp()
                {
                    FTEvhCode = oItem.rtEvhCode,
                    FTEvhStaActive = oItem.rtEvhStaActive,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtEventHD : " + oEx.Message); }
            finally
            {
                paoEvnHD = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoEvnHD;
        }

        private List<cmlTCNMEventHDTmp_L> C_PRCaListPdtEventHDLng(List<cmlResInfoEventHDLng> paoEvnHDLng)
        {
            List<cmlTCNMEventHDTmp_L> aoEvnHDLng = new List<cmlTCNMEventHDTmp_L>();

            try
            {
                aoEvnHDLng = paoEvnHDLng.Select(oItem => new cmlTCNMEventHDTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTEvhCode = oItem.rtEvhCode,
                    FTEvhName = oItem.rtEvhName,
                    FTEvhRmk = oItem.rtEvhRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtEventHDLng : " + oEx.Message); }
            finally
            {
                paoEvnHDLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoEvnHDLng;
        }

        private List<cmlTCNMEventDTTmp> C_PRCaListPdtEventDT(List<cmlResInfoEventDT> paoEvnDT)
        {
            List<cmlTCNMEventDTTmp> aoEvnDT = new List<cmlTCNMEventDTTmp>();

            try
            {
                aoEvnDT = paoEvnDT.Select(oItem => new cmlTCNMEventDTTmp()
                {
                    FTEvhCode = oItem.rtEvhCode,
                    FNEvdSeqNo = oItem.rnEvdSeqNo,
                    FTEvdType = oItem.rtEvdType,
                    FTEvdTStart = oItem.rtEvdTStart,
                    FDEvdDStart = oItem.rdEvdDStart,
                    FTEvdTFinish = oItem.rtEvdTFinish,
                    FDEvdDFinish = oItem.rdEvdDFinish,
                    FTEvdStaUse = oItem.rtEvdStaUse,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtEventDT : " + oEx.Message); }
            finally
            {
                paoEvnDT = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoEvnDT;
        }

        private List<cmlTCNMEventDTTmp_L> C_PRCaListPdtEventDTLng(List<cmlResInfoEventDTLng> paoEvnDTLng)
        {
            List<cmlTCNMEventDTTmp_L> aoEvnDTLng = new List<cmlTCNMEventDTTmp_L>();

            try
            {
                aoEvnDTLng = paoEvnDTLng.Select(oItem => new cmlTCNMEventDTTmp_L()
                {
                    FTEvhCode = oItem.rtEvhCode,
                    FNEvdSeqNo = oItem.rnEvdSeqNo,
                    FNLngID = oItem.rnLngID,
                    FTEvdName = oItem.rtEvdName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtEventDTLng : " + oEx.Message); }
            finally
            {
                paoEvnDTLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoEvnDTLng;
        }
        #endregion End Event

        #region Product Promotion

        /// <summary>
        /// Download Product Promotion
        /// </summary>
        /// <param name="poPdtPromotion"></param>
        //private void C_DWNxPdtPromotion(cmlResItemOfcmlResPdtPmtDwn poPdtPmt)
        private bool C_DWNbPdtPromotion(cmlResItemOfcmlResPdtPmtDwn poPdtPmt)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNTPdtPmtHDTmp> aoPdtPmtHD;
            List<cmlTCNTPdtPmtDTTmp> aoPdtPmtDT;
            List<cmlTCNTPdtPmtCDTmp> aoPdtPmtCD;
            List<cmlTCNTPdtPmtCBTmp> aoPdtPmtCB;
            List<cmlTCNTPdtPmtCGTmp> aoPdtPmtCG;
            List<cmlTCNTPdtPmtHD_LTmp> aoPdtPmtHD_L;
            List<cmlTCNTPdtPmtHDBchTmp> aoPdtPmtHDBch;
            List<cmlTCNTPdtPmtHDCstTmp> aoPdtPmtHDCst;
            List<cmlTCNTPdtPmtHDCstPriTmp> aoPdtPmtHDCstPri;
            cDataReaderAdapter<cmlTCNTPdtPmtHDTmp> oPdtPmtHD;
            cDataReaderAdapter<cmlTCNTPdtPmtDTTmp> oPdtPmtDT;
            cDataReaderAdapter<cmlTCNTPdtPmtCDTmp> oPdtPmtCD;
            cDataReaderAdapter<cmlTCNTPdtPmtCBTmp> oPdtPmtCB;
            cDataReaderAdapter<cmlTCNTPdtPmtCGTmp> oPdtPmtCG;
            cDataReaderAdapter<cmlTCNTPdtPmtHD_LTmp> oPdtPmtHD_L;
            cDataReaderAdapter<cmlTCNTPdtPmtHDBchTmp> oPdtPmtHDBch;
            cDataReaderAdapter<cmlTCNTPdtPmtHDCstTmp> oPdtPmtHDCst;
            cDataReaderAdapter<cmlTCNTPdtPmtHDCstPriTmp> oPdtPmtHDCstPri;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTPdtPmtHDTmp");
                //oSql.AppendLine("FROM TCNTPdtPmtHD WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTPdtPmtDTTmp");
                //oSql.AppendLine("FROM TCNTPdtPmtDT WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTPdtPmtCDTmp");
                //oSql.AppendLine("FROM TCNTPdtPmtCD WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtHDTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTPdtPmtHDTmp FROM TCNTPdtPmtHD with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtHDTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtDTTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTPdtPmtDTTmp FROM TCNTPdtPmtDT with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtDTTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtCDTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTPdtPmtCDTmp FROM TCNTPdtPmtCD with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtCDTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtHDTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtHDTmp FROM TCNTPdtPmtHD with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHDTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHD' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPmtHDTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtHDTmp FROM TCNTPdtPmtHD with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtHDTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtDTTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtDTTmp FROM TCNTPdtPmtDT with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtDTTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtDT' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPmtDTTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtDTTmp FROM TCNTPdtPmtDT with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtDTTmp");
                oSql.AppendLine("");

                //*Arm Comment Code
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtCDTmp'))");
                //oSql.AppendLine("   BEGIN");
                //oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtCDTmp FROM TCNTPdtPmtCD with(nolock)");
                //oSql.AppendLine("   END");
                //oSql.AppendLine("ELSE");
                //oSql.AppendLine("   BEGIN");
                //oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtCDTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtCD' ),0) ");
                //oSql.AppendLine("       BEGIN");
                //oSql.AppendLine("           DROP TABLE TCNTPdtPmtCDTmp");
                //oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtCDTmp FROM TCNTPdtPmtCD with(nolock)");
                //oSql.AppendLine("       END");
                //oSql.AppendLine("   END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtCDTmp");

                //*Zen 63-03-17 เพิ่มข้อมูล SyncData Promotion เพิ่ม
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtCBTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtCBTmp FROM TCNTPdtPmtCB with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtCBTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtCB' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPmtCBTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtCBTmp FROM TCNTPdtPmtCB with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtCBTmp");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtCGTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtCGTmp FROM TCNTPdtPmtCG with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtCGTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtCG' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPmtCGTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtCGTmp FROM TCNTPdtPmtCG with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtCGTmp");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtHD_LTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtHD_LTmp FROM TCNTPdtPmtHD_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHD_LTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHD_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPmtHD_LTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtHD_LTmp FROM TCNTPdtPmtHD_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtHD_LTmp");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtHDBchTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtHDBchTmp FROM TCNTPdtPmtHDBch with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHDBchTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHDBch' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPmtHDBchTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtHDBchTmp FROM TCNTPdtPmtHDBch with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtHDBchTmp");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtHDCstTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtHDCstTmp FROM TCNTPdtPmtHDCst with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHDCstTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHDCst' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPmtHDCstTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtHDCstTmp FROM TCNTPdtPmtHDCst with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtHDCstTmp");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPmtHDCstPriTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPmtHDCstPriTmp FROM TCNTPdtPmtHDCstPri with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHDCstPriTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPmtHDCstPri' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPmtHDCstPriTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPmtHDCstPriTmp FROM TCNTPdtPmtHDCstPri with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPmtHDCstPriTmp");

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNTPdtPmtHD
                aoPdtPmtHD = C_PRCaListPdtPmtHD(poPdtPmt.roItem.raPdtPmtHD);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtHD = new cDataReaderAdapter<cmlTCNTPdtPmtHDTmp>(aoPdtPmtHD);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPmtHD.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtHDTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtHD);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtHDTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNTPdtPmtDT
                aoPdtPmtDT = C_PRCaListPdtPmtDT(poPdtPmt.roItem.raPdtPmtDT);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtDT = new cDataReaderAdapter<cmlTCNTPdtPmtDTTmp>(aoPdtPmtDT);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPmtDT.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtDTTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtDT);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtDTTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }


                // Bulk Copy : TCNTPdtPmtCB
                aoPdtPmtCB = C_PRCaListPdtPmtCB(poPdtPmt.roItem.raPdtPmtCB);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtCB = new cDataReaderAdapter<cmlTCNTPdtPmtCBTmp>(aoPdtPmtCB);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPmtCB.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtCBTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtCB);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtCBTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                // Bulk Copy : TCNTPdtPmtCG
                aoPdtPmtCG = C_PRCaListPdtPmtCG(poPdtPmt.roItem.raPdtPmtCG);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtCG = new cDataReaderAdapter<cmlTCNTPdtPmtCGTmp>(aoPdtPmtCG);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPmtCG.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtCGTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtCG);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtCGTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                // Bulk Copy : TCNTPdtPmtHD_L
                aoPdtPmtHD_L = C_PRCaListPdtPmtHD_L(poPdtPmt.roItem.raPdtPmtHD_L);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtHD_L = new cDataReaderAdapter<cmlTCNTPdtPmtHD_LTmp>(aoPdtPmtHD_L);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPmtHD_L.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtHD_LTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtHD_L);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtHD_LTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                // Bulk Copy : TCNTPdtPmtHDBch
                aoPdtPmtHDBch = C_PRCaListPdtPmtHDBch(poPdtPmt.roItem.raPdtPmtHDBch);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtHDBch = new cDataReaderAdapter<cmlTCNTPdtPmtHDBchTmp>(aoPdtPmtHDBch);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPmtHDBch.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtHDBchTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtHDBch);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtHDBchTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                // Bulk Copy : TCNTPdtPmtHDCst
                aoPdtPmtHDCst = C_PRCaListPdtPmtHDCst(poPdtPmt.roItem.raPdtPmtHDCst);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtHDCst = new cDataReaderAdapter<cmlTCNTPdtPmtHDCstTmp>(aoPdtPmtHDCst);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPmtHDCst.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtHDCstTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtHDCst);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtHDCstTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                // Bulk Copy : TCNTPdtPmtHDCstPri
                aoPdtPmtHDCstPri = C_PRCaListPdtPmtHDCstPri(poPdtPmt.roItem.raPdtPmtHDCstPri);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPmtHDCstPri = new cDataReaderAdapter<cmlTCNTPdtPmtHDCstPriTmp>(aoPdtPmtHDCstPri);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oPdtPmtHDCstPri.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtHDCstPriTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPmtHDCstPri);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtHDCstPriTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                //*Arm Comment Code ไม่ใช้ CD
                //// Bulk Copy : TCNTPdtPmtCD
                //aoPdtPmtCD = C_PRCaListPdtPmtCD(poPdtPmt.roItem.raPdtPmtCD);

                ////oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                //oPdtPmtCD = new cDataReaderAdapter<cmlTCNTPdtPmtCDTmp>(aoPdtPmtCD);

                //using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                //{
                //    //*Em 62-08-21
                //    foreach (string tColName in oPdtPmtCD.ColumnNames)
                //    {
                //        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                //    }
                //    //+++++++++++++
                //    oBulkCopy.BatchSize = 100;
                //    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPmtCDTmp";

                //    try
                //    {
                //        oBulkCopy.WriteToServer(oPdtPmtCD);
                //    }
                //    catch (Exception oEx)
                //    {
                //        oTranscation.Rollback();
                //        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion/TCNTPdtPmtCDTmp : " + oEx.Message);//*Em 61-11-15
                //        return false;//*Em 61-11-15
                //    }
                //}

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PMH ");
                oSql.AppendLine("FROM TCNTPdtPmtHD PMH WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPmtHDTmp PMHT WITH(NOLOCK) ON PMH.FTBchCode = PMHT.FTBchCode");
                oSql.AppendLine("   AND PMH.FTPmhDocNo = PMHT.FTPmhDocNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPmtHD");
                oSql.AppendLine("SELECT * FROM TCNTPdtPmtHDTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtHDTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMD ");
                oSql.AppendLine("FROM TCNTPdtPmtDT PMD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPmtDTTmp PMDT WITH(NOLOCK) ON PMD.FTBchCode = PMDT.FTBchCode");
                oSql.AppendLine("   AND PMD.FTPmhDocNo = PMDT.FTPmhDocNo");
                oSql.AppendLine("   AND PMD.FNPmdSeq = PMDT.FNPmdSeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPmtDT");
                oSql.AppendLine("SELECT * FROM TCNTPdtPmtDTTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtDTTmp");
                //*Arm 63-03-27  Comment Code
                //oSql.AppendLine();
                //oSql.AppendLine("DELETE PMC ");
                //oSql.AppendLine("FROM TCNTPdtPmtCD PMC WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TCNTPdtPmtCDTmp PMCT WITH(NOLOCK) ON PMC.FTBchCode = PMCT.FTBchCode");
                //oSql.AppendLine("   AND PMC.FTPmhCode = PMCT.FTPmhCode");
                //oSql.AppendLine("   AND PMC.FNPmcSeq = PMCT.FNPmcSeq");
                //oSql.AppendLine();
                //oSql.AppendLine("INSERT INTO TCNTPdtPmtCD");
                //oSql.AppendLine("SELECT * FROM TCNTPdtPmtCDTmp WITH(NOLOCK) ");
                //oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtCGTmp");
                //+++++++++++++++++
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMCG ");
                oSql.AppendLine("FROM TCNTPdtPmtCG PMCG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPmtCGTmp PMCGT WITH(NOLOCK) ON PMCG.FTBchCode = PMCGT.FTBchCode");
                oSql.AppendLine("   AND PMCG.FTPmhDocNo = PMCGT.FTPmhDocNo");
                oSql.AppendLine("   AND PMCG.FNPgtSeq = PMCGT.FNPgtSeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPmtCG");
                oSql.AppendLine("SELECT * FROM TCNTPdtPmtCGTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtCBTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMCB ");
                oSql.AppendLine("FROM TCNTPdtPmtCB PMCB WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPmtCBTmp PMCBT WITH(NOLOCK) ON PMCB.FTBchCode = PMCBT.FTBchCode");
                oSql.AppendLine("   AND PMCB.FTPmhDocNo = PMCBT.FTPmhDocNo");
                oSql.AppendLine("   AND PMCB.FNPbySeq = PMCBT.FNPbySeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPmtCB");
                oSql.AppendLine("SELECT * FROM TCNTPdtPmtCBTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtHD_LTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMHD_L ");
                oSql.AppendLine("FROM TCNTPdtPmtHD_L PMHD_L WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPmtHD_LTmp PMHD_LT WITH(NOLOCK) ON PMHD_L.FTBchCode = PMHD_LT.FTBchCode");
                oSql.AppendLine("   AND PMHD_L.FTPmhDocNo = PMHD_LT.FTPmhDocNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPmtHD_L");
                oSql.AppendLine("SELECT * FROM TCNTPdtPmtHD_LTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtHDCstTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMHDCst ");
                oSql.AppendLine("FROM TCNTPdtPmtHDCst PMHDCst WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPmtHDCstTmp PMHDCstT WITH(NOLOCK) ON PMHDCst.FTBchCode = PMHDCstT.FTBchCode");
                oSql.AppendLine("   AND PMHDCst.FTPmhDocNo = PMHDCstT.FTPmhDocNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPmtHDCst");
                oSql.AppendLine("SELECT * FROM TCNTPdtPmtHDCstTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtHDPriTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMHDPri ");
                oSql.AppendLine("FROM TCNTPdtPmtHDCstPri PMHDPri WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPmtHDCstPriTmp PMHDPriT WITH(NOLOCK) ON PMHDPri.FTBchCode = PMHDPriT.FTBchCode");
                oSql.AppendLine("   AND PMHDPri.FTPmhDocNo = PMHDPriT.FTPmhDocNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPmtHDCstPri");
                oSql.AppendLine("SELECT * FROM TCNTPdtPmtHDCstPriTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtHDPriTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PMHDBch ");
                oSql.AppendLine("FROM TCNTPdtPmtHDBch PMHDBch WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPmtHDBchTmp PMHDBchT WITH(NOLOCK) ON PMHDBch.FTBchCode = PMHDBchT.FTBchCode");
                oSql.AppendLine("   AND PMHDBch.FTPmhDocNo = PMHDBchT.FTPmhDocNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPmtHDBch");
                oSql.AppendLine("SELECT * FROM TCNTPdtPmtHDBchTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPmtCDTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtPromotion : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPromotion : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtPmt = null;
                oSql = null;
                oTranscation = null;
                aoPdtPmtHD = null;
                aoPdtPmtDT = null;
                aoPdtPmtCB = null;
                aoPdtPmtCG = null;
                aoPdtPmtHD_L = null;
                aoPdtPmtHDBch = null;
                aoPdtPmtHDCst = null;
                aoPdtPmtHDCstPri = null;
                oPdtPmtHD = null;
                oPdtPmtDT = null;
                oPdtPmtCB = null;
                oPdtPmtCG = null;
                oPdtPmtHD_L = null;
                oPdtPmtHDBch = null;
                oPdtPmtHDCst = null;
                oPdtPmtHDCstPri = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Promotion HD
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtHDTmp> C_PRCaListPdtPmtHD(List<cmlResInfoPdtPmtHD> paoResPdtPmtHD)
        {
            List<cmlTCNTPdtPmtHDTmp> aoPdtPmtHD = new List<cmlTCNTPdtPmtHDTmp>();

            try
            {
                aoPdtPmtHD = paoResPdtPmtHD.Select(oItem => new cmlTCNTPdtPmtHDTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPmhDocNo = oItem.rtPmhDocNo,
                    FDPmhDStart = oItem.rdPmhDStart,
                    FDPmhDStop = oItem.rdPmhDStop,
                    FDPmhTStart = oItem.rdPmhTStart,
                    FDPmhTStop = oItem.rdPmhTStop,
                    FTPmhStaLimitCst = oItem.rtPmhStaLimitCst,
                    FTPmhStaClosed = oItem.rtPmhStaClosed,
                    FTPmhStaDoc = oItem.rtPmhStaDoc,
                    FTPmhStaApv = oItem.rtPmhStaApv,
                    FTPmhStaPrcDoc = oItem.rtPmhStaPrcDoc,
                    FNPmhStaDocAct = oItem.rnPmhStaDocAct,
                    FTUsrCode = oItem.rtUsrCode,
                    FTPmhUsrApv = oItem.rtPmhUsrApv,
                    FTPmhStaOnTopPmt = oItem.rtPmhStaOnTopPmt,
                    FTPmhStaAlwCalPntStd = oItem.rtPmhStaAlwCalPntStd,
                    FTPmhStaRcvFree = oItem.rtPmhStaRcvFree,
                    FTPmhStaLimitGet = oItem.rtPmhStaLimitGet,
                    FTPmhStaLimitTime = oItem.rtPmhStaLimitTime,
                    FTPmhStaGetPdt = oItem.rtPmhStaGetPdt,
                    FTPmhRefAccCode = oItem.rtPmhRefAccCode,
                    FTPmhStaPdtExc = oItem.rtPmhStaPdtExc,
                    FTRolCode = oItem.rtRolCode,
                    FNPmhLimitQty = oItem.rnPmhLimitQty,
                    FTPmhStaChkLimit = oItem.rtPmhStaChkLimit,
                    FTPmhStaChkCst = oItem.rtPmhStaChkCst,
                    FTPmhStaGrpPriority = oItem.rtPmhStaGrpPriority,    //*Arm 63-06-18 เพิ่มตามโครงสร้าง SKC
                    FTPmhStaChkQuota = oItem.rtPmhStaChkQuota,          //*Arm 63-06-18 เพิ่มตามโครงสร้าง SKC
                    FTPmhStaGetPri = oItem.rtPmhStaGetPri,              //*Arm 63-06-18 เพิ่มตามโครงสร้าง SKC
                    FTPmhStaOnTopDis = oItem.rtPmhStaOnTopDis,          //*Arm 63-06-18 เพิ่มตามโครงสร้าง SKC
                    FTPmhStaSpcGrpDis = oItem.rtPmhStaSpcGrpDis,        //*Arm 63-06-18 เพิ่มตามโครงสร้าง SKC
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtHD : " + oEx.Message); }
            finally
            {
                paoResPdtPmtHD = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtHD;
        }

        /// <summary>
        /// Process list Product Promotion DT
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtDTTmp> C_PRCaListPdtPmtDT(List<cmlResInfoPdtPmtDT> paoResPdtPmtDT)
        {
            List<cmlTCNTPdtPmtDTTmp> aoPdtPmtDT = new List<cmlTCNTPdtPmtDTTmp>();

            try
            {
                aoPdtPmtDT = paoResPdtPmtDT.Select(oItem => new cmlTCNTPdtPmtDTTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPmhDocNo = oItem.rtPmhDocNo,
                    FNPmdSeq = oItem.rnPmdSeq,
                    FTPmdStaType = oItem.rtPmdStaType,
                    FTPmdGrpName = oItem.rtPmdGrpName,
                    FTPmdRefCode = oItem.rtPmdRefCode,
                    FTPmdSubRef = oItem.rtPmdSubRef,
                    FTPmdBarCode = oItem.rtPmdBarCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtDT : " + oEx.Message); }
            finally
            {
                paoResPdtPmtDT = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtDT;
        }

        /// <summary>
        /// Process list Product Promotion CB
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtCBTmp> C_PRCaListPdtPmtCB(List<cmlResInfoPdtPmtCB> paoResPdtPmtCB)
        {
            List<cmlTCNTPdtPmtCBTmp> aoPdtPmtCB = new List<cmlTCNTPdtPmtCBTmp>();

            try
            {
                aoPdtPmtCB = paoResPdtPmtCB.Select(oItem => new cmlTCNTPdtPmtCBTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPmhDocNo = oItem.rtPmhDocNo,
                    FNPbySeq = oItem.rnPbySeq,
                    FTPmdGrpName = oItem.rtPmdGrpName,
                    FTPbyStaCalSum = oItem.rtPbyStaCalSum,
                    FTPbyStaBuyCond = oItem.rtPbyStaBuyCond,
                    FTPbyStaPdtDT = oItem.rtPbyStaPdtDT,
                    FCPbyPerAvgDis = oItem.rcPbyPerAvgDis,
                    FCPbyMinSetPri = oItem.rcPbyMinSetPri,
                    FCPbyMinValue = oItem.rcPbyMinValue,
                    FCPbyMaxValue = oItem.rcPbyMaxValue,
                    FTPbyMinTime = oItem.rtPbyMinTime,
                    FTPbyMaxTime = oItem.rtPbyMaxTime
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtCB : " + oEx.Message); }
            finally
            {
                paoResPdtPmtCB = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtCB;
        }

        /// <summary>
        /// Process list Product Promotion CB
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtCGTmp> C_PRCaListPdtPmtCG(List<cmlResInfoPdtPmtCG> paoResPdtPmtCG)
        {
            List<cmlTCNTPdtPmtCGTmp> aoPdtPmtCG = new List<cmlTCNTPdtPmtCGTmp>();

            try
            {
                aoPdtPmtCG = paoResPdtPmtCG.Select(oItem => new cmlTCNTPdtPmtCGTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPmhDocNo = oItem.rtPmhDocNo,
                    FNPgtSeq = oItem.rnPgtSeq,
                    FTPmdGrpName = oItem.rtPmdGrpName,
                    FTPgtStaGetEffect = oItem.rtPgtStaGetEffect,
                    FTPgtStaGetType = oItem.rtPgtStaGetType,
                    FTPgtStaGetPdt = oItem.rtPgtStaGetPdt,
                    FTRolCode = oItem.rtRolCode,
                    FCPgtGetvalue = Convert.ToDecimal(oItem.rcPgtGetvalue),
                    FTPplCode = oItem.rtPplCode,
                    FCPgtGetQty = Convert.ToDecimal(oItem.rcPgtGetQty),
                    FCPgtPerAvgDis = Convert.ToDecimal(oItem.rcPgtPerAvgDis),
                    FTPgtStaPoint = oItem.rtPgtStaPoint,
                    FTPgtStaPntCalType = oItem.rtPgtStaPntCalType,
                    FTPgtStaPdtDT = oItem.rtPgtStaPdtDT,
                    FNPgtPntGet = oItem.rnPgtPntGet,
                    FNPgtPntBuy = oItem.rnPgtPntBuy,
                    FTPgtStaCoupon = oItem.rtPgtStaCoupon,
                    FTPgtCpnText = oItem.rtPgtCpnText,
                    FTCphDocNo = oItem.rtCphDocNo
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtCG : " + oEx.Message); }
            finally
            {
                paoResPdtPmtCG = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtCG;
        }

        /// <summary>
        /// Process list Product Promotion HD_L
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtHD_LTmp> C_PRCaListPdtPmtHD_L(List<cmlResInfoPdtPmtHD_L> paoResPdtPmtHD_L)
        {
            List<cmlTCNTPdtPmtHD_LTmp> aoPdtPmtHD_L = new List<cmlTCNTPdtPmtHD_LTmp>();

            try
            {
                aoPdtPmtHD_L = paoResPdtPmtHD_L.Select(oItem => new cmlTCNTPdtPmtHD_LTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPmhDocNo = oItem.rtPmhDocNo,
                    FNLngID = oItem.rnLngID,
                    FTPmhName = oItem.rtPmhName,
                    FTPmhNameSlip = oItem.rtPmhNameSlip,
                    FTPmhRmk = oItem.rtPmhRmk

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtHD_L : " + oEx.Message); }
            finally
            {
                paoResPdtPmtHD_L = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtHD_L;
        }

        /// <summary>
        /// Process list Product Promotion HDBch
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtHDBchTmp> C_PRCaListPdtPmtHDBch(List<cmlResInfoPdtPmtHDBch> paoResPdtPmtHDBch)
        {
            List<cmlTCNTPdtPmtHDBchTmp> aoPdtPmtHDBch = new List<cmlTCNTPdtPmtHDBchTmp>();

            try
            {
                aoPdtPmtHDBch = paoResPdtPmtHDBch.Select(oItem => new cmlTCNTPdtPmtHDBchTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPmhDocNo = oItem.rtPmhDocNo,
                    FTPmhBchTo = oItem.rtPmhBchTo,
                    FTPmhMerTo = oItem.rtPmhMerTo,
                    FTPmhShpTo = oItem.rtPmhShpTo,
                    FTPmhStaType = oItem.rtPmhStaType
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtHDBch : " + oEx.Message); }
            finally
            {
                paoResPdtPmtHDBch = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtHDBch;
        }

        /// <summary>
        /// Process list Product Promotion HDCst
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtHDCstTmp> C_PRCaListPdtPmtHDCst(List<cmlResInfoPdtPmtHDCst> paoResPdtPmtHDCst)
        {
            List<cmlTCNTPdtPmtHDCstTmp> aoPdtPmtHDCst = new List<cmlTCNTPdtPmtHDCstTmp>();

            try
            {
                aoPdtPmtHDCst = paoResPdtPmtHDCst.Select(oItem => new cmlTCNTPdtPmtHDCstTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPmhDocNo = oItem.rtPmhDocNo,
                    FTSpmStaLimitCst = oItem.rtSpmStaLimitCst,
                    FNSpmMemAgeLT = oItem.rnSpmMemAgeLT,
                    FTSpmStaChkCstDOB = oItem.rtSpmStaChkCstDOB,
                    FNPmhCstDobPrev = oItem.rnPmhCstDobPrev,
                    FNPmhCstDobNext = oItem.rnPmhCstDobNext
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtHDCst : " + oEx.Message); }
            finally
            {
                paoResPdtPmtHDCst = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtHDCst;
        }

        /// <summary>
        /// Process list Product Promotion HDCstPri
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtHDCstPriTmp> C_PRCaListPdtPmtHDCstPri(List<cmlResInfoPdtPmtHDCstPri> paoResPdtPmtHDCstPri)
        {
            List<cmlTCNTPdtPmtHDCstPriTmp> aoPdtPmtHDCstPri = new List<cmlTCNTPdtPmtHDCstPriTmp>();

            try
            {
                aoPdtPmtHDCstPri = paoResPdtPmtHDCstPri.Select(oItem => new cmlTCNTPdtPmtHDCstPriTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTPmhDocNo = oItem.rtPmhDocNo,
                    FTPplCode = oItem.rtPplCode,
                    FTPmhStaType = oItem.rtPmhStaType
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtHDCstPri : " + oEx.Message); }
            finally
            {
                paoResPdtPmtHDCstPri = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtHDCstPri;
        }

        /// <summary>
        /// Process list Product Promotion CD
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPmtCDTmp> C_PRCaListPdtPmtCD(List<cmlResInfoPdtPmtCD> paoResPdtPmtCD)
        {
            List<cmlTCNTPdtPmtCDTmp> aoPdtPmtCD = new List<cmlTCNTPdtPmtCDTmp>();

            try
            {
                aoPdtPmtCD = paoResPdtPmtCD.Select(oItem => new cmlTCNTPdtPmtCDTmp()
                {
                    FCPmcBuyAmt = Convert.ToDecimal(oItem.rcPmcBuyAmt),
                    FCPmcBuyMaxQty = Convert.ToDecimal(oItem.rcPmcBuyMaxQty),
                    FCPmcBuyMinQty = Convert.ToDecimal(oItem.rcPmcBuyMinQty),
                    FCPmcBuyQty = Convert.ToDecimal(oItem.rcPmcBuyQty),
                    FCPmcGetCond = Convert.ToDecimal(oItem.rcPmcGetCond),
                    FCPmcGetQty = Convert.ToDecimal(oItem.rcPmcGetQty),
                    FCPmcGetValue = Convert.ToDecimal(oItem.rcPmcGetValue),
                    FCPmcPerAvgDis = Convert.ToDecimal(oItem.rcPmcPerAvgDis),
                    FDPmcBuyMaxTime = oItem.rdPmcBuyMaxTime,
                    FDPmcBuyMinTime = oItem.rdPmcBuyMinTime,
                    FNPmcSeq = oItem.rnPmcSeq,
                    //FTPmcGrpCode = oItem.rtPmcGrpCode,
                    FTPmcGrpName = oItem.rtPmcGrpName,
                    FTPmcStaGrpCond = oItem.rtPmcStaGrpCond,
                    FTPmhCode = oItem.rtPmhCode,
                    FTSpmCode = oItem.rtSpmCode,
                    FTSpmStaAllPdt = oItem.rtSpmStaAllPdt,
                    FTSpmStaBuy = oItem.rtSpmStaBuy,
                    FTSpmStaRcv = oItem.rtSpmStaRcv,
                    FTBchCode = oItem.rtBchCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPmtCD : " + oEx.Message); }
            finally
            {
                paoResPdtPmtCD = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtPmtCD;
        }

        #endregion End Product Promotion

        #region Product Fashion

        /// <summary>
        /// Download Product Fashion
        /// </summary>
        /// <param name="poPdtFhn"></param>
        //private void C_DWNxPdtFashion(cmlResItemOfcmlResPdtFhnDwn poPdtFhn)
        private bool C_DWNbPdtFashion(cmlResItemOfcmlResPdtFhnDwn poPdtFhn)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtFhnTmp> aoPdtFhn;
            cDataReaderAdapter<cmlTCNMPdtFhnTmp> oPdtFhn;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtFhnTmp");
                //oSql.AppendLine("FROM TCNMPdtFhn WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtFhnTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtFhnTmp FROM TCNMPdtFhn with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtFhnTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtFhnTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtFhnTmp FROM TCNMPdtFhn with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtFhnTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtFhn' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtFhnTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtFhnTmp FROM TCNMPdtFhn with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtFhnTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtFhn
                aoPdtFhn = C_PRCaListPdtFhn(poPdtFhn.roItem.raPdt);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtFhn = new cDataReaderAdapter<cmlTCNMPdtFhnTmp>(aoPdtFhn);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtFhn.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtFhnTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtFhn);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtFashion : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE FHN ");
                oSql.AppendLine("FROM TCNMPdtFhn FHN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtFhnTmp FHNT WITH(NOLOCK) ON FHN.FTPdtCode = FHNT.FTPdtCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtFhn");
                oSql.AppendLine("SELECT * FROM TCNMPdtFhnTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtFhnTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtFashion : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtFashion : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtFhn = null;
                oSql = null;
                oTranscation = null;
                aoPdtFhn = null;
                oPdtFhn = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Fashion
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtFhnTmp> C_PRCaListPdtFhn(List<cmlResInfoPdtFhn> paoResPdtFhn)
        {
            List<cmlTCNMPdtFhnTmp> aoPdtFhn = new List<cmlTCNMPdtFhnTmp>();

            try
            {
                aoPdtFhn = paoResPdtFhn.Select(oItem => new cmlTCNMPdtFhnTmp()
                {
                    FTClrCode = oItem.rtClrCode,
                    FTClsCode = oItem.rtClsCode,
                    FTDcsCode = oItem.rtDcsCode,
                    FTDepCode = oItem.rtDepCode,
                    FTPdtArticle = oItem.rtPdtArticle,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPgpChain = oItem.rtPgpChain,
                    FTPszCode = oItem.rtPszCode,
                    FTSclCode = oItem.rtSclCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtFhn : " + oEx.Message); }
            finally
            {
                paoResPdtFhn = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtFhn;
        }

        #endregion End Product Fashion

        #region Product Fashion Season

        /// <summary>
        /// Download Product Fashion Season
        /// </summary>
        /// <param name="poPdtFSeason"></param>
        //private void C_DWNxPdtFSeason(cmlResItemOfcmlResPdtSeasonDwn poPdtFSeason)
        private bool C_DWNbPdtFSeason(cmlResItemOfcmlResPdtSeasonDwn poPdtFSeason)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtFSeasonTmp> aoPdtFSeason;
            List<cmlTCNMPdtFSeasonTmp_L> aoPdtFSeasonLng;
            cDataReaderAdapter<cmlTCNMPdtFSeasonTmp> oPdtFSeason;
            cDataReaderAdapter<cmlTCNMPdtFSeasonTmp_L> oPdtFSeasonLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtFSeasonTmp");
                //oSql.AppendLine("FROM TCNMPdtFSeason WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtFSeasonTmp_L");
                //oSql.AppendLine("FROM TCNMPdtFSeason_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtFSeasonTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtFSeasonTmp FROM TCNMPdtFSeason with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtFSeasonTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtFSeasonTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtFSeasonTmp_L FROM TCNMPdtFSeason_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtFSeasonTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtFSeasonTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtFSeasonTmp FROM TCNMPdtFSeason with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtFSeasonTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtFSeason' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtFSeasonTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtFSeasonTmp FROM TCNMPdtFSeason with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtFSeasonTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtFSeasonTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtFSeasonTmp_L FROM TCNMPdtFSeason_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtFSeasonTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtFSeason_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtFSeasonTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtFSeasonTmp_L FROM TCNMPdtFSeason_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtFSeasonTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtFSeason
                aoPdtFSeason = C_PRCaListPdtFSeason(poPdtFSeason.roItem.raPdtSeason);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtFSeason = new cDataReaderAdapter<cmlTCNMPdtFSeasonTmp>(aoPdtFSeason);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtFSeason.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtFSeasonTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtFSeason);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtFSeason : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtFSeason_L
                aoPdtFSeasonLng = C_PRCaListPdtFSeasonLng(poPdtFSeason.roItem.raPdtSeasonLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtFSeasonLng = new cDataReaderAdapter<cmlTCNMPdtFSeasonTmp_L>(aoPdtFSeasonLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtFSeasonLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtFSeasonTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtFSeasonLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtFSeason : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PGP ");
                oSql.AppendLine("FROM TCNMPdtFSeason PGP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtFSeasonTmp PGPT WITH(NOLOCK) ON PGP.FTPgpCode = PGPT.FTPgpCode");
                oSql.AppendLine("   AND PGP.FNPgpLevel = PGPT.FNPgpLevel");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtFSeason");
                oSql.AppendLine("SELECT * FROM TCNMPdtFSeasonTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtFSeasonTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE PGPL ");
                oSql.AppendLine("FROM TCNMPdtFSeason_L PGPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtFSeasonTmp_L PGPLT WITH(NOLOCK) ON PGPL.FTPgpCode = PGPLT.FTPgpCode");
                oSql.AppendLine("   AND PGPL.FNPgpLevel = PGPLT.FNPgpLevel");
                oSql.AppendLine("   AND PGPL.FNLngID = PGPLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtFSeason_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtFSeasonTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtFSeasonTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtFSeason : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtFSeason : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtFSeason = null;
                oSql = null;
                oTranscation = null;
                aoPdtFSeason = null;
                aoPdtFSeasonLng = null;
                oPdtFSeason = null;
                oPdtFSeasonLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Fashion Season
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtFSeasonTmp> C_PRCaListPdtFSeason(List<cmlResInfoPdtSeason> paoResPdtFSeason)
        {
            List<cmlTCNMPdtFSeasonTmp> aoPdtFSeason = new List<cmlTCNMPdtFSeasonTmp>();

            try
            {
                aoPdtFSeason = paoResPdtFSeason.Select(oItem => new cmlTCNMPdtFSeasonTmp()
                {
                    FTPgpCode = oItem.rtPgpCode,
                    FNPgpLevel = oItem.rnPgpLevel,
                    FTPgpChain = oItem.rtPgpChain,
                    FTPgpParent = oItem.rtPgpParent,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtFSeason : " + oEx.Message); }
            finally
            {
                paoResPdtFSeason = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtFSeason;
        }

        /// <summary>
        /// Process list Product Fashion Season Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtFSeasonTmp_L> C_PRCaListPdtFSeasonLng(List<cmlResInfoPdtSeasonLng> paoResPdtFSeasonLng)
        {
            List<cmlTCNMPdtFSeasonTmp_L> aoPdtFSeason = new List<cmlTCNMPdtFSeasonTmp_L>();

            try
            {
                aoPdtFSeason = paoResPdtFSeasonLng.Select(oItem => new cmlTCNMPdtFSeasonTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FNPgpLevel = oItem.rnPgpLevel,
                    FTPgpCode = oItem.rtPgpCode,
                    FTPgpName = oItem.rtPgpName,
                    FTPgpRmk = oItem.rtPgpRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtFSeasonLng : " + oEx.Message); }
            finally
            {
                paoResPdtFSeasonLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtFSeason;
        }

        #endregion End Product Fashion Season

        #region Product Fashion DCS

        /// <summary>
        /// Download Product Fashion DCS
        /// </summary>
        /// <param name="poPdtF0DCS"></param>
        //private void C_DWNxPdtF0DCS(cmlResItemOfcmlResPdtDCSDwn poPdtF0DCS)
        private bool C_DWNbPdtF0DCS(cmlResItemOfcmlResPdtDCSDwn poPdtF0DCS)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtF0DCSTmp> aoPdtF0DCS;
            List<cmlTCNMPdtF0DCSTmp_L> aoPdtF0DCSLng;
            cDataReaderAdapter<cmlTCNMPdtF0DCSTmp> oPdtF0DCS;
            cDataReaderAdapter<cmlTCNMPdtF0DCSTmp_L> oPdtF0DCSLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtF0DCSTmp");
                //oSql.AppendLine("FROM TCNMPdtF0DCS WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtF0DCSTmp_L");
                //oSql.AppendLine("FROM TCNMPdtF0DCS_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF0DCSTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtF0DCSTmp FROM TCNMPdtF0DCS with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtF0DCSTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF0DCSTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtF0DCSTmp_L FROM TCNMPdtF0DCS_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtF0DCSTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF0DCSTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtF0DCSTmp FROM TCNMPdtF0DCS with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF0DCSTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF0DCS' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtF0DCSTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtF0DCSTmp FROM TCNMPdtF0DCS with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtF0DCSTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF0DCSTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtF0DCSTmp_L FROM TCNMPdtF0DCS_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF0DCSTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF0DCS_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtF0DCSTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtF0DCSTmp_L FROM TCNMPdtF0DCS_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtF0DCSTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtF0DCS
                aoPdtF0DCS = C_PRCaListPdtF0DCS(poPdtF0DCS.roItem.raPdtDCS);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtF0DCS = new cDataReaderAdapter<cmlTCNMPdtF0DCSTmp>(aoPdtF0DCS);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtF0DCS.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtF0DCSTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtF0DCS);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtF0DCS : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtF0DCS_L
                aoPdtF0DCSLng = C_PRCaListPdtF0DCSLng(poPdtF0DCS.roItem.raPdtDCSLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtF0DCSLng = new cDataReaderAdapter<cmlTCNMPdtF0DCSTmp_L>(aoPdtF0DCSLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtF0DCSLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtF0DCSTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtF0DCSLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtF0DCS : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE DCS ");
                oSql.AppendLine("FROM TCNMPdtF0DCS DCS WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtF0DCSTmp DCST WITH(NOLOCK) ON DCS.FTDcsCode = DCST.FTDcsCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtF0DCS");
                oSql.AppendLine("SELECT * FROM TCNMPdtF0DCSTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtF0DCSTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE DCSL ");
                oSql.AppendLine("FROM TCNMPdtF0DCS_L DCSL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtF0DCSTmp_L DCSLT WITH(NOLOCK) ON DCSL.FTDcsCode = DCSLT.FTDcsCode");
                oSql.AppendLine("   AND DCSL.FNLngID = DCSLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtF0DCS_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtF0DCSTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtF0DCSTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtF0DCS : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtF0DCS : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poPdtF0DCS = null;
                oSql = null;
                oTranscation = null;
                aoPdtF0DCS = null;
                aoPdtF0DCSLng = null;
                oPdtF0DCS = null;
                oPdtF0DCSLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Fashion DCS
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtF0DCSTmp> C_PRCaListPdtF0DCS(List<cmlResInfoPdtDCS> paoResPdtF0DCS)
        {
            List<cmlTCNMPdtF0DCSTmp> aoPdtF0DCS = new List<cmlTCNMPdtF0DCSTmp>();

            try
            {
                aoPdtF0DCS = paoResPdtF0DCS.Select(oItem => new cmlTCNMPdtF0DCSTmp()
                {
                    FTClsCode = oItem.rtClsCode,
                    FTDcsCode = oItem.rtDcsCode,
                    FTDepCode = oItem.rtDepCode,
                    FTSclCode = oItem.rtSclCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtF0DCS : " + oEx.Message); }
            finally
            {
                paoResPdtF0DCS = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtF0DCS;
        }

        /// <summary>
        /// Process list Product Fashion DCS Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtF0DCSTmp_L> C_PRCaListPdtF0DCSLng(List<cmlResInfoPdtDCSLng> paoResPdtF0DCSLng)
        {
            List<cmlTCNMPdtF0DCSTmp_L> aoPdtF0DCS = new List<cmlTCNMPdtF0DCSTmp_L>();

            try
            {
                aoPdtF0DCS = paoResPdtF0DCSLng.Select(oItem => new cmlTCNMPdtF0DCSTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTDcsCode = oItem.rtDcsCode,
                    FTDcsName = oItem.rtDcsName,
                    FTDcsRmk = oItem.rtDcsRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtF0DCSLng : " + oEx.Message); }
            finally
            {
                paoResPdtF0DCSLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtF0DCS;
        }

        #endregion End Product Fashion DCS

        #region Product Fashion Depart

        /// <summary>
        /// Download Product Fashion Depart
        /// </summary>
        /// <param name="poPdtF1Depart"></param>
        //private void C_DWNxPdtF1Depart(cmlResItemOfcmlResPdtDepartDwn poPdtF1Depart)
        private bool C_DWNbPdtF1Depart(cmlResItemOfcmlResPdtDepartDwn poPdtF1Depart)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtF1DepartTmp> aoPdtF1Depart;
            List<cmlTCNMPdtF1DepartTmp_L> aoPdtF1DepartLng;
            cDataReaderAdapter<cmlTCNMPdtF1DepartTmp> oPdtF1Depart;
            cDataReaderAdapter<cmlTCNMPdtF1DepartTmp_L> oPdtF1DepartLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtF1DepartTmp");
                //oSql.AppendLine("FROM TCNMPdtF1Depart WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtF1DepartTmp_L");
                //oSql.AppendLine("FROM TCNMPdtF1Depart_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF1DepartTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtF1DepartTmp FROM TCNMPdtF1Depart with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtF1DepartTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF1DepartTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtF1DepartTmp_L FROM TCNMPdtF1Depart_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtF1DepartTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF1DepartTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtF1DepartTmp FROM TCNMPdtF1Depart with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF1DepartTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF1Depart' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtF1DepartTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtF1DepartTmp FROM TCNMPdtF1Depart with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtF1DepartTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF1DepartTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtF1DepartTmp_L FROM TCNMPdtF1Depart_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF1DepartTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF1Depart_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtF1DepartTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtF1DepartTmp_L FROM TCNMPdtF1Depart_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtF1DepartTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtF1Depart
                aoPdtF1Depart = C_PRCaListPdtF1Depart(poPdtF1Depart.roItem.raPdtDepart);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtF1Depart = new cDataReaderAdapter<cmlTCNMPdtF1DepartTmp>(aoPdtF1Depart);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtF1Depart.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtF1DepartTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtF1Depart);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF1Depart : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtF1Depart_L
                aoPdtF1DepartLng = C_PRCaListPdtF1DepartLng(poPdtF1Depart.roItem.raPdtDepartLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtF1DepartLng = new cDataReaderAdapter<cmlTCNMPdtF1DepartTmp_L>(aoPdtF1DepartLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtF1DepartLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtF1DepartTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtF1DepartLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF1Depart : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE DEP ");
                oSql.AppendLine("FROM TCNMPdtF1Depart DEP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtF1DepartTmp DEPT WITH(NOLOCK) ON DEP.FTDepCode = DEPT.FTDepCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtF1Depart");
                oSql.AppendLine("SELECT * FROM TCNMPdtF1DepartTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtF1DepartTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE DEPL ");
                oSql.AppendLine("FROM TCNMPdtF1Depart_L DEPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtF1DepartTmp_L DEPLT WITH(NOLOCK) ON DEPL.FTDepCode = DEPLT.FTDepCode");
                oSql.AppendLine("   AND DEPL.FNLngID = DEPLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtF1Depart_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtF1DepartTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtF1DepartTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtF1Depart : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF1Depart : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtF1Depart = null;
                oSql = null;
                oTranscation = null;
                aoPdtF1Depart = null;
                aoPdtF1DepartLng = null;
                oPdtF1Depart = null;
                oPdtF1DepartLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Fashion Depart
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtF1DepartTmp> C_PRCaListPdtF1Depart(List<cmlResInfoPdtDepart> paoResPdtF1Depart)
        {
            List<cmlTCNMPdtF1DepartTmp> aoPdtF1Depart = new List<cmlTCNMPdtF1DepartTmp>();

            try
            {
                aoPdtF1Depart = paoResPdtF1Depart.Select(oItem => new cmlTCNMPdtF1DepartTmp()
                {
                    FTDepCode = oItem.rtDepCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtF1Depart : " + oEx.Message); }
            finally
            {
                paoResPdtF1Depart = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtF1Depart;
        }

        /// <summary>
        /// Process list Product Fashion Depart Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtF1DepartTmp_L> C_PRCaListPdtF1DepartLng(List<cmlResInfoPdtDepartLng> paoResPdtF1DepartLng)
        {
            List<cmlTCNMPdtF1DepartTmp_L> aoPdtF1Depart = new List<cmlTCNMPdtF1DepartTmp_L>();

            try
            {
                aoPdtF1Depart = paoResPdtF1DepartLng.Select(oItem => new cmlTCNMPdtF1DepartTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTDepCode = oItem.rtDepCode,
                    FTDepName = oItem.rtDepName,
                    FTDepRmk = oItem.rtDepRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtF1DepartLng : " + oEx.Message); }
            finally
            {
                paoResPdtF1DepartLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtF1Depart;
        }

        #endregion End Product Fashion Depart

        #region Product Fashion Class

        /// <summary>
        /// Download Product Fashion Class
        /// </summary>
        /// <param name="poPdtF2Class"></param>
        //private void C_DWNxPdtF2Class(cmlResItemOfcmlResPdtClassDwn poPdtF2Class)
        private bool C_DWNbPdtF2Class(cmlResItemOfcmlResPdtClassDwn poPdtF2Class)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtF2ClassTmp> aoPdtF2Class;
            List<cmlTCNMPdtF2ClassTmp_L> aoPdtF2ClassLng;
            cDataReaderAdapter<cmlTCNMPdtF2ClassTmp> oPdtF2Class;
            cDataReaderAdapter<cmlTCNMPdtF2ClassTmp_L> oPdtF2ClassLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtF2ClassTmp");
                //oSql.AppendLine("FROM TCNMPdtF2Class WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtF2ClassTmp_L");
                //oSql.AppendLine("FROM TCNMPdtF2Class_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF2ClassTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtF2ClassTmp FROM TCNMPdtF2Class with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtF2ClassTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF2ClassTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtF2ClassTmp_L FROM TCNMPdtF2Class_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtF2ClassTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF2ClassTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtF2ClassTmp FROM TCNMPdtF2Class with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF2ClassTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF2Class' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtF2ClassTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtF2ClassTmp FROM TCNMPdtF2Class with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtF2ClassTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF2ClassTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtF2ClassTmp_L FROM TCNMPdtF2Class_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF2ClassTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF2Class_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtF2ClassTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtF2ClassTmp_L FROM TCNMPdtF2Class_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtF2ClassTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtF2Class
                aoPdtF2Class = C_PRCaListPdtF2Class(poPdtF2Class.roItem.raPdtClass);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtF2Class = new cDataReaderAdapter<cmlTCNMPdtF2ClassTmp>(aoPdtF2Class);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtF2Class.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtF2ClassTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtF2Class);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF2Class : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtF2Class_L
                aoPdtF2ClassLng = C_PRCaListPdtF2ClassLng(poPdtF2Class.roItem.raPdtClassLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtF2ClassLng = new cDataReaderAdapter<cmlTCNMPdtF2ClassTmp_L>(aoPdtF2ClassLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtF2ClassLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtF2ClassTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtF2ClassLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF2Class : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CLS ");
                oSql.AppendLine("FROM TCNMPdtF2Class CLS WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtF2ClassTmp CLST WITH(NOLOCK) ON CLS.FTClsCode = CLST.FTClsCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtF2Class");
                oSql.AppendLine("SELECT * FROM TCNMPdtF2ClassTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtF2ClassTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CLSL ");
                oSql.AppendLine("FROM TCNMPdtF2Class_L CLSL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtF2ClassTmp_L CLSLT WITH(NOLOCK) ON CLSL.FTClsCode = CLSLT.FTClsCode");
                oSql.AppendLine("   AND CLSL.FNLngID = CLSLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtF2Class_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtF2ClassTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtF2ClassTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtF2Class : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF2Class : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtF2Class = null;
                oSql = null;
                oTranscation = null;
                aoPdtF2Class = null;
                aoPdtF2ClassLng = null;
                oPdtF2Class = null;
                oPdtF2ClassLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Fashion Class
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtF2ClassTmp> C_PRCaListPdtF2Class(List<cmlResInfoPdtClass> paoResPdtF2Class)
        {
            List<cmlTCNMPdtF2ClassTmp> aoPdtF2Class = new List<cmlTCNMPdtF2ClassTmp>();

            try
            {
                aoPdtF2Class = paoResPdtF2Class.Select(oItem => new cmlTCNMPdtF2ClassTmp()
                {
                    FTClsCode = oItem.rtClsCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtF2Class : " + oEx.Message); }
            finally
            {
                paoResPdtF2Class = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtF2Class;
        }

        /// <summary>
        /// Process list Product Fashion Class Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtF2ClassTmp_L> C_PRCaListPdtF2ClassLng(List<cmlResInfoPdtClassLng> paoResPdtF2ClassLng)
        {
            List<cmlTCNMPdtF2ClassTmp_L> aoPdtF2Class = new List<cmlTCNMPdtF2ClassTmp_L>();

            try
            {
                aoPdtF2Class = paoResPdtF2ClassLng.Select(oItem => new cmlTCNMPdtF2ClassTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTClsCode = oItem.rtClsCode,
                    FTClsName = oItem.rtClsName,
                    FTClsRmk = oItem.rtClsRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtF2ClassLng : " + oEx.Message); }
            finally
            {
                paoResPdtF2ClassLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtF2Class;
        }

        #endregion End Product Fashion Class

        #region Product Fashion SubClass

        /// <summary>
        /// Download Product Fashion SubClass
        /// </summary>
        /// <param name="poPdtF3SubClass"></param>
        //private void C_DWNxPdtF3SubClass(cmlResItemOfcmlResPdtSubClassDwn poPdtF3SubClass)
        private bool C_DWNbPdtF3SubClass(cmlResItemOfcmlResPdtSubClassDwn poPdtF3SubClass)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtF3SubClassTmp> aoPdtF3SubClass;
            List<cmlTCNMPdtF3SubClassTmp_L> aoPdtF3SubClassLng;
            cDataReaderAdapter<cmlTCNMPdtF3SubClassTmp> oPdtF3SubClass;
            cDataReaderAdapter<cmlTCNMPdtF3SubClassTmp_L> oPdtF3SubClassLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtF3SubClassTmp");
                //oSql.AppendLine("FROM TCNMPdtF3SubClass WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMPdtF3SubClassTmp_L");
                //oSql.AppendLine("FROM TCNMPdtF3SubClass_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF3SubClassTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtF3SubClassTmp FROM TCNMPdtF3SubClass with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtF3SubClassTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF3SubClassTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMPdtF3SubClassTmp_L FROM TCNMPdtF3SubClass_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMPdtF3SubClassTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF3SubClassTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtF3SubClassTmp FROM TCNMPdtF3SubClass with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF3SubClassTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF3SubClass' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtF3SubClassTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtF3SubClassTmp FROM TCNMPdtF3SubClass with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtF3SubClassTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtF3SubClassTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMPdtF3SubClassTmp_L FROM TCNMPdtF3SubClass_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF3SubClassTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtF3SubClass_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMPdtF3SubClassTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMPdtF3SubClassTmp_L FROM TCNMPdtF3SubClass_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtF3SubClassTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMPdtF3SubClass
                aoPdtF3SubClass = C_PRCaListPdtF3SubClass(poPdtF3SubClass.roItem.raPdtSubClass);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtF3SubClass = new cDataReaderAdapter<cmlTCNMPdtF3SubClassTmp>(aoPdtF3SubClass);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtF3SubClass.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtF3SubClassTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtF3SubClass);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF3SubClass : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMPdtF3SubClass_L
                aoPdtF3SubClassLng = C_PRCaListPdtF3SubClassLng(poPdtF3SubClass.roItem.raPdtSubClassLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtF3SubClassLng = new cDataReaderAdapter<cmlTCNMPdtF3SubClassTmp_L>(aoPdtF3SubClassLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oPdtF3SubClassLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtF3SubClassTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtF3SubClassLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF3SubClass : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SCL ");
                oSql.AppendLine("FROM TCNMPdtF3SubClass SCL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtF3SubClassTmp SCLT WITH(NOLOCK) ON SCL.FTSclCode = SCLT.FTSclCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtF3SubClass");
                oSql.AppendLine("SELECT * FROM TCNMPdtF3SubClassTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtF3SubClassTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SCLL ");
                oSql.AppendLine("FROM TCNMPdtF3SubClass_L SCLL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMPdtF3SubClassTmp_L SCLLT WITH(NOLOCK) ON SCLL.FTSclCode = SCLLT.FTSclCode");
                oSql.AppendLine("   AND SCLL.FNLngID = SCLLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMPdtF3SubClass_L");
                oSql.AppendLine("SELECT * FROM TCNMPdtF3SubClassTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMPdtF3SubClassTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtF3SubClass : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtF3SubClass : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poPdtF3SubClass = null;
                oSql = null;
                oTranscation = null;
                aoPdtF3SubClass = null;
                aoPdtF3SubClassLng = null;
                oPdtF3SubClass = null;
                oPdtF3SubClassLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Product Fashion SubClass
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtF3SubClassTmp> C_PRCaListPdtF3SubClass(List<cmlResInfoPdtSubClass> paoResPdtF3SubClass)
        {
            List<cmlTCNMPdtF3SubClassTmp> aoPdtF3SubClass = new List<cmlTCNMPdtF3SubClassTmp>();

            try
            {
                aoPdtF3SubClass = paoResPdtF3SubClass.Select(oItem => new cmlTCNMPdtF3SubClassTmp()
                {
                    FTSclCode = oItem.rtSclCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtF3SubClass : " + oEx.Message); }
            finally
            {
                paoResPdtF3SubClass = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtF3SubClass;
        }

        /// <summary>
        /// Process list Product Fashion SubClass Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMPdtF3SubClassTmp_L> C_PRCaListPdtF3SubClassLng(List<cmlResInfoPdtSubClassLng> paoResPdtF3SubClassLng)
        {
            List<cmlTCNMPdtF3SubClassTmp_L> aoPdtF3SubClass = new List<cmlTCNMPdtF3SubClassTmp_L>();

            try
            {
                aoPdtF3SubClass = paoResPdtF3SubClassLng.Select(oItem => new cmlTCNMPdtF3SubClassTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSclCode = oItem.rtSclCode,
                    FTSclName = oItem.rtSclName,
                    FTSclRmk = oItem.rtSclRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtF3SubClassLng : " + oEx.Message); }
            finally
            {
                paoResPdtF3SubClassLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPdtF3SubClass;
        }

        #endregion End Product Fashion SubClass

        #region Supplier

        /// <summary>
        /// Download Supplier
        /// </summary>
        /// <param name="poSpl"></param>
        //private void C_DWNxSupplier(cmlResItemOfcmlResSplItemDwn poSpl)
        private bool C_DWNbSupplier(cmlResItemOfcmlResSplItemDwn poSpl)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSplTmp> aoSpl;
            List<cmlTCNMSplTmp_L> aoSplLng;
            List<cmlTCNMSplCardTmp> aoSplCard;
            List<cmlTCNMSplCreditTmp> aoSplCredit;
            cDataReaderAdapter<cmlTCNMSplTmp> oSpl;
            cDataReaderAdapter<cmlTCNMSplTmp_L> oSplLng;
            cDataReaderAdapter<cmlTCNMSplCardTmp> oSplCard;
            cDataReaderAdapter<cmlTCNMSplCreditTmp> oSplCredit;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplTmp");
                //oSql.AppendLine("FROM TCNMSpl WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplTmp_L");
                //oSql.AppendLine("FROM TCNMSpl_L WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplCardTmp");
                //oSql.AppendLine("FROM TCNMSplCard WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplCreditTmp");
                //oSql.AppendLine("FROM TCNMSplCredit WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplTmp FROM TCNMSpl with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplTmp_L FROM TCNMSpl_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplTmp_L");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplCardTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplCardTmp FROM TCNMSplCard with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplCardTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplCreditTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplCreditTmp FROM TCNMSplCredit with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplCreditTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplTmp FROM TCNMSpl with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSpl' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplTmp FROM TCNMSpl with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplTmp_L FROM TCNMSpl_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSpl_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplTmp_L FROM TCNMSpl_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplTmp_L");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplCardTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplCardTmp FROM TCNMSplCard with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplCardTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplCard' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplCardTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplCardTmp FROM TCNMSplCard with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplCardTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplCreditTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplCreditTmp FROM TCNMSplCredit with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplCreditTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplCredit' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplCreditTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplCreditTmp FROM TCNMSplCredit with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplCreditTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++


                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSpl
                aoSpl = C_PRCaListSupplier(poSpl.roItem.raSpl);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSpl = new cDataReaderAdapter<cmlTCNMSplTmp>(aoSpl);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSpl.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSpl);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSupplier : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSpl_L
                aoSplLng = C_PRCaListSupplierLng(poSpl.roItem.raSplLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplLng = new cDataReaderAdapter<cmlTCNMSplTmp_L>(aoSplLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSplLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSupplier : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSplCard
                aoSplCard = C_PRCaListSupplierCard(poSpl.roItem.raSplCard);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplCard = new cDataReaderAdapter<cmlTCNMSplCardTmp>(aoSplCard);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSplCard.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplCardTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplCard);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSupplier : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSplCredit
                aoSplCredit = C_PRCaListSupplierCredit(poSpl.roItem.raSplCredit);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplCredit = new cDataReaderAdapter<cmlTCNMSplCreditTmp>(aoSplCredit);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSplCredit.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplCreditTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplCredit);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSupplier : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                // TCNMSpl
                oSql.AppendLine("DELETE SPL ");
                oSql.AppendLine("FROM TCNMSpl SPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplTmp SPLT WITH(NOLOCK) ON SPL.FTSplCode = SPLT.FTSplCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSpl");
                oSql.AppendLine("SELECT * FROM TCNMSplTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplTmp");
                oSql.AppendLine();
                // TCNMSpl_L
                oSql.AppendLine("DELETE SPLL ");
                oSql.AppendLine("FROM TCNMSpl_L SPLL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplTmp_L SPLLT WITH(NOLOCK) ON SPLL.FTSplCode = SPLLT.FTSplCode");
                oSql.AppendLine("   AND SPLL.FNLngID = SPLLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSpl_L");
                oSql.AppendLine("SELECT * FROM TCNMSplTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplTmp_L");
                oSql.AppendLine();
                // TCNMSplCard
                oSql.AppendLine("DELETE CRD ");
                oSql.AppendLine("FROM TCNMSplCard CRD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplCardTmp CRDT WITH(NOLOCK) ON CRD.FTSplCode = CRDT.FTSplCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplCard");
                oSql.AppendLine("SELECT * FROM TCNMSplCardTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplCardTmp");
                oSql.AppendLine();
                // TCNMSplCredit
                oSql.AppendLine("DELETE CDT ");
                oSql.AppendLine("FROM TCNMSplCredit CDT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplCreditTmp CDTT WITH(NOLOCK) ON CDT.FTSplCode = CDTT.FTSplCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplCredit");
                oSql.AppendLine("SELECT * FROM TCNMSplCreditTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplCreditTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSupplier : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSupplier : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSpl = null;
                oSql = null;
                oTranscation = null;
                aoSpl = null;
                aoSplLng = null;
                oSpl = null;
                oSplLng = null;
                aoSplCard = null;
                aoSplCredit = null;
                oSplCard = null;
                oSplCredit = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Supplier
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplTmp> C_PRCaListSupplier(List<cmlResInfoSpl> paoResSpl)
        {
            List<cmlTCNMSplTmp> aoSpl = new List<cmlTCNMSplTmp>();

            try
            {
                aoSpl = paoResSpl.Select(oItem => new cmlTCNMSplTmp()
                {
                    FDSplDob = oItem.rdSplDob,
                    FTSgpCode = oItem.rtSgpCode,
                    FTSlvCode = oItem.rtSlvCode,
                    FTSplBchCode = oItem.rtSplBchCode,
                    FTSplBusiness = oItem.rtSplBusiness,
                    FTSplCode = oItem.rtSplCode,
                    FTSplDiscBillNet = oItem.rtSplDiscBillNet,
                    FTSplDiscBillRet = oItem.rtSplDiscBillRet,
                    FTSplDiscBillWhs = oItem.rtSplDiscBillWhs,
                    FTSplEmail = oItem.rtSplEmail,
                    FTSplFax = oItem.rtSplFax,
                    FTSplSex = oItem.rtSplSex,
                    FTSplStaActive = oItem.rtSplStaActive,
                    FTSplStaBchOrHQ = oItem.rtSplStaBchOrHQ,
                    FTSplStaVATInOrEx = oItem.rtSplStaVATInOrEx,
                    FTSplTel = oItem.rtSplTel,
                    FTStyCode = oItem.rtStyCode,
                    FTUsrCode = oItem.rtUsrCode,
                    FTVatCode = oItem.rtVatCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSupplier : " + oEx.Message); }
            finally
            {
                paoResSpl = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSpl;
        }

        /// <summary>
        /// Process list Supplier Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplTmp_L> C_PRCaListSupplierLng(List<cmlResInfoSplLng> paoResSplLng)
        {
            List<cmlTCNMSplTmp_L> aoSpl = new List<cmlTCNMSplTmp_L>();

            try
            {
                aoSpl = paoResSplLng.Select(oItem => new cmlTCNMSplTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSplBillRmk = oItem.rtSplBillRmk,
                    FTSplCode = oItem.rtSplCode,
                    FTSplName = oItem.rtSplName,
                    FTSplNameOth = oItem.rtSplNameOth,
                    FTSplPayRmk = oItem.rtSplPayRmk,
                    FTSplRmk = oItem.rtSplRmk,
                    FTSplViaRmk = oItem.rtSplViaRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSupplierLng : " + oEx.Message); }
            finally
            {
                paoResSplLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSpl;
        }

        /// <summary>
        /// Process list Supplier Card
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplCardTmp> C_PRCaListSupplierCard(List<cmlResInfoSplCard> paoResSpl)
        {
            List<cmlTCNMSplCardTmp> aoSpl = new List<cmlTCNMSplCardTmp>();

            try
            {
                aoSpl = paoResSpl.Select(oItem => new cmlTCNMSplCardTmp()
                {
                    FDSplApply = oItem.rdSplApply,
                    FDSplCrdExpire = oItem.rdSplCrdExpire,
                    FDSplCrdIssue = oItem.rdSplCrdIssue,
                    FTSplCode = oItem.rtSplCode,
                    FTSplRefExCrdNo = oItem.rtSplRefExCrdNo,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSupplierCard : " + oEx.Message); }
            finally
            {
                paoResSpl = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSpl;
        }

        /// <summary>
        /// Process list Supplier Credit
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplCreditTmp> C_PRCaListSupplierCredit(List<cmlResInfoSplCredit> paoResSpl)
        {
            List<cmlTCNMSplCreditTmp> aoSpl = new List<cmlTCNMSplCreditTmp>();

            try
            {
                aoSpl = paoResSpl.Select(oItem => new cmlTCNMSplCreditTmp()
                {
                    FTSplCode = oItem.rtSplCode,
                    FCSplCrLimit = oItem.rcSplCrLimit,
                    FCSplLeadTime = oItem.rcSplLeadTime,
                    FDSplLastCta = oItem.rdSplLastCta,
                    FDSplLastPay = oItem.rdSplLastPay,
                    FNSplCrTerm = oItem.rnSplCrTerm,
                    FNSplLimitRow = oItem.rnSplLimitRow,
                    FTSplDayCta = oItem.rtSplDayCta,
                    FTSplTspPaid = oItem.rtSplTspPaid,
                    FTSplViaRmk = oItem.rtSplViaRmk,
                    FTViaCode = oItem.rtViaCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSupplierCredit : " + oEx.Message); }
            finally
            {
                paoResSpl = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSpl;
        }

        #endregion End Supplier

        #region Supplier Contact

        /// <summary>
        /// Download Supplier Contact
        /// </summary>
        /// <param name="poSplContact"></param>
        //private void C_DWNxSplContact(cmlResListOfcmlResSplContactDwn poSplContact)
        private bool C_DWNbSplContact(cmlResListOfcmlResSplContactDwn poSplContact)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSplContactTmp_L> aoSplCnt;
            cDataReaderAdapter<cmlTCNMSplContactTmp_L> oSplCnt;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplContactTmp_L");
                //oSql.AppendLine("FROM TCNMSplContact_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplContactTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplContactTmp_L FROM TCNMSplContact_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplContactTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplContactTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplContactTmp_L FROM TCNMSplContact_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplContactTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplContact_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplContactTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplContactTmp_L FROM TCNMSplContact_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplContactTmp_L");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSplContact_L
                aoSplCnt = C_PRCaListSplContactLng(poSplContact.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplCnt = new cDataReaderAdapter<cmlTCNMSplContactTmp_L>(aoSplCnt);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSplCnt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplContactTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplCnt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSplContact : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CTR ");
                oSql.AppendLine("FROM TCNMSplContact_L CTR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplContactTmp_L CTRT WITH(NOLOCK) ON CTR.FTSplCode = CTRT.FTSplCode");
                oSql.AppendLine("   AND CTR.FNLngID = CTRT.FNLngID");
                oSql.AppendLine("   AND CTR.FNCtrSeq = CTRT.FNCtrSeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplContact_L");
                oSql.AppendLine("(FTSplCode, FNLngID, FTCtrName, FTCtrFax, FTCtrTel, FTCtrEmail, FTCtrRmk, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTSplCode, FNLngID, FTCtrName, FTCtrFax, FTCtrTel, FTCtrEmail, FTCtrRmk, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy");
                oSql.AppendLine("FROM TCNMSplContactTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("DROP TABLE TCNMSplContactTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSplContact : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSplContact : " + oEx.Message);
                return false;
            }
            //++++++++++++
            finally
            {
                poSplContact = null;
                oSql = null;
                oTranscation = null;
                aoSplCnt = null;
                oSplCnt = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Supplier Contact Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplContactTmp_L> C_PRCaListSplContactLng(List<cmlResSplContactDwn> paoResSpl)
        {
            List<cmlTCNMSplContactTmp_L> aoSpl = new List<cmlTCNMSplContactTmp_L>();

            try
            {
                aoSpl = paoResSpl.Select(oItem => new cmlTCNMSplContactTmp_L()
                {
                    FNCtrSeq = oItem.rnCtrSeq,
                    FNLngID = oItem.rnLngID,
                    FTCtrEmail = oItem.rtCtrEmail,
                    FTCtrFax = oItem.rtCtrFax,
                    FTCtrName = oItem.rtCtrName,
                    FTCtrRmk = oItem.rtCtrRmk,
                    FTCtrTel = oItem.rtCtrTel,
                    FTSplCode = oItem.rtSplCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSplContactLng : " + oEx.Message); }
            finally
            {
                paoResSpl = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSpl;
        }

        #endregion End Supplier Contact

        #region Supplier Group

        /// <summary>
        /// Download Supplier Group
        /// </summary>
        /// <param name="poSplGrp"></param>
        //private void C_DWNxSplGrp(cmlResItemOfcmlResSplGrpDwn poSplGrp)
        private bool C_DWNbSplGrp(cmlResItemOfcmlResSplGrpDwn poSplGrp)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSplGrpTmp> aoSplGrp;
            List<cmlTCNMSplGrpTmp_L> aoSplGrpLng;
            cDataReaderAdapter<cmlTCNMSplGrpTmp> oSplGrp;
            cDataReaderAdapter<cmlTCNMSplGrpTmp_L> oSplGrpLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplGrpTmp");
                //oSql.AppendLine("FROM TCNMSplGrp WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplGrpTmp_L");
                //oSql.AppendLine("FROM TCNMSplGrp_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplGrpTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplGrpTmp FROM TCNMSplGrp with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplGrpTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplGrpTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplGrpTmp_L FROM TCNMSplGrp_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplGrpTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplGrpTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplGrpTmp FROM TCNMSplGrp with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplGrpTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplGrp' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplGrpTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplGrpTmp FROM TCNMSplGrp with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplGrpTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplGrpTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplGrpTmp_L FROM TCNMSplGrp_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplGrpTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplGrp_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplGrpTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplGrpTmp_L FROM TCNMSplGrp_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplGrpTmp_L");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSplGrp
                aoSplGrp = C_PRCaListSplGrp(poSplGrp.roItem.raSplGrp);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplGrp = new cDataReaderAdapter<cmlTCNMSplGrpTmp>(aoSplGrp);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSplGrp.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplGrpTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplGrp);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSplGrp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSplGrp_L
                aoSplGrpLng = C_PRCaListSplGrpLng(poSplGrp.roItem.raSplGrpLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplGrpLng = new cDataReaderAdapter<cmlTCNMSplGrpTmp_L>(aoSplGrpLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSplGrpLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplGrpTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplGrpLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSplGrp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SGP ");
                oSql.AppendLine("FROM TCNMSplGrp SGP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplGrpTmp SGPT WITH(NOLOCK) ON SGP.FTSgpCode = SGPT.FTSgpCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplGrp");
                oSql.AppendLine("SELECT * FROM TCNMSplGrpTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplGrpTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SGPL ");
                oSql.AppendLine("FROM TCNMSplGrp_L SGPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplGrpTmp_L SGPLT WITH(NOLOCK) ON SGPL.FTSgpCode = SGPLT.FTSgpCode");
                oSql.AppendLine("   AND SGPL.FNLngID = SGPLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplGrp_L");
                oSql.AppendLine("SELECT * FROM TCNMSplGrpTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplGrpTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSplGrp : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSplGrp : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSplGrp = null;
                oSql = null;
                oTranscation = null;
                aoSplGrp = null;
                aoSplGrpLng = null;
                oSplGrp = null;
                oSplGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Supplier Group
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplGrpTmp> C_PRCaListSplGrp(List<cmlResInfoSplGrp> paoResSplGrp)
        {
            List<cmlTCNMSplGrpTmp> aoSplGrp = new List<cmlTCNMSplGrpTmp>();

            try
            {
                aoSplGrp = paoResSplGrp.Select(oItem => new cmlTCNMSplGrpTmp()
                {
                    FTSgpCode = oItem.rtSgpCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSplGrp : " + oEx.Message); }
            finally
            {
                paoResSplGrp = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSplGrp;
        }

        /// <summary>
        /// Process list Supplier Group Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplGrpTmp_L> C_PRCaListSplGrpLng(List<cmlResInfoSplGrpLng> paoResSplGrpLng)
        {
            List<cmlTCNMSplGrpTmp_L> aoSplGrp = new List<cmlTCNMSplGrpTmp_L>();

            try
            {
                aoSplGrp = paoResSplGrpLng.Select(oItem => new cmlTCNMSplGrpTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSgpCode = oItem.rtSgpCode,
                    FTSgpName = oItem.rtSgpName,
                    FTSgpRmk = oItem.rtSgpRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSplGrpLng : " + oEx.Message); }
            finally
            {
                paoResSplGrpLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSplGrp;
        }

        #endregion End Supplier Group

        #region Supplier Level

        /// <summary>
        /// Download Supplier Level
        /// </summary>
        /// <param name="poSplLev"></param>
        //private void C_DWNxSplLevel(cmlResItemOfcmlResSplLevelDwn poSplLev)
        private bool C_DWNbSplLevel(cmlResItemOfcmlResSplLevelDwn poSplLev)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSplLevTmp> aoSplLev;
            List<cmlTCNMSplLevTmp_L> aoSplLevLng;
            cDataReaderAdapter<cmlTCNMSplLevTmp> oSplLev;
            cDataReaderAdapter<cmlTCNMSplLevTmp_L> oSplLevLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplLevTmp");
                //oSql.AppendLine("FROM TCNMSplLev WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplLevTmp_L");
                //oSql.AppendLine("FROM TCNMSplLev_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplLevTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplLevTmp FROM TCNMSplLev with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplLevTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplLevTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplLevTmp_L FROM TCNMSplLev_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplLevTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplLevTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplLevTmp FROM TCNMSplLev with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplLevTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplLev' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplLevTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplLevTmp FROM TCNMSplLev with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplLevTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplLevTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplLevTmp_L FROM TCNMSplLev_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplLevTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplLev_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplLevTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplLevTmp_L FROM TCNMSplLev_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplLevTmp_L");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSplLev
                aoSplLev = C_PRCaListSplLev(poSplLev.roItem.raSplLev);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplLev = new cDataReaderAdapter<cmlTCNMSplLevTmp>(aoSplLev);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSplLev.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplLevTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplLev);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSplLevel : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSplLev_L
                aoSplLevLng = C_PRCaListSplLevLng(poSplLev.roItem.raSplLevLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplLevLng = new cDataReaderAdapter<cmlTCNMSplLevTmp_L>(aoSplLevLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSplLevLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplLevTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplLevLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSplLevel : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SLV ");
                oSql.AppendLine("FROM TCNMSplLev SLV WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplLevTmp SLVT WITH(NOLOCK) ON SLV.FTSlvCode = SLVT.FTSlvCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplLev");
                oSql.AppendLine("SELECT * FROM TCNMSplLevTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplLevTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SLVL ");
                oSql.AppendLine("FROM TCNMSplLev_L SLVL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplLevTmp_L SLVLT WITH(NOLOCK) ON SLVL.FTSlvCode = SLVLT.FTSlvCode");
                oSql.AppendLine("   AND SLVL.FNLngID = SLVLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplLev_L");
                oSql.AppendLine("SELECT * FROM TCNMSplLevTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplLevTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSplLevel : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSplLevel : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSplLev = null;
                oSql = null;
                oTranscation = null;
                aoSplLev = null;
                aoSplLevLng = null;
                oSplLev = null;
                oSplLevLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Supplier Level
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplLevTmp> C_PRCaListSplLev(List<cmlResInfoSplLev> paoResSplLev)
        {
            List<cmlTCNMSplLevTmp> aoSplLev = new List<cmlTCNMSplLevTmp>();

            try
            {
                aoSplLev = paoResSplLev.Select(oItem => new cmlTCNMSplLevTmp()
                {
                    FTSlvCode = oItem.rtSlvCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSplLev : " + oEx.Message); }
            finally
            {
                paoResSplLev = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSplLev;
        }

        /// <summary>
        /// Process list Supplier Level Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplLevTmp_L> C_PRCaListSplLevLng(List<cmlResInfoSplLevLng> paoResSplLevLng)
        {
            List<cmlTCNMSplLevTmp_L> aoSplLev = new List<cmlTCNMSplLevTmp_L>();

            try
            {
                aoSplLev = paoResSplLevLng.Select(oItem => new cmlTCNMSplLevTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSlvCode = oItem.rtSlvCode,
                    FTSlvName = oItem.rtSlvName,
                    FTSlvRmk = oItem.rtSlvRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSplLevLng : " + oEx.Message); }
            finally
            {
                paoResSplLevLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSplLev;
        }

        #endregion End Supplier Level

        #region Supplier Type

        /// <summary>
        /// Download Supplier Type
        /// </summary>
        /// <param name="poSplType"></param>
        //private void C_DWNxSplType(cmlResItemOfcmlResSplTypeDwn poSplType)
        private bool C_DWNbSplType(cmlResItemOfcmlResSplTypeDwn poSplType)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSplTypeTmp> aoSplType;
            List<cmlTCNMSplTypeTmp_L> aoSplTypeLng;
            cDataReaderAdapter<cmlTCNMSplTypeTmp> oSplType;
            cDataReaderAdapter<cmlTCNMSplTypeTmp_L> oSplTypeLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplTypeTmp");
                //oSql.AppendLine("FROM TCNMSplType WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplTypeTmp_L");
                //oSql.AppendLine("FROM TCNMSplType_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplTypeTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplTypeTmp FROM TCNMSplType with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplTypeTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplTypeTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplTypeTmp_L FROM TCNMSplType_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplTypeTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplTypeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplTypeTmp FROM TCNMSplType with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplTypeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplType' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplTypeTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplTypeTmp FROM TCNMSplType with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplTypeTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplTypeTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplTypeTmp_L FROM TCNMSplType_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplTypeTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplType_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplTypeTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplTypeTmp_L FROM TCNMSplType_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplTypeTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSplType
                aoSplType = C_PRCaListSplType(poSplType.roItem.raSplType);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplType = new cDataReaderAdapter<cmlTCNMSplTypeTmp>(aoSplType);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSplType.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplTypeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplType);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSplType : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMSplType_L
                aoSplTypeLng = C_PRCaListSplTypeLng(poSplType.roItem.raSplTypeLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplTypeLng = new cDataReaderAdapter<cmlTCNMSplTypeTmp_L>(aoSplTypeLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSplTypeLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplTypeTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplTypeLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSplType : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE STY ");
                oSql.AppendLine("FROM TCNMSplType STY WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplTypeTmp STYT WITH(NOLOCK) ON STY.FTStyCode = STYT.FTStyCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplType");
                oSql.AppendLine("SELECT * FROM TCNMSplTypeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplTypeTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE STYL ");
                oSql.AppendLine("FROM TCNMSplType_L STYL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplTypeTmp_L STYLT WITH(NOLOCK) ON STYL.FTStyCode = STYLT.FTStyCode");
                oSql.AppendLine("   AND STYL.FNLngID = STYLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplType_L");
                oSql.AppendLine("SELECT * FROM TCNMSplTypeTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplTypeTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSplType : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSplType : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poSplType = null;
                oSql = null;
                oTranscation = null;
                aoSplType = null;
                aoSplTypeLng = null;
                oSplType = null;
                oSplTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Supplier Type
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplTypeTmp> C_PRCaListSplType(List<cmlResInfoSplType> paoResSplType)
        {
            List<cmlTCNMSplTypeTmp> aoSplType = new List<cmlTCNMSplTypeTmp>();

            try
            {
                aoSplType = paoResSplType.Select(oItem => new cmlTCNMSplTypeTmp()
                {
                    FTStyCode = oItem.rtStyCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSplType : " + oEx.Message); }
            finally
            {
                paoResSplType = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSplType;
        }

        /// <summary>
        /// Process list Supplier Type Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMSplTypeTmp_L> C_PRCaListSplTypeLng(List<cmlResInfoSplTypeLng> paoResSplTypeLng)
        {
            List<cmlTCNMSplTypeTmp_L> aoSplType = new List<cmlTCNMSplTypeTmp_L>();

            try
            {
                aoSplType = paoResSplTypeLng.Select(oItem => new cmlTCNMSplTypeTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTStyCode = oItem.rtStyCode,
                    FTStyName = oItem.rtStyName,
                    FTStyRmk = oItem.rtStyRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSplTypeLng : " + oEx.Message); }
            finally
            {
                paoResSplTypeLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSplType;
        }

        #endregion End Supplier Type

        #region Supplier Ship Via

        /// <summary>
        /// Download Supplier Ship Via
        /// </summary>
        /// <param name="poShipVia"></param>
        //private void C_DWNxShipVia(cmlResItemOfcmlResSplShipViaDwn poShipVia)
        private bool C_DWNbShipVia(cmlResItemOfcmlResSplShipViaDwn poShipVia)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMShipViaTmp> aoShipVia;
            List<cmlTCNMShipViaTmp_L> aoShipViaLng;
            cDataReaderAdapter<cmlTCNMShipViaTmp> oShipVia;
            cDataReaderAdapter<cmlTCNMShipViaTmp_L> oShipViaLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMShipViaTmp");
                //oSql.AppendLine("FROM TCNMShipVia WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMShipViaTmp_L");
                //oSql.AppendLine("FROM TCNMShipVia_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMShipViaTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMShipViaTmp FROM TCNMShipVia with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMShipViaTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMShipViaTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMShipViaTmp_L FROM TCNMShipVia_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMShipViaTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMShipViaTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMShipViaTmp FROM TCNMShipVia with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMShipViaTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMShipVia' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMShipViaTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMShipViaTmp FROM TCNMShipVia with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMShipViaTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMShipViaTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMShipViaTmp_L FROM TCNMShipVia_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMShipViaTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMShipVia_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMShipViaTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMShipViaTmp_L FROM TCNMShipVia_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMShipViaTmp_L");

                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMShipVia
                aoShipVia = C_PRCaListShipVia(poShipVia.roItem.raSplShipVia);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oShipVia = new cDataReaderAdapter<cmlTCNMShipViaTmp>(aoShipVia);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oShipVia.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMShipViaTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oShipVia);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbShipVia : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TCNMShipVia_L
                aoShipViaLng = C_PRCaListShipViaLng(poShipVia.roItem.raSplShipViaLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oShipViaLng = new cDataReaderAdapter<cmlTCNMShipViaTmp_L>(aoShipViaLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oShipViaLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMShipViaTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oShipViaLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbShipVia : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE VIA ");
                oSql.AppendLine("FROM TCNMShipVia VIA WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMShipViaTmp VIAT WITH(NOLOCK) ON VIA.FTViaCode = VIAT.FTViaCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMShipVia");
                oSql.AppendLine("SELECT * FROM TCNMShipViaTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMShipViaTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE VIAL ");
                oSql.AppendLine("FROM TCNMShipVia_L VIAL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMShipViaTmp_L VIALT WITH(NOLOCK) ON VIAL.FTViaCode = VIALT.FTViaCode");
                oSql.AppendLine("   AND VIAL.FNLngID = VIALT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMShipVia_L");
                oSql.AppendLine("SELECT * FROM TCNMShipViaTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMShipViaTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxShipVia : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbShipVia : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poShipVia = null;
                oSql = null;
                oTranscation = null;
                aoShipVia = null;
                aoShipViaLng = null;
                oShipVia = null;
                oShipViaLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Supplier Ship Via
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMShipViaTmp> C_PRCaListShipVia(List<cmlResInfoSplShipVia> paoResShipVia)
        {
            List<cmlTCNMShipViaTmp> aoShipVia = new List<cmlTCNMShipViaTmp>();

            try
            {
                aoShipVia = paoResShipVia.Select(oItem => new cmlTCNMShipViaTmp()
                {
                    FTViaCode = oItem.rtViaCode,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListShipVia : " + oEx.Message); }
            finally
            {
                paoResShipVia = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoShipVia;
        }

        /// <summary>
        /// Process list Supplier Ship Via Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNMShipViaTmp_L> C_PRCaListShipViaLng(List<cmlResInfoSplShipViaLng> paoResShipViaLng)
        {
            List<cmlTCNMShipViaTmp_L> aoShipVia = new List<cmlTCNMShipViaTmp_L>();

            try
            {
                aoShipVia = paoResShipViaLng.Select(oItem => new cmlTCNMShipViaTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTViaCode = oItem.rtViaCode,
                    FTViaName = oItem.rtViaName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListShipViaLng : " + oEx.Message); }
            finally
            {
                paoResShipViaLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoShipVia;
        }

        #endregion End Supplier Ship Via

        #region Supplier Address

        /// <summary>
        /// Download Supplier Address
        /// </summary>
        /// <param name="poSplAddress"></param>
        //private void C_DWNxSplAddress(cmlResListOfcmlResSplAddrDwn poSplAddress)
        private bool C_DWNbSplAddress(cmlResListOfcmlResSplAddrDwn poSplAddress)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMSplAddressTmp_L> aoSplAddLng;
            cDataReaderAdapter<cmlTCNMSplAddressTmp_L> oSplAddLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNMSplAddressTmp_L");
                //oSql.AppendLine("FROM TCNMSplAddress_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplAddressTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNMSplAddressTmp_L FROM TCNMSplAddress_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNMSplAddressTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMSplAddressTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNMSplAddressTmp_L FROM TCNMSplAddress_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplAddressTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMSplAddress_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNMSplAddressTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNMSplAddressTmp_L FROM TCNMSplAddress_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMSplAddressTmp_L");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNMSplAddress_L
                aoSplAddLng = C_PRCaListSplAddressLng(poSplAddress.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSplAddLng = new cDataReaderAdapter<cmlTCNMSplAddressTmp_L>(aoSplAddLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSplAddLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMSplAddressTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSplAddLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSplAddress : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SAD ");
                oSql.AppendLine("FROM TCNMSplAddress_L SAD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMSplAddressTmp_L SADT WITH(NOLOCK) ON SAD.FTSplCode = SADT.FTSplCode");
                oSql.AppendLine("   AND SAD.FNLngID = SADT.FNLngID");
                oSql.AppendLine("   AND SAD.FTAddGrpType = SADT.FTAddGrpType");
                oSql.AppendLine("   AND SAD.FTAddRefNo = SADT.FTAddRefNo");     //*Arm 63-04-09

                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMSplAddress_L");
                oSql.AppendLine("(FTSplCode, FNLngID, FTAddGrpType, FTAddRefNo, FTAddName, FTAddTaxNo, FTAddRmk, FTAddCountry, FTAreCode, FTZneCode, FTAddVersion,");
                oSql.AppendLine("FTAddV1No, FTAddV1Soi, FTAddV1Village, FTAddV1Road, FTAddV1SubDist, FTAddV1DstCode, FTAddV1PvnCode, FTAddV1PostCode,");
                oSql.AppendLine("FTAddV2Desc1, FTAddV2Desc2, FTAddWebsite, FTAddLongitude, FTAddLatitude, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)");
                oSql.AppendLine("SELECT FTSplCode, FNLngID, FTAddGrpType, FTAddRefNo, FTAddName, FTAddTaxNo, FTAddRmk, FTAddCountry, FTAreCode, FTZneCode, FTAddVersion, ");
                oSql.AppendLine("FTAddV1No, FTAddV1Soi, FTAddV1Village, FTAddV1Road, FTAddV1SubDist, FTAddV1DstCode, FTAddV1PvnCode, FTAddV1PostCode, ");
                oSql.AppendLine("FTAddV2Desc1, FTAddV2Desc2, FTAddWebsite, FTAddLongitude, FTAddLatitude, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy");
                oSql.AppendLine("FROM TCNMSplAddressTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNMSplAddressTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSplAddress : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSplAddress : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSplAddress = null;
                oSql = null;
                oTranscation = null;
                aoSplAddLng = null;
                oSplAddLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        #endregion End Supplier Address

        #region System Doc type

        /// <summary>
        /// Download System Doc type
        /// </summary>
        /// <param name="poSysDocType"></param>
        //private void C_DWNxSysDocType(cmlResListOfcmlResInfoSysDocType poSysDocType)
        private bool C_DWNbSysDocType(cmlResListOfcmlResInfoSysDocType poSysDocType)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysDocType> aoSysDocType;
            cDataReaderAdapter<cmlTSysDocType> oSysDocType;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysDocTypeTmp");
                //oSql.AppendLine("FROM TSysDocType WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysDocTypeTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysDocTypeTmp FROM TSysDocType with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysDocTypeTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysDocTypeTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysDocTypeTmp FROM TSysDocType with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysDocTypeTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysDocType' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysDocTypeTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysDocTypeTmp FROM TSysDocType with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysDocTypeTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysDocType
                aoSysDocType = C_PRCaListSysDocType(poSysDocType.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysDocType = new cDataReaderAdapter<cmlTSysDocType>(aoSysDocType);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSysDocType.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysDocTypeTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysDocType);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNxSysDocType : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SDT ");
                oSql.AppendLine("FROM TSysDocType SDT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysDocTypeTmp SDTT WITH(NOLOCK) ON SDT.FTSdtTblName = SDTT.FTSdtTblName");
                oSql.AppendLine("   AND SDT.FTSdtFedTypeName = SDTT.FTSdtFedTypeName");
                oSql.AppendLine("   AND SDT.FNSdtDocType = SDTT.FNSdtDocType");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysDocType");
                oSql.AppendLine("(FTSdtTblName, FTSdtFedTypeName, FTSdtDocGrp, FNSdtDocType, FTSdtDocName, FTSdtDocTypeRef)");
                oSql.AppendLine("SELECT FTSdtTblName, FTSdtFedTypeName, FTSdtDocGrp, FNSdtDocType, FTSdtDocName, FTSdtDocTypeRef");
                oSql.AppendLine("FROM TSysDocTypeTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysDocTypeTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysDocType : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNxSysDocType : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSysDocType = null;
                oSql = null;
                oTranscation = null;
                aoSysDocType = null;
                oSysDocType = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Doc type
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysDocType> C_PRCaListSysDocType(List<cmlResInfoSysDocType> paoResDocType)
        {
            List<cmlTSysDocType> aoDocType = new List<cmlTSysDocType>();

            try
            {
                aoDocType = paoResDocType.Select(oItem => new cmlTSysDocType()
                {
                    FNSdtDocType = oItem.rnSdtDocType,
                    FTSdtDocName = oItem.rtSdtDocName,
                    FTSdtDocTypeRef = oItem.rtSdtDocTypeRef,
                    FTSdtFedTypeName = oItem.rtSdtFedTypeName,
                    FTSdtTblName = oItem.rtSdtTblName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysDocType : " + oEx.Message); }
            finally
            {
                paoResDocType = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoDocType;
        }

        #endregion End System Doc type

        #region System Edc

        /// <summary>
        /// Download System Edc
        /// </summary>
        /// <param name="poSysEdc"></param>
        //private void C_DWNxSysEdc(cmlResListOfcmlResInfoSysEdc poSysEdc)
        private bool C_DWNbSysEdc(cmlResListOfcmlResInfoSysEdc poSysEdc)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysEdc> aoSysEdc;
            cDataReaderAdapter<cmlTSysEdc> oSysEdc;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysEdcTmp");
                //oSql.AppendLine("FROM TSysEdc WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysEdcTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysEdcTmp FROM TSysEdc with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysEdcTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysEdcTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysEdcTmp FROM TSysEdc with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysEdcTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysEdc' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysEdcTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysEdcTmp FROM TSysEdc with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysEdcTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysEdc
                aoSysEdc = C_PRCaListSysEdc(poSysEdc.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysEdc = new cDataReaderAdapter<cmlTSysEdc>(aoSysEdc);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSysEdc.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysEdcTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysEdc);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysEdc : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SED ");
                oSql.AppendLine("FROM TSysEdc SED WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysEdcTmp SEDT WITH(NOLOCK) ON SED.FTSedCode = SEDT.FTSedCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysEdc");
                oSql.AppendLine("SELECT * FROM TSysEdcTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysEdcTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysEdc : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysEdc : " + oEx.Message);
                return false;
            }
            //++++++++++++
            finally
            {
                poSysEdc = null;
                oSql = null;
                oTranscation = null;
                aoSysEdc = null;
                oSysEdc = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Edc
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysEdc> C_PRCaListSysEdc(List<cmlResInfoSysEdc> paoResEdc)
        {
            List<cmlTSysEdc> aoEdc = new List<cmlTSysEdc>();

            try
            {
                aoEdc = paoResEdc.Select(oItem => new cmlTSysEdc()
                {
                    FNSedAck = oItem.rnSedAck,
                    FNSedTimeOut = oItem.rnSedTimeOut,
                    FTSedCode = oItem.rtSedCode,
                    FTSedDllVer = oItem.rtSedDllVer,
                    FTSedModel = oItem.rtSedModel,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysEdc : " + oEx.Message); }
            finally
            {
                paoResEdc = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoEdc;
        }

        #endregion End System Edc

        #region System Language

        /// <summary>
        /// Download System Language
        /// </summary>
        /// <param name="poSysLanguage"></param>
        //private void C_DWNxSysLanguage(cmlResListOfcmlResInfoSysLang poSysLanguage)
        private bool C_DWNbSysLanguage(cmlResListOfcmlResInfoSysLang poSysLanguage)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysLanguage> aoSysLanguage;
            cDataReaderAdapter<cmlTSysLanguage> oSysLanguage;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysLanguageTmp");
                //oSql.AppendLine("FROM TSysLanguage WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysLanguageTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysLanguageTmp FROM TSysLanguage with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysLanguageTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysLanguageTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysLanguageTmp FROM TSysLanguage with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysLanguageTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysLanguage' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysLanguageTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysLanguageTmp FROM TSysLanguage with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysLanguageTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysLanguage
                aoSysLanguage = C_PRCaListSysLanguage(poSysLanguage.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysLanguage = new cDataReaderAdapter<cmlTSysLanguage>(aoSysLanguage);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysLanguageTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysLanguage);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysLanguage : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE LNG ");
                oSql.AppendLine("FROM TSysLanguage LNG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysLanguageTmp LNGT WITH(NOLOCK) ON LNG.FNLngID = LNGT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysLanguage");
                oSql.AppendLine("SELECT * FROM TSysLanguageTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysLanguageTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysLanguage : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysLanguage : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poSysLanguage = null;
                oSql = null;
                oTranscation = null;
                aoSysLanguage = null;
                oSysLanguage = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysLanguage> C_PRCaListSysLanguage(List<cmlResInfoSysLang> paoResLanguage)
        {
            List<cmlTSysLanguage> aoLanguage = new List<cmlTSysLanguage>();

            try
            {
                aoLanguage = paoResLanguage.Select(oItem => new cmlTSysLanguage()
                {
                    FNLngID = oItem.rnLngID,
                    FTLngName = oItem.rtLngName,
                    FTLngNameEng = oItem.rtLngNameEng,
                    FTLngShortName = oItem.rtLngShortName,
                    FTLngStaLocal = oItem.rtLngStaLocal,
                    FTLngStaUse = oItem.rtLngStaUse
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysLanguage : " + oEx.Message); }
            finally
            {
                paoResLanguage = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoLanguage;
        }

        #endregion End System Language

        #region System Pmt

        /// <summary>
        /// Download System Pmt
        /// </summary>
        /// <param name="poSysPmt"></param>
        //private void C_DWNxSysPmt(cmlResItemOfcmlResSysPmtDwn poSysPmt)
        private bool C_DWNbSysPmt(cmlResItemOfcmlResSysPmtDwn poSysPmt)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysPmtTmp> aoSysPmt;
            List<cmlTSysPmtTmp_L> aoSysPmtLng;
            cDataReaderAdapter<cmlTSysPmtTmp> oSysPmt;
            cDataReaderAdapter<cmlTSysPmtTmp_L> oSysPmtLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysPmtTmp");
                //oSql.AppendLine("FROM TSysPmt WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysPmtTmp_L");
                //oSql.AppendLine("FROM TSysPmt_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPmtTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysPmtTmp FROM TSysPmt with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysPmtTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPmtTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysPmtTmp_L FROM TSysPmt_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysPmtTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPmtTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysPmtTmp FROM TSysPmt with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPmtTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPmt' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysPmtTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysPmtTmp FROM TSysPmt with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysPmtTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPmtTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysPmtTmp_L FROM TSysPmt_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPmtTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPmt_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysPmtTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysPmtTmp_L FROM TSysPmt_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysPmtTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysPmt
                aoSysPmt = C_PRCaListSysPmt(poSysPmt.roItem.raSysPmt);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysPmt = new cDataReaderAdapter<cmlTSysPmtTmp>(aoSysPmt);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSysPmt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysPmtTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysPmt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysPmt : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TSysPmt_L
                aoSysPmtLng = C_PRCaListSysPmtLng(poSysPmt.roItem.raSysPmtLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysPmtLng = new cDataReaderAdapter<cmlTSysPmtTmp_L>(aoSysPmtLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oSysPmtLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysPmtTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysPmtLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysPmt : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SPM ");
                oSql.AppendLine("FROM TSysPmt SPM WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysPmtTmp SPMT WITH(NOLOCK) ON SPM.FTSpmCode = SPMT.FTSpmCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysPmt");
                oSql.AppendLine("SELECT * FROM TSysPmtTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysPmtTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SPML ");
                oSql.AppendLine("FROM TSysPmt_L SPML WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysPmtTmp_L SPMLT WITH(NOLOCK) ON SPML.FTSpmCode = SPMLT.FTSpmCode");
                oSql.AppendLine("   AND SPML.FNLngID = SPMLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysPmt_L");
                oSql.AppendLine("SELECT * FROM TSysPmtTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysPmtTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysPmt : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysPmt : " + oEx.Message);
                return false;
            }
            //++++++++++++
            finally
            {
                poSysPmt = null;
                oSql = null;
                oTranscation = null;
                aoSysPmt = null;
                aoSysPmtLng = null;
                oSysPmt = null;
                oSysPmtLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Pmt
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysPmtTmp> C_PRCaListSysPmt(List<cmlResInfoSysPmt> paoResSysPmt)
        {
            List<cmlTSysPmtTmp> aoSysPmt = new List<cmlTSysPmtTmp>();

            try
            {
                aoSysPmt = paoResSysPmt.Select(oItem => new cmlTSysPmtTmp()
                {
                    FNSpmLimitGrpRcv = oItem.rnSpmLimitGrpRcv,
                    FTSpmCode = oItem.rtSpmCode,
                    FTSpmStaAllPdt = oItem.rtSpmStaAllPdt,
                    FTSpmStaAlwOffline = oItem.rtSpmStaAlwOffline,
                    FTSpmStaBuy = oItem.rtSpmStaBuy,
                    FTSpmStaChkCst = oItem.rtSpmStaChkCst,
                    FTSpmStaChkCstDOB = oItem.rtSpmStaChkCstDOB,
                    FTSpmStaChkLimitGet = oItem.rtSpmStaChkLimitGet,
                    FTSpmStaExceptPmt = oItem.rtSpmStaExceptPmt,
                    FTSpmStaGetDisAmt = oItem.rtSpmStaGetDisAmt,
                    FTSpmStaGetDisPer = oItem.rtSpmStaGetDisPer,
                    FTSpmStaGetNewPri = oItem.rtSpmStaGetNewPri,
                    FTSpmStaGetPoint = oItem.rtSpmStaGetPoint,
                    FTSpmStaGrpBoth = oItem.rtSpmStaGrpBoth,
                    FTSpmStaGrpBuy = oItem.rtSpmStaGrpBuy,
                    FTSpmStaGrpRcv = oItem.rtSpmStaGrpRcv,
                    FTSpmStaGrpReject = oItem.rtSpmStaGrpReject,
                    FTSpmStaRcv = oItem.rtSpmStaRcv,
                    FTSpmStaRcvFree = oItem.rtSpmStaRcvFree,
                    FTSpmStaUseRange = oItem.rtSpmStaUseRange,
                    FTSpmType = oItem.rtSpmType,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysPmt : " + oEx.Message); }
            finally
            {
                paoResSysPmt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysPmt;
        }

        /// <summary>
        /// Process list System Pmt Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysPmtTmp_L> C_PRCaListSysPmtLng(List<cmlResInfoSysPmtLng> paoResSysPmtLng)
        {
            List<cmlTSysPmtTmp_L> aoSysPmt = new List<cmlTSysPmtTmp_L>();

            try
            {
                aoSysPmt = paoResSysPmtLng.Select(oItem => new cmlTSysPmtTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSpmCode = oItem.rtSpmCode,
                    FTSpmName = oItem.rtSpmName,
                    FTSpmRmk = oItem.rtSpmRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysPmtLng : " + oEx.Message); }
            finally
            {
                paoResSysPmtLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysPmt;
        }

        #endregion End System Pmt

        #region System Pos Hardware

        /// <summary>
        /// Download System Pos Hardware
        /// </summary>
        /// <param name="poSysPosHW"></param>
        //private void C_DWNxSysPosHW(cmlResListOfcmlResInfoSysPosHW poSysPosHW)
        private bool C_DWNbSysPosHW(cmlResListOfcmlResInfoSysPosHW poSysPosHW)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysPosHW> aoSysPosHW;
            cDataReaderAdapter<cmlTSysPosHW> oSysPosHW;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysPosHWTmp");
                //oSql.AppendLine("FROM TSysPosHW WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPosHWTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysPosHWTmp FROM TSysPosHW with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysPosHWTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPosHWTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysPosHWTmp FROM TSysPosHW with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPosHWTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPosHW' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysPosHWTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysPosHWTmp FROM TSysPosHW with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysPosHWTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysPosHW
                aoSysPosHW = C_PRCaListSysPosHW(poSysPosHW.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysPosHW = new cDataReaderAdapter<cmlTSysPosHW>(aoSysPosHW);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysPosHW.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysPosHWTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysPosHW);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysPosHW : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SED ");
                oSql.AppendLine("FROM TSysPosHW SED WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysPosHWTmp SEDT WITH(NOLOCK) ON SED.FTShwCode = SEDT.FTShwCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysPosHW");
                oSql.AppendLine("SELECT * FROM TSysPosHWTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysPosHWTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysPosHW : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysPosHW : " + oEx.Message);
                return false;
            }
            //++++++++++++
            finally
            {
                poSysPosHW = null;
                oSql = null;
                oTranscation = null;
                aoSysPosHW = null;
                oSysPosHW = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Pos Hardware
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysPosHW> C_PRCaListSysPosHW(List<cmlResInfoSysPosHW> paoResPosHW)
        {
            List<cmlTSysPosHW> aoPosHW = new List<cmlTSysPosHW>();

            try
            {
                aoPosHW = paoResPosHW.Select(oItem => new cmlTSysPosHW()
                {
                    FTShwCode = oItem.rtShwCode,
                    FTShwHWKey = oItem.rtShwHWKey,
                    FTShwName = oItem.rtShwName,
                    FTShwNameEng = oItem.rtShwNameEng,
                    FTShwStaAlwBT = oItem.rtShwStaAlwBT,
                    FTShwStaAlwCom = oItem.rtShwStaAlwCom,
                    FTShwStaAlwPrinter = oItem.rtShwStaAlwPrinter,
                    FTShwStaAlwTCP = oItem.rtShwStaAlwTCP,
                    FTShwSystem = oItem.rtShwSystem
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysPosHW : " + oEx.Message); }
            finally
            {
                paoResPosHW = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoPosHW;
        }

        #endregion End System Pos Hardware

        #region System Printer

        /// <summary>
        /// Download System Printer
        /// </summary>
        /// <param name="poSysPrinter"></param>
        //private void C_DWNxSysPrinter(cmlResItemOfcmlResSysPrnDwn poSysPrinter)
        private bool C_DWNbSysPrinter(cmlResItemOfcmlResSysPrnDwn poSysPrinter)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysPrinterTmp> aoSysPrinter;
            List<cmlTSysPrinterTmp_L> aoSysPrinterLng;
            cDataReaderAdapter<cmlTSysPrinterTmp> oSysPrinter;
            cDataReaderAdapter<cmlTSysPrinterTmp_L> oSysPrinterLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysPrinterTmp");
                //oSql.AppendLine("FROM TSysPrinter WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysPrinterTmp_L");
                //oSql.AppendLine("FROM TSysPrinter_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPrinterTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysPrinterTmp FROM TSysPrinter with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysPrinterTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPrinterTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysPrinterTmp_L FROM TSysPrinter_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysPrinterTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPrinterTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysPrinterTmp FROM TSysPrinter with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPrinterTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPrinter' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysPrinterTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysPrinterTmp FROM TSysPrinter with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysPrinterTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysPrinterTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysPrinterTmp_L FROM TSysPrinter_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPrinterTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysPrinter_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysPrinterTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysPrinterTmp_L FROM TSysPrinter_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysPrinterTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysPrinter
                aoSysPrinter = C_PRCaListSysPrinter(poSysPrinter.roItem.raSysPrn);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysPrinter = new cDataReaderAdapter<cmlTSysPrinterTmp>(aoSysPrinter);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysPrinter.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysPrinterTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysPrinter);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysPrinter : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TSysPrinter_L
                aoSysPrinterLng = C_PRCaListSysPrinterLng(poSysPrinter.roItem.raSysPrnLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysPrinterLng = new cDataReaderAdapter<cmlTSysPrinterTmp_L>(aoSysPrinterLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysPrinterLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysPrinterTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysPrinterLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysPrinter : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SPP ");
                oSql.AppendLine("FROM TSysPrinter SPP WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysPrinterTmp SPPT WITH(NOLOCK) ON SPP.FTSppCode = SPPT.FTSppCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysPrinter");
                oSql.AppendLine("SELECT * FROM TSysPrinterTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysPrinterTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SPPL ");
                oSql.AppendLine("FROM TSysPrinter_L SPPL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysPrinterTmp_L SPPLT WITH(NOLOCK) ON SPPL.FTSppCode = SPPLT.FTSppCode");
                oSql.AppendLine("   AND SPPL.FNLngID = SPPLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysPrinter_L");
                oSql.AppendLine("SELECT * FROM TSysPrinterTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysPrinterTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysPrinter : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysPrinter : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSysPrinter = null;
                oSql = null;
                oTranscation = null;
                aoSysPrinter = null;
                aoSysPrinterLng = null;
                oSysPrinter = null;
                oSysPrinterLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Printer
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysPrinterTmp> C_PRCaListSysPrinter(List<cmlResInfoSysPrn> paoResSysPrinter)
        {
            List<cmlTSysPrinterTmp> aoSysPrinter = new List<cmlTSysPrinterTmp>();

            try
            {
                aoSysPrinter = paoResSysPrinter.Select(oItem => new cmlTSysPrinterTmp()
                {
                    FTSppCode = oItem.rtSppCode,
                    FTSppRef = oItem.rtSppRef,
                    FTSppStaUse = oItem.rtSppStaUse,
                    FTSppType = oItem.rtSppType,
                    FTSppValue = oItem.rtSppValue,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysPrinter : " + oEx.Message); }
            finally
            {
                paoResSysPrinter = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysPrinter;
        }

        /// <summary>
        /// Process list System Printer Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysPrinterTmp_L> C_PRCaListSysPrinterLng(List<cmlResInfoSysPrnLng> paoResSysPrinterLng)
        {
            List<cmlTSysPrinterTmp_L> aoSysPrinter = new List<cmlTSysPrinterTmp_L>();

            try
            {
                aoSysPrinter = paoResSysPrinterLng.Select(oItem => new cmlTSysPrinterTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSppCode = oItem.rtSppCode,
                    FTSppName = oItem.rtSppName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysPrinterLng : " + oEx.Message); }
            finally
            {
                paoResSysPrinterLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysPrinter;
        }

        #endregion End System Printer

        #region System Config

        /// <summary>
        /// Download System Config
        /// </summary>
        /// <param name="poSysConfig"></param>
        //private void C_DWNxSysConfig(cmlResItemOfcmlResSysConfigDwn poSysConfig)
        private bool C_DWNbSysConfig(cmlResItemOfcmlResSysConfigDwn poSysConfig)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysConfigTmp> aoSysConfig;
            List<cmlTSysConfigTmp_L> aoSysConfigLng;
            cDataReaderAdapter<cmlTSysConfigTmp> oSysConfig;
            cDataReaderAdapter<cmlTSysConfigTmp_L> oSysConfigLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysConfigTmp");
                //oSql.AppendLine("FROM TSysConfig WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysConfigTmp_L");
                //oSql.AppendLine("FROM TSysConfig_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysConfigTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysConfigTmp FROM TSysConfig with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysConfigTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysConfigTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysConfigTmp_L FROM TSysConfig_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysConfigTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysConfigTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysConfigTmp FROM TSysConfig with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysConfigTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysConfig' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysConfigTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysConfigTmp FROM TSysConfig with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysConfigTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysConfigTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysConfigTmp_L FROM TSysConfig_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysConfigTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysConfig_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysConfigTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysConfigTmp_L FROM TSysConfig_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysConfigTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysConfig
                aoSysConfig = C_PRCaListSysConfig(poSysConfig.roItem.raConfig);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysConfig = new cDataReaderAdapter<cmlTSysConfigTmp>(aoSysConfig);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSysConfig.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysConfigTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysConfig);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysConfig/TSysConfigTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TSysConfig_L
                aoSysConfigLng = C_PRCaListSysConfigLng(poSysConfig.roItem.raConfigLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysConfigLng = new cDataReaderAdapter<cmlTSysConfigTmp_L>(aoSysConfigLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oSysConfigLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysConfigTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysConfigLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysConfig/TSysConfigTmp_L : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CFG ");
                oSql.AppendLine("FROM TSysConfig CFG WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysConfigTmp CFGT WITH(NOLOCK) ON CFG.FTSysCode = CFGT.FTSysCode");
                oSql.AppendLine("   AND CFG.FTSysApp = CFGT.FTSysApp");
                oSql.AppendLine("   AND CFG.FTSysKey = CFGT.FTSysKey");
                oSql.AppendLine("   AND CFG.FTSysSeq = CFGT.FTSysSeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysConfig");
                oSql.AppendLine("SELECT * FROM TSysConfigTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysConfigTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE CFGL ");
                oSql.AppendLine("FROM TSysConfig_L CFGL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysConfigTmp_L CFGLT WITH(NOLOCK) ON CFGL.FTSysCode = CFGLT.FTSysCode");
                oSql.AppendLine("   AND CFGL.FNLngID = CFGLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysConfig_L");
                oSql.AppendLine("SELECT * FROM TSysConfigTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysConfigTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysConfig : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysConfig : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSysConfig = null;
                oSql = null;
                oTranscation = null;
                aoSysConfig = null;
                aoSysConfigLng = null;
                oSysConfig = null;
                oSysConfigLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Config
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysConfigTmp> C_PRCaListSysConfig(List<cmlResInfoSysConfig> paoResSysConfig)
        {
            List<cmlTSysConfigTmp> aoSysConfig = new List<cmlTSysConfigTmp>();

            try
            {
                aoSysConfig = paoResSysConfig.Select(oItem => new cmlTSysConfigTmp()
                {
                    FNSysMaxLength = oItem.rnSysMaxLength,
                    FTGmnCode = oItem.rtGmnCode,
                    FTSysApp = oItem.rtSysApp,
                    FTSysCode = oItem.rtSysCode,
                    FTSysKey = oItem.rtSysKey,
                    FTSysSeq = oItem.rtSysSeq,
                    FTSysStaAlwEdit = oItem.rtSysStaAlwEdit,
                    FTSysStaDataType = oItem.rtSysStaDataType,
                    FTSysStaDefRef = oItem.rtSysStaDefRef,
                    FTSysStaDefValue = oItem.rtSysStaDefValue,
                    FTSysStaUsrRef = oItem.rtSysStaUsrRef,
                    FTSysStaUsrValue = oItem.rtSysStaUsrValue,
                    FDCreateOn = oItem.rdCreateOn,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTLastUpdBy = oItem.rtLastUpdBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysConfig : " + oEx.Message); }
            finally
            {
                paoResSysConfig = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysConfig;
        }

        /// <summary>
        /// Process list System Config Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysConfigTmp_L> C_PRCaListSysConfigLng(List<cmlResInfoSysConfigLng> paoResSysConfigLng)
        {
            List<cmlTSysConfigTmp_L> aoSysConfig = new List<cmlTSysConfigTmp_L>();

            try
            {
                aoSysConfig = paoResSysConfigLng.Select(oItem => new cmlTSysConfigTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTSysApp = oItem.rtSysApp,
                    FTSysCode = oItem.rtSysCode,
                    FTSysKey = oItem.rtSysKey,
                    FTSysName = oItem.rtSysName,
                    FTSysSeq = oItem.rtSysSeq,
                    FTSysDesc = oItem.rtSysDesc, //*Net 63-07-30
                    FTSysRmk = oItem.rtSysRmk //*Net 63-07-30
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysConfigLng : " + oEx.Message); }
            finally
            {
                paoResSysConfigLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysConfig;
        }

        #endregion End System Config

        #region System Rcv Fmt

        /// <summary>
        /// Download System Rcv Fmt
        /// </summary>
        /// <param name="poSysRcvFmt"></param>
        //private void C_DWNxSysRcvFmt(cmlResItemOfcmlResSysRcvFmtDwn poSysRcvFmt)
        private bool C_DWNbSysRcvFmt(cmlResItemOfcmlResSysRcvFmtDwn poSysRcvFmt)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysRcvFmtTmp> aoSysRcvFmt;
            List<cmlTSysRcvFmtTmp_L> aoSysRcvFmtLng;
            cDataReaderAdapter<cmlTSysRcvFmtTmp> oSysRcvFmt;
            cDataReaderAdapter<cmlTSysRcvFmtTmp_L> oSysRcvFmtLng;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysRcvFmtTmp");
                //oSql.AppendLine("FROM TSysRcvFmt WITH(ROWLOCK)");
                //oSql.AppendLine();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysRcvFmtTmp_L");
                //oSql.AppendLine("FROM TSysRcvFmt_L WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysRcvFmtTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysRcvFmtTmp FROM TSysRcvFmt with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysRcvFmtTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysRcvFmtTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysRcvFmtTmp_L FROM TSysRcvFmt_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysRcvFmtTmp_L");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysRcvFmtTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysRcvFmtTmp FROM TSysRcvFmt with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRcvFmtTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRcvFmt' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysRcvFmtTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysRcvFmtTmp FROM TSysRcvFmt with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysRcvFmtTmp");
                oSql.AppendLine("");

                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysRcvFmtTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysRcvFmtTmp_L FROM TSysRcvFmt_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRcvFmtTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRcvFmt_L' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysRcvFmtTmp_L");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysRcvFmtTmp_L FROM TSysRcvFmt_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysRcvFmtTmp_L");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysRcvFmt
                aoSysRcvFmt = C_PRCaListSysRcvFmt(poSysRcvFmt.roItem.raSysRcvFmt);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysRcvFmt = new cDataReaderAdapter<cmlTSysRcvFmtTmp>(aoSysRcvFmt);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysRcvFmt.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysRcvFmtTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysRcvFmt);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysRcvFmt : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TSysRcvFmt_L
                aoSysRcvFmtLng = C_PRCaListSysRcvFmtLng(poSysRcvFmt.roItem.raSysRcvFmtLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysRcvFmtLng = new cDataReaderAdapter<cmlTSysRcvFmtTmp_L>(aoSysRcvFmtLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysRcvFmtLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysRcvFmtTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysRcvFmtLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysRcvFmt : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE FMT ");
                oSql.AppendLine("FROM TSysRcvFmt FMT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysRcvFmtTmp FMTT WITH(NOLOCK) ON FMT.FTFmtCode = FMTT.FTFmtCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysRcvFmt");
                oSql.AppendLine("SELECT * FROM TSysRcvFmtTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysRcvFmtTmp");
                oSql.AppendLine();
                oSql.AppendLine("DELETE FMTL ");
                oSql.AppendLine("FROM TSysRcvFmt_L FMTL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysRcvFmtTmp_L FMTLT WITH(NOLOCK) ON FMTL.FTFmtCode = FMTLT.FTFmtCode");
                oSql.AppendLine("   AND FMTL.FNLngID = FMTLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysRcvFmt_L");
                oSql.AppendLine("SELECT * FROM TSysRcvFmtTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysRcvFmtTmp_L");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysRcvFmt : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysRcvFmt : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSysRcvFmt = null;
                oSql = null;
                oTranscation = null;
                aoSysRcvFmt = null;
                aoSysRcvFmtLng = null;
                oSysRcvFmt = null;
                oSysRcvFmtLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System RcvFmt
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysRcvFmtTmp> C_PRCaListSysRcvFmt(List<cmlResInfoSysRcvFmt> paoResSysRcvFmt)
        {
            List<cmlTSysRcvFmtTmp> aoSysRcvFmt = new List<cmlTSysRcvFmtTmp>();

            try
            {
                aoSysRcvFmt = paoResSysRcvFmt.Select(oItem => new cmlTSysRcvFmtTmp()
                {
                    FTFmtCode = oItem.rtFmtCode,
                    FTFmtKbRef = oItem.rtFmtKbRef,
                    FTFmtRef = oItem.rtFmtRef,
                    FTFmtStaAlwKeySum = oItem.rtFmtStaAlwKeySum,
                    FTFmtStaUsed = oItem.rtFmtStaUsed
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysRcvFmt : " + oEx.Message); }
            finally
            {
                paoResSysRcvFmt = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysRcvFmt;
        }

        /// <summary>
        /// Process list System RcvFmt Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysRcvFmtTmp_L> C_PRCaListSysRcvFmtLng(List<cmlResInfoSysRcvFmtLng> paoResSysRcvFmtLng)
        {
            List<cmlTSysRcvFmtTmp_L> aoSysRcvFmt = new List<cmlTSysRcvFmtTmp_L>();

            try
            {
                aoSysRcvFmt = paoResSysRcvFmtLng.Select(oItem => new cmlTSysRcvFmtTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FTFmtCode = oItem.rtFmtCode,
                    FTFmtName = oItem.rtFmtName
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysRcvFmtLng : " + oEx.Message); }
            finally
            {
                paoResSysRcvFmtLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysRcvFmt;
        }

        #endregion End System Rcv Fmt

        #region System Scale

        /// <summary>
        /// Download System Scale
        /// </summary>
        /// <param name="poSysScale"></param>
        //private void C_DWNxSysScale(cmlResListOfcmlResInfoSysScale poSysScale)
        private bool C_DWNbSysScale(cmlResListOfcmlResInfoSysScale poSysScale)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysScaleTmp> aoSysScale;
            cDataReaderAdapter<cmlTSysScaleTmp> oSysScale;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysScaleTmp");
                //oSql.AppendLine("FROM TSysScale WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysScaleTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysScaleTmp FROM TSysScale with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysScaleTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysScaleTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysScaleTmp FROM TSysScale with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysScaleTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysScale' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysScaleTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysScaleTmp FROM TSysScale with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysScaleTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysScale
                aoSysScale = C_PRCaListSysScale(poSysScale.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysScale = new cDataReaderAdapter<cmlTSysScaleTmp>(aoSysScale);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysScale.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysScaleTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysScale);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysScale : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SSL ");
                oSql.AppendLine("FROM TSysScale SSL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysScaleTmp SSLT WITH(NOLOCK) ON SSL.FTSslCode = SSLT.FTSslCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysScale");
                oSql.AppendLine("SELECT * FROM TSysScaleTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysScaleTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysScale : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysScale : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSysScale = null;
                oSql = null;
                oTranscation = null;
                aoSysScale = null;
                oSysScale = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Scale
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysScaleTmp> C_PRCaListSysScale(List<cmlResInfoSysScale> paoResScale)
        {
            List<cmlTSysScaleTmp> aoScale = new List<cmlTSysScaleTmp>();

            try
            {
                aoScale = paoResScale.Select(oItem => new cmlTSysScaleTmp()
                {
                    FTSslCode = oItem.rtSslCode,
                    FTSslComSetting = oItem.rtSslComSetting,
                    FTSslName = oItem.rtSslName,
                    FTSslStaCom = oItem.rtSslStaCom,
                    FTSslStaTCP = oItem.rtSslStaTCP
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysScale : " + oEx.Message); }
            finally
            {
                paoResScale = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoScale;
        }

        #endregion End System Scale

        #region System Scale Map

        /// <summary>
        /// Download System Scale Map
        /// </summary>
        /// <param name="poSysScaleMap"></param>
        //private void C_DWNxSysScaleMap(cmlResListOfcmlResInfoSysScaleMap poSysScaleMap)
        private bool C_DWNbSysScaleMap(cmlResListOfcmlResInfoSysScaleMap poSysScaleMap)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysScaleMapTmp> aoSysScaleMap;
            cDataReaderAdapter<cmlTSysScaleMapTmp> oSysScaleMap;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TSysScaleMapTmp");
                //oSql.AppendLine("FROM TSysScaleMap WITH(ROWLOCK)");

                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysScaleMapTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysScaleMapTmp FROM TSysScaleMap with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysScaleMapTmp");
                ////+++++++++++++++++++++++

                //*Arm 63-01-20 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column ไม่เท่ากันให้ Dorp แล้วสร้างใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysScaleMapTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TSysScaleMapTmp FROM TSysScaleMap with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysScaleMapTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysScaleMap' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TSysScaleMapTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TSysScaleMapTmp FROM TSysScaleMap with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysScaleMapTmp");
                oSql.AppendLine("");
                //+++++++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysScaleMap
                aoSysScaleMap = C_PRCaListSysScaleMap(poSysScaleMap.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysScaleMap = new cDataReaderAdapter<cmlTSysScaleMapTmp>(aoSysScaleMap);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysScaleMap.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysScaleMapTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysScaleMap);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysScaleMap : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE SSM ");
                oSql.AppendLine("FROM TSysScaleMap SSM WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysScaleMapTmp SSMT WITH(NOLOCK) ON SSM.FTSslCode = SSMT.FTSslCode");
                oSql.AppendLine("   AND SSM.FNSsmSeq = SSMT.FNSsmSeq");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysScaleMap");
                oSql.AppendLine("SELECT * FROM TSysScaleMapTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TSysScaleMapTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysScaleMap : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysScaleMap : " + oEx.Message);
                return false;
            }
            //++++++++++++
            finally
            {
                poSysScaleMap = null;
                oSql = null;
                oTranscation = null;
                aoSysScaleMap = null;
                oSysScaleMap = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System ScaleMap
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysScaleMapTmp> C_PRCaListSysScaleMap(List<cmlResInfoSysScaleMap> paoResScaleMap)
        {
            List<cmlTSysScaleMapTmp> aoScaleMap = new List<cmlTSysScaleMapTmp>();

            try
            {
                aoScaleMap = paoResScaleMap.Select(oItem => new cmlTSysScaleMapTmp()
                {
                    FTSslCode = oItem.rtSslCode,
                    FNSsmFixLen = oItem.rnSsmFixLen,
                    FNSsmSeq = oItem.rnSsmSeq,
                    FTsmKey = oItem.rtsmKey,
                    FTSsmChrExtra = oItem.rtSsmChrExtra,
                    FTSsmChrSplit = oItem.rtSsmChrSplit,
                    FTSsmDesc = oItem.rtSsmDesc
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysScaleMap : " + oEx.Message); }
            finally
            {
                paoResScaleMap = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoScaleMap;
        }

        #endregion End System Scale Map

        #region System Sync Data

        /// <summary>
        /// Download System Sync Data
        /// </summary>
        /// <param name="poSysSync"></param>
        //private void C_DWNxSysSyncData(cmlResItemOfcmlResSyncDataDwn poSysSync)
        private bool C_DWNbSysSyncData(cmlResItemOfcmlResSyncDataDwn poSysSync)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysSyncDataTmp> aoSysSyncData;
            List<cmlTSysSyncDataTmp_L> aoSysSyncDataLng;
            List<cmlTSysSyncModuleTmp> aoSysSyncModule;
            cDataReaderAdapter<cmlTSysSyncDataTmp> oSysSyncData;
            cDataReaderAdapter<cmlTSysSyncDataTmp_L> oSysSyncDataLng;
            cDataReaderAdapter<cmlTSysSyncModuleTmp> oSysSyncModule;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                
                ////*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysSyncDataTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysSyncDataTmp FROM TSysSyncData with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysSyncDataTmp");
                //oSql.AppendLine("");
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysSyncDataTmp_L'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TSysSyncDataTmp_L FROM TSysSyncData_L with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TSysSyncDataTmp_L");
                ////+++++++++++++++++++++++
                

                //*Arm 63-07-08 Created Temp
                new cDatabase().C_PRCxCreateDatabaseTmp("TSysSyncData", "TSysSyncDataTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TSysSyncData_L", "TSysSyncDataTmp_L");
                new cDatabase().C_PRCxCreateDatabaseTmp("TSysSyncModule", "TSysSyncModuleTmp");

                //new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysSyncData
                aoSysSyncData = C_PRCaListSysSyncData(poSysSync.roItem.raSyncData);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysSyncData = new cDataReaderAdapter<cmlTSysSyncDataTmp>(aoSysSyncData);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysSyncData.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysSyncDataTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysSyncData);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysSyncData/TSysSyncDataTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                //oTranscation.Commit();

                // Bulk Copy : TSysSyncData_L
                aoSysSyncDataLng = C_PRCaListSysSyncDataLng(poSysSync.roItem.raSyncDataLng);

                //oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysSyncDataLng = new cDataReaderAdapter<cmlTSysSyncDataTmp_L>(aoSysSyncDataLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-23
                    foreach (string tColName in oSysSyncDataLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysSyncDataTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysSyncDataLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysSyncData/TSysSyncDataTmp_L : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                // Bulk Copy : TSysSyncModule //*Arm 63-07-08
                aoSysSyncModule = C_PRCaListSysSyncModule(poSysSync.roItem.raSyncModule);
                oSysSyncModule = new cDataReaderAdapter<cmlTSysSyncModuleTmp>(aoSysSyncModule);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oSysSyncModule.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysSyncModuleTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysSyncModule);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysSyncData/TSysSyncModuleTmp : " + oEx.Message);
                        return false;
                    }
                }

                oTranscation.Commit();

                //// JOIN DELETE & Insert & Drop Table
                //oSql.Clear();
                //oSql.AppendLine("BEGIN TRY");
                //oSql.AppendLine("BEGIN TRANSACTION");
                //oSql.AppendLine("UPDATE SYN SET");
                //oSql.AppendLine("SYN.FNSynSeqNo = SYNT.FNSynSeqNo,");
                //oSql.AppendLine("SYN.FTSynGroup = SYNT.FTSynGroup,");
                //oSql.AppendLine("SYN.FTSynTable = SYNT.FTSynTable,");
                //oSql.AppendLine("SYN.FTSynTable_L = SYNT.FTSynTable_L,");
                //oSql.AppendLine("SYN.FTSynType = SYNT.FTSynType,");
                //oSql.AppendLine("SYN.FNSynSchedule = SYNT.FNSynSchedule,");
                //oSql.AppendLine("SYN.FTSynStaUse = SYNT.FTSynStaUse,");
                //oSql.AppendLine("SYN.FTSynUriDwn = SYNT.FTSynUriDwn,");
                //oSql.AppendLine("SYN.FTSynUriUld = SYNT.FTSynUriUld");
                //oSql.AppendLine("FROM TSysSyncData SYN  WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TSysSyncDataTmp SYNT WITH(NOLOCK) ON SYN.FNSynSeqNo = SYNT.FNSynSeqNo");
                //oSql.AppendLine();
                //oSql.AppendLine("DELETE SYNT ");
                //oSql.AppendLine("FROM TSysSyncData SYN WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TSysSyncDataTmp SYNT WITH(NOLOCK) ON SYN.FNSynSeqNo = SYNT.FNSynSeqNo");
                //oSql.AppendLine();
                //oSql.AppendLine("INSERT INTO TSysSyncData");
                //oSql.AppendLine("SELECT * FROM TSysSyncDataTmp WITH(NOLOCK) ");
                //oSql.AppendLine();
                ////oSql.AppendLine("DROP TABLE TSysSyncDataTmp");
                //oSql.AppendLine();
                //oSql.AppendLine("UPDATE SYNL SET");
                //oSql.AppendLine("SYNL.FNSynSeqNo = SYNLT.FNSynSeqNo,");
                //oSql.AppendLine("SYNL.FNLngID =  SYNLT.FNLngID,");
                //oSql.AppendLine("SYNL.FTSynName = SYNLT.FTSynName,");
                //oSql.AppendLine("SYNL.FTSynRmk = SYNLT.FTSynRmk");
                //oSql.AppendLine("FROM TSysSyncData_L SYNL WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TSysSyncDataTmp_L SYNLT WITH(NOLOCK) ON SYNL.FNSynSeqNo = SYNLT.FNSynSeqNo");
                //oSql.AppendLine("   AND SYNL.FNLngID = SYNLT.FNLngID");
                //oSql.AppendLine();
                //oSql.AppendLine("DELETE SYNLT ");
                //oSql.AppendLine("FROM TSysSyncData_L SYNL WITH(ROWLOCK)");
                //oSql.AppendLine("INNER JOIN TSysSyncDataTmp_L SYNLT WITH(NOLOCK) ON SYNL.FNSynSeqNo = SYNLT.FNSynSeqNo");
                //oSql.AppendLine("   AND SYNL.FNLngID = SYNLT.FNLngID");
                //oSql.AppendLine();
                //oSql.AppendLine("INSERT INTO TSysSyncData_L");
                //oSql.AppendLine("SELECT * FROM TSysSyncDataTmp_L WITH(NOLOCK) ");
                //oSql.AppendLine();
                ////oSql.AppendLine("DROP TABLE TSysSyncDataTmp_L");
                //oSql.AppendLine();
                //oSql.AppendLine("COMMIT TRANSACTION");
                //oSql.AppendLine("END TRY");
                //oSql.AppendLine("BEGIN CATCH");
                //oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                //oSql.AppendLine("       ROLLBACK TRAN;");
                //oSql.AppendLine("   THROW;");
                //oSql.AppendLine("END CATCH");

                //new cDatabase().C_SETxDataQuery(oSql.ToString());

                //*Arm 63-07-08 
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine();
                //TSysSyncData
                oSql.AppendLine("DELETE SYN ");
                oSql.AppendLine("FROM TSysSyncData SYN WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysSyncDataTmp SYNTmp WITH(NOLOCK) ON SYN.FNSynSeqNo = SYNTmp.FNSynSeqNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysSyncData");
                oSql.AppendLine("SELECT * FROM TSysSyncDataTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //TSysSyncData_L
                oSql.AppendLine("DELETE SYNL ");
                oSql.AppendLine("FROM TSysSyncData_L SYNL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysSyncDataTmp_L SYNLTmp WITH(NOLOCK) ON SYNL.FNSynSeqNo = SYNLTmp.FNSynSeqNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysSyncData_L");
                oSql.AppendLine("SELECT * FROM TSysSyncDataTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //TSysSyncModule
                oSql.AppendLine("DELETE SYNMD ");
                oSql.AppendLine("FROM TSysSyncModule SYNMD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysSyncModuleTmp SYNMDTmp WITH(NOLOCK) ON SYNMD.FNSynSeqNo = SYNMDTmp.FNSynSeqNo AND SYNMD.FTAppCode = SYNMDTmp.FTAppCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysSyncModule");
                oSql.AppendLine("SELECT * FROM TSysSyncModuleTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");
                new cDatabase().C_SETxDataQuery(oSql.ToString());
                //++++++++++++++
                return true;
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxSysSyncData : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysSyncData : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSysSync = null;
                oSql = null;
                oTranscation = null;
                aoSysSyncData = null;
                aoSysSyncDataLng = null;
                oSysSyncData = null;
                oSysSyncDataLng = null;
                oSysSyncModule = null;
                aoSysSyncModule = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list System Sync Data
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysSyncDataTmp> C_PRCaListSysSyncData(List<cmlResInfoSyncData> paoResSysSyncData)
        {
            List<cmlTSysSyncDataTmp> aoSysSyncData = new List<cmlTSysSyncDataTmp>();

            try
            {
                aoSysSyncData = paoResSysSyncData.Select(oItem => new cmlTSysSyncDataTmp()
                {
                    FNSynSeqNo = oItem.rnSynSeqNo,
                    FDSynLast = oItem.rdSynLast,
                    FNSynSchedule = oItem.rnSynSchedule,
                    FTSynGroup = oItem.rtSynGroup,
                    FTSynStaUse = oItem.rtSynStaUse,
                    FTSynTable = oItem.rtSynTable,
                    FTSynTable_L = oItem.rtSynTable_L,
                    FTSynType = oItem.rtSynType,
                    FTSynUriDwn = oItem.rtSynUriDwn,
                    FTSynUriUld = oItem.rtSynUriUld
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysSyncData : " + oEx.Message); }
            finally
            {
                paoResSysSyncData = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysSyncData;
        }

        /// <summary>
        /// Process list System Sync Data Language
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysSyncDataTmp_L> C_PRCaListSysSyncDataLng(List<cmlResInfoSyncDataLng> paoResSysSyncDataLng)
        {
            List<cmlTSysSyncDataTmp_L> aoSysSyncData = new List<cmlTSysSyncDataTmp_L>();

            try
            {
                aoSysSyncData = paoResSysSyncDataLng.Select(oItem => new cmlTSysSyncDataTmp_L()
                {
                    FNLngID = oItem.rnLngID,
                    FNSynSeqNo = oItem.rnSynSeqNo,
                    FTSynName = oItem.rtSynName,
                    FTSynRmk = oItem.rtSynRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysSyncDataLng : " + oEx.Message); }
            finally
            {
                paoResSysSyncDataLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoSysSyncData;
        }

        /// <summary>
        /// Process list System Sync Module
        /// </summary>
        /// <param name="paoResSysSyncModule"></param>
        /// <returns></returns>
        private List<cmlTSysSyncModuleTmp> C_PRCaListSysSyncModule(List<cmlResInfoSyncModule> paoResSysSyncModule)
        {
            List<cmlTSysSyncModuleTmp> aoData = new List<cmlTSysSyncModuleTmp>();

            try
            {
                aoData = paoResSysSyncModule.Select(oItem => new cmlTSysSyncModuleTmp()
                {
                    FTAppCode = oItem.rtAppCode,
                    FNSynSeqNo = oItem.rnSynSeqNo
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysSyncModule : " + oEx.Message); }
            finally
            {
                paoResSysSyncModule = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        #endregion End Supplier Sync Data

        #region Product Price for Product

        /// <summary>
        /// Download Product Price  for Product
        /// </summary>
        /// <param name="poPdtPrice4PDT"></param>
        //private void C_DWNxPdtPrice4PDT(cmlResListOfcmlResInfoPdtApv4Pdt poPdtPrice4PDT)
        private bool C_DWNbPdtPrice4PDT(cmlResListOfcmlResInfoPdtApv4Pdt poPdtPrice4PDT)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNTPdtPrice4PDTTmp> aoPdtPrice4PDT;
            cDataReaderAdapter<cmlTCNTPdtPrice4PDTTmp> oPdtPrice4PDT;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTPdtPrice4PDTTmp");
                //oSql.AppendLine("FROM TCNTPdtPrice4PDT WITH(ROWLOCK)");

                //*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPrice4PDTTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTPdtPrice4PDTTmp FROM TCNTPdtPrice4PDT with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTPdtPrice4PDTTmp");
                //+++++++++++++++++++++++
                //*Arm 63-01-17  [Comment Code เดิม]

                //*Arm 63-01-17 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column Temp ไม่เท่ากันกับ Table หลัก ให้ Dorp Temp แล้วสร้าง Temp ใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPrice4PDTTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPrice4PDTTmp FROM TCNTPdtPrice4PDT with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPrice4PDTTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPrice4PDT' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPrice4PDTTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPrice4PDTTmp FROM TCNTPdtPrice4PDT with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPrice4PDTTmp");

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNTPdtPrice4PDT
                aoPdtPrice4PDT = C_PRCaListPdtPrice4PDT(poPdtPrice4PDT.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPrice4PDT = new cDataReaderAdapter<cmlTCNTPdtPrice4PDTTmp>(aoPdtPrice4PDT);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtPrice4PDT.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPrice4PDTTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPrice4PDT);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPrice4PDT : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE PDT ");
                oSql.AppendLine("FROM TCNTPdtPrice4PDT PDT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPrice4PDTTmp PDTT WITH(NOLOCK) ON PDT.FTPdtCode = PDTT.FTPdtCode");
                oSql.AppendLine("   AND PDT.FTPunCode = PDTT.FTPunCode");
                oSql.AppendLine("   AND PDT.FDPghDStart = PDTT.FDPghDStart");
                oSql.AppendLine("   AND PDT.FTPghTStart = PDTT.FTPghTStart");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPrice4PDT");
                oSql.AppendLine("SELECT * FROM TCNTPdtPrice4PDTTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPrice4PDTTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtPrice4PDT : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPrice4PDT : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poPdtPrice4PDT = null;
                oSql = null;
                oTranscation = null;
                aoPdtPrice4PDT = null;
                oPdtPrice4PDT = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Price  for Product
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPrice4PDTTmp> C_PRCaListPdtPrice4PDT(List<cmlResInfoPdtApv4Pdt> paoResScaleMap)
        {
            List<cmlTCNTPdtPrice4PDTTmp> aoScaleMap = new List<cmlTCNTPdtPrice4PDTTmp>();

            try
            {
                aoScaleMap = paoResScaleMap.Select(oItem => new cmlTCNTPdtPrice4PDTTmp()
                {
                    //FCPgdPriceNet = oItem.rcPgdPriceNet, //*Arm 63-06-16 Comment Code
                    FCPgdPriceRet = oItem.rcPgdPriceRet,
                    //FCPgdPriceWhs = oItem.rcPgdPriceWhs, //*Arm 63-06-16 Comment Code
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FDPghDStart = oItem.rdPghDStart,
                    FDPghDStop = oItem.rdPghDStop,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPghDocNo = oItem.rtPghDocNo,
                    FTPghDocType = oItem.rtPghDocType,
                    FTPghStaAdj = oItem.rtPghStaAdj,
                    FTPghTStart = oItem.rtPghTStart,
                    FTPghTStop = oItem.rtPghTStop,
                    FTPunCode = oItem.rtPunCode,
                    FTPplCode = oItem.rtPplCode,     //*Arm 63-03-26
                    FTLastUpdBy = oItem.rtLastUpdBy, //*Arm 63-03-26
                    FDCreateOn = oItem.rdCreateOn,   //*Arm 63-03-26
                    FTCreateBy = oItem.rtCreateBy    //*Arm 63-03-26
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPrice4PDT : " + oEx.Message); }
            finally
            {
                paoResScaleMap = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoScaleMap;
        }

        #endregion End Product Price  for Product

        #region Product Price for Customer

        /// <summary>
        /// Download Product Price  for Customer
        /// </summary>
        /// <param name="poPdtPrice4CST"></param>
        //private void C_DWNxPdtPrice4CST(cmlResListOfcmlResInfoPdtApv4Cst poPdtPrice4CST)
        private bool C_DWNbPdtPrice4CST(cmlResListOfcmlResInfoPdtApv4Cst poPdtPrice4CST)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNTPdtPrice4CSTTmp> aoPdtPrice4CST;
            cDataReaderAdapter<cmlTCNTPdtPrice4CSTTmp> oPdtPrice4CST;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                //oSql.AppendLine("SELECT TOP(0) *");
                //oSql.AppendLine("INTO TCNTPdtPrice4CSTTmp");
                //oSql.AppendLine("FROM TCNTPdtPrice4CST WITH(ROWLOCK)");

                //*Em 61-11-13 ++++++++++
                //oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPrice4CSTTmp'))");
                //oSql.AppendLine("BEGIN");
                //oSql.AppendLine("	SELECT TOP 0 * INTO TCNTPdtPrice4CSTTmp FROM TCNTPdtPrice4CST with(nolock)");
                //oSql.AppendLine("END");
                //oSql.AppendLine("TRUNCATE TABLE TCNTPdtPrice4CSTTmp");
                //+++++++++++++++++++++++
                //*Arm 63-01-17 [comment Code]

                //*Arm 63-01-17 เพิ่มโค้ดเช็ค Column TableTemp ถ้า Column Temp ไม่เท่ากันกับ Table หลัก ให้ Dorp Temp แล้วสร้าง Temp ใหม่
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNTPdtPrice4CSTTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       SELECT TOP 0 * INTO TCNTPdtPrice4CSTTmp FROM TCNTPdtPrice4CST with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPrice4CSTTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNTPdtPrice4CST' ),0) ");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("           DROP TABLE TCNTPdtPrice4CSTTmp");
                oSql.AppendLine("           SELECT TOP 0 * INTO TCNTPdtPrice4CSTTmp FROM TCNTPdtPrice4CST with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNTPdtPrice4CSTTmp");



                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TCNTPdtPrice4CST
                aoPdtPrice4CST = C_PRCaListPdtPrice4CST(poPdtPrice4CST.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPdtPrice4CST = new cDataReaderAdapter<cmlTCNTPdtPrice4CSTTmp>(aoPdtPrice4CST);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 61-11-16
                    foreach (string tColName in oPdtPrice4CST.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNTPdtPrice4CSTTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPdtPrice4CST);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPrice4CST : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE CST ");
                oSql.AppendLine("FROM TCNTPdtPrice4CST CST WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNTPdtPrice4CSTTmp CSTT WITH(NOLOCK) ON CST.FTPdtCode = CSTT.FTPdtCode");
                oSql.AppendLine("   AND CST.FTPunCode = CSTT.FTPunCode");
                oSql.AppendLine("   AND CST.FDPghDStart = CSTT.FDPghDStart");
                oSql.AppendLine("   AND CST.FTPghTStart = CSTT.FTPghTStart");
                oSql.AppendLine("   AND CST.FTPplCode = CSTT.FTPplCode");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNTPdtPrice4CST");
                oSql.AppendLine("SELECT * FROM TCNTPdtPrice4CSTTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //oSql.AppendLine("DROP TABLE TCNTPdtPrice4CSTTmp");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            //catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_DWNxPdtPrice4CST : " + oEx.Message); }
            //*Em 61-11-15
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPdtPrice4CST : " + oEx.Message);
                return false;
            }
            //++++++++++++++
            finally
            {
                poPdtPrice4CST = null;
                oSql = null;
                oTranscation = null;
                aoPdtPrice4CST = null;
                oPdtPrice4CST = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process list Price  for Customer
        /// </summary>
        /// <returns></returns>
        private List<cmlTCNTPdtPrice4CSTTmp> C_PRCaListPdtPrice4CST(List<cmlResInfoPdtApv4Cst> paoResScaleMap)
        {
            List<cmlTCNTPdtPrice4CSTTmp> aoScaleMap = new List<cmlTCNTPdtPrice4CSTTmp>();

            try
            {
                aoScaleMap = paoResScaleMap.Select(oItem => new cmlTCNTPdtPrice4CSTTmp()
                {
                    FTPplCode = oItem.rtPplCode,
                    FCPgdPriceNet = oItem.rcPgdPriceNet,
                    FCPgdPriceRet = oItem.rcPgdPriceRet,
                    FCPgdPriceWhs = oItem.rcPgdPriceWhs,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FDPghDStart = oItem.rdPghDStart,
                    FDPghDStop = oItem.rdPghDStop,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPghDocNo = oItem.rtPghDocNo,
                    FTPghDocType = oItem.rtPghDocType,
                    FTPghStaAdj = oItem.rtPghStaAdj,
                    FTPghTStart = oItem.rtPghTStart,
                    FTPghTStop = oItem.rtPghTStop,
                    FTPunCode = oItem.rtPunCode
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPdtPrice4CST : " + oEx.Message); }
            finally
            {
                paoResScaleMap = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoScaleMap;
        }

        #endregion End Product Price  for Customer

        #region Merchant
        private bool C_DWNbMerchant(cmlResItemOfcmlResMerchant poMerchant)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMMerchantTmp> aoMerchant;
            List<cmlTCNMMerchantTmp_L> aoMerchantLng;
            List<cmlTCNMAddressTmp_L> aoAddrLng;    //*Em 62-10-04
            cDataReaderAdapter<cmlTCNMMerchantTmp> oMerchant;
            cDataReaderAdapter<cmlTCNMMerchantTmp_L> oMerchantLng;
            cDataReaderAdapter<cmlTCNMAddressTmp_L> oAddrLng;   //*Em 62-10-04

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMMerchantTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMMerchantTmp FROM TCNMMerchant with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMMerchantTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMMerchant' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMMerchantTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMMerchantTmp FROM TCNMMerchant with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMMerchantTmp");
                oSql.AppendLine();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMMerchantTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMMerchantTmp_L FROM TCNMMerchant_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMMerchantTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMMerchant_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMMerchantTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMMerchantTmp_L FROM TCNMMerchant_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMMerchantTmp_L");
                oSql.AppendLine("");

                //*Em 62-10-04
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMAddressTmp_L'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddressTmp_L' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMAddress_L' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMAddressTmp_L");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMAddressTmp_L FROM TCNMAddress_L with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMAddressTmp_L");
                //++++++++++++++++++

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysRcvFmt
                aoMerchant = C_PRCaListMerchant(poMerchant.roItem.raTCNMMerchant);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oMerchant = new cDataReaderAdapter<cmlTCNMMerchantTmp>(aoMerchant);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oMerchant.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMMerchantTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oMerchant);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbMerchant/TCNMMerchantTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }
                // Bulk Copy : TSysRcvFmt_L
                aoMerchantLng = C_PRCaListMerchantLng(poMerchant.roItem.raTCNMMerchant_L);
                oMerchantLng = new cDataReaderAdapter<cmlTCNMMerchantTmp_L>(aoMerchantLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oMerchantLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMMerchantTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oMerchantLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbMerchant/TCNMMerchantTmp_L : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                // Bulk Copy : TCNMAddress_L
                aoAddrLng = C_PRCaListAddressLng(poMerchant.roItem.raAddrLng);
                oAddrLng = new cDataReaderAdapter<cmlTCNMAddressTmp_L>(aoAddrLng);
                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-06-26
                    foreach (string tColName in oAddrLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //++++++++++++++

                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMAddressTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oAddrLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbMerchant/TCNMAddressTmp_L : " + oEx.Message);
                        return false;
                    }
                }
                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("   BEGIN TRANSACTION");
                oSql.AppendLine("   DELETE MER ");
                oSql.AppendLine("   FROM TCNMMerchant MER WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TCNMMerchantTmp MERT WITH(NOLOCK) ON MER.FTMerCode = MERT.FTMerCode");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMMerchant");
                oSql.AppendLine("   SELECT * FROM TCNMMerchantTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   DELETE MCL ");
                oSql.AppendLine("   FROM TCNMMerchant_L MCL WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TCNMMerchantTmp_L MCLT WITH(NOLOCK) ON MCL.FTMerCode = MCLT.FTMerCode");
                oSql.AppendLine("   AND MCL.FNLngID = MCLT.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMMerchant_L");
                oSql.AppendLine("   SELECT * FROM TCNMMerchantTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //*Em 62-10-04
                oSql.AppendLine("DELETE ADDR ");
                oSql.AppendLine("FROM TCNMAddress_L ADDR WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMAddressTmp_L ADDRT WITH(NOLOCK) ON ADDR.FTAddGrpType = ADDRT.FTAddGrpType");
                oSql.AppendLine("   AND ADDR.FTAddRefCode = ADDRT.FTAddRefCode");
                //oSql.AppendLine("   AND ADDR.FNAddSeqNo = ADDRT.FNAddSeqNo");       //*Arm 63-04-09 Comment
                oSql.AppendLine("   AND ADDR.FTAddRefNo = ADDRT.FTAddRefNo");       //*Arm 63-04-09
                oSql.AppendLine("   AND ADDR.FNLngID = ADDRT.FNLngID");

                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMAddress_L");
                oSql.AppendLine("(FNLngID,FTAddGrpType,FTAddRefCode,FTAddRefNo,FTAddName,FTAddTaxNo,FTAddRmk,FTAddCountry,FTAddVersion,");
                oSql.AppendLine("FTAddV1No,FTAddV1Soi,FTAddV1Village,FTAddV1Road,FTAddV1SubDist,FTAddV1DstCode,FTAddV1PvnCode,FTAddV1PostCode,FTAddV2Desc1,");
                oSql.AppendLine("FTAddV2Desc2,FTAddWebsite,FTAddLongitude,FTAddLatitude,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)");
                oSql.AppendLine("SELECT FNLngID,FTAddGrpType,FTAddRefCode,FTAddRefNo,FTAddName,FTAddTaxNo,FTAddRmk,FTAddCountry,FTAddVersion,");
                oSql.AppendLine("FTAddV1No,FTAddV1Soi,FTAddV1Village,FTAddV1Road,FTAddV1SubDist,FTAddV1DstCode,FTAddV1PvnCode,FTAddV1PostCode,FTAddV2Desc1,");
                oSql.AppendLine("FTAddV2Desc2,FTAddWebsite,FTAddLongitude,FTAddLatitude,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy");
                oSql.AppendLine("FROM TCNMAddressTmp_L WITH(NOLOCK)");
                //++++++++++++++
                oSql.AppendLine("   COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbMerchant : " + oEx.Message);
                return false;
            }
            finally
            {
                poMerchant = null;
                oSql = null;
                oTranscation = null;
                aoMerchant = null;
                aoMerchantLng = null;
                oMerchant = null;
                oMerchantLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        private List<cmlTCNMMerchantTmp> C_PRCaListMerchant(List<cmlTCNMMerchant> paoMerchant)
        {
            List<cmlTCNMMerchantTmp> aoData = new List<cmlTCNMMerchantTmp>();

            try
            {
                aoData = paoMerchant.Select(oItem => new cmlTCNMMerchantTmp()
                {
                    FTMerCode = oItem.rtMerCode,
                    FTMerEmail = oItem.rtMerEmail,
                    FTMerTel = oItem.rtMerTel,
                    FTMerFax = oItem.rtMerFax,
                    FTMerMo = oItem.rtMerMo,
                    FTMerStaActive = oItem.rtMerStaActive,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FTMerRefCode = oItem.rtMerRefCode,  //*Arm 63-06-17
                    FTPplCode = oItem.rtPplCode         //*Arm 63-06-17
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListMerchant : " + oEx.Message); }
            finally
            {
                paoMerchant = null;
                //oC_SP.SP_CLExMemory();

            }

            return aoData;
        }

        private List<cmlTCNMMerchantTmp_L> C_PRCaListMerchantLng(List<cmlTCNMMerchant_L> paoMerchantLng)
        {
            List<cmlTCNMMerchantTmp_L> aoData = new List<cmlTCNMMerchantTmp_L>();

            try
            {
                aoData = paoMerchantLng.Select(oItem => new cmlTCNMMerchantTmp_L()
                {
                    FTMerCode = oItem.rtMerCode,
                    FNLngID = oItem.rnLngID,
                    FTMerName = oItem.rtMerName,
                    FTMerRmk = oItem.rtMerRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListMerchantLng : " + oEx.Message); }
            finally
            {
                paoMerchantLng = null;
                //oC_SP.SP_CLExMemory();

            }

            return aoData;
        }
        #endregion End Merchant

        #region CostAvg
        private bool C_DWNbCostAvg(cmlResListOfcmlTCNMPdtCostAvg poCostAvg)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPdtCostAvgTmp> aoCostAvg;
            cDataReaderAdapter<cmlTCNMPdtCostAvgTmp> oCostAvg;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPdtCostAvgTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPdtCostAvgTmp FROM TCNMPdtCostAvg with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtCostAvgTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPdtCostAvg' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPdtCostAvgTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPdtCostAvgTmp FROM TCNMPdtCostAvg with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPdtCostAvgTmp");

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysRcvFmt
                aoCostAvg = C_PRCaListCostAvg(poCostAvg.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oCostAvg = new cDataReaderAdapter<cmlTCNMPdtCostAvgTmp>(aoCostAvg);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oCostAvg.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPdtCostAvgTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCostAvg);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbCostAvg/TCNMPdtCostAvgTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("   BEGIN TRANSACTION");
                oSql.AppendLine("   DELETE COA ");
                oSql.AppendLine("   FROM TCNMPdtCostAvg COA WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TCNMPdtCostAvgTmp COAT WITH(NOLOCK) ON COA.FTPdtCode = COAT.FTPdtCode");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMPdtCostAvg");
                oSql.AppendLine("   SELECT * FROM TCNMPdtCostAvgTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbCostAvg : " + oEx.Message);
                return false;
            }
            finally
            {
                poCostAvg = null;
                oSql = null;
                oTranscation = null;
                aoCostAvg = null;
                oCostAvg = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        private List<cmlTCNMPdtCostAvgTmp> C_PRCaListCostAvg(List<cmlTCNMPdtCostAvg> paoCostAvg)
        {
            List<cmlTCNMPdtCostAvgTmp> aoData = new List<cmlTCNMPdtCostAvgTmp>();

            try
            {
                aoData = paoCostAvg.Select(oItem => new cmlTCNMPdtCostAvgTmp()
                {
                    FTPdtCode = oItem.rtPdtCode,
                    FCPdtCostEx = oItem.rcPdtCostEx,
                    FCPdtCostIn = oItem.rcPdtCostIn,
                    FCPdtQtyBal = oItem.rcPdtQtyBal,
                    FCPdtCostAmt = oItem.rcPdtCostAmt,
                    FCPdtCostLast = oItem.rcPdtCostLast,
                    FDLastUpdOn = oItem.rdLastUpdOn
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListCostAvg : " + oEx.Message); }
            finally
            {
                paoCostAvg = null;
                //oC_SP.SP_CLExMemory();

            }

            return aoData;
        }
        #endregion End CostAvg

        #region PosAds
        private bool C_DWNbPosAds(cmlResListOfcmlTCNMPosAds poPosAds)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTCNMPosAdsTmp> aoPosAds;
            cDataReaderAdapter<cmlTCNMPosAdsTmp> oPosAds;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TCNMPosAdsTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TCNMPosAdsTmp FROM TCNMPosAds with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPosAdsTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TCNMPosAds' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TCNMPosAdsTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TCNMPosAdsTmp FROM TCNMPosAds with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TCNMPosAdsTmp");

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysRcvFmt
                aoPosAds = C_PRCaListPosAds(poPosAds.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oPosAds = new cDataReaderAdapter<cmlTCNMPosAdsTmp>(aoPosAds);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oPosAds.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMPosAdsTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oPosAds);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbPosAds/TCNMPosAdsTmp : " + oEx.Message);//*Em 61-11-15
                        return false;//*Em 61-11-15
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("   BEGIN TRANSACTION");
                //Net 63-07-30 เคลียร์ตาราง insert ใหม่
                //oSql.AppendLine("   DELETE PAD ");
                //oSql.AppendLine("   FROM TCNMPosAds PAD WITH(ROWLOCK)");
                //oSql.AppendLine("   INNER JOIN TCNMPosAdsTmp PADT WITH(NOLOCK) ON PAD.FTBchCode = PADT.FTBchCode");
                //oSql.AppendLine("   AND PAD.FTShpCode = PADT.FTShpCode AND PAD.FTPosCode = PADT.FTPosCode");
                //oSql.AppendLine("   AND PAD.FNPsdSeq = PADT.FNPsdSeq");
                oSql.AppendLine("TRUNCATE TABLE TCNMPosAds");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TCNMPosAds");
                oSql.AppendLine("   SELECT * FROM TCNMPosAdsTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());
                return true;//*Em 61-11-15
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbPosAds : " + oEx.Message);
                return false;
            }
            finally
            {
                poPosAds = null;
                oSql = null;
                oTranscation = null;
                aoPosAds = null;
                oPosAds = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        private List<cmlTCNMPosAdsTmp> C_PRCaListPosAds(List<cmlTCNMPosAds> paoPosAds)
        {
            List<cmlTCNMPosAdsTmp> aoData = new List<cmlTCNMPosAdsTmp>();

            try
            {
                aoData = paoPosAds.Select(oItem => new cmlTCNMPosAdsTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTShpCode = oItem.rtShpCode,
                    FTPosCode = oItem.rtPosCode,
                    FNPsdSeq = oItem.rnPsdSeq,
                    FTPsdPosition = oItem.rtPsdPosition,
                    FTAdvCode = oItem.rtAdvCode,
                    FNPsdWide = oItem.rnPsdWide,
                    FNPsdHigh = oItem.rnPsdHigh,
                    FDPsdStart = oItem.rdPsdStart,
                    FDPsdStop = oItem.rdPsdStop,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListPosAds : " + oEx.Message); }
            finally
            {
                paoPosAds = null;
                //oC_SP.SP_CLExMemory();

            }

            return aoData;
        }
        #endregion End PosAds

        #region SysRcvApp
        //*Arm 62-10-04  
        //*Arm 63-01-10 ปิดการใช้งาน
        //private bool C_DWNbSysRcvApp(cmlResListOfcmlTSysRcvApp poSysRcvApp)
        //{
        //    StringBuilder oSql;
        //    SqlTransaction oTranscation;
        //    List<cmlTSysRcvAppTmp> aoSysRcvApp;
        //    cDataReaderAdapter<cmlTSysRcvAppTmp> oSysRcvApp;

        //    try
        //    {
        //        // Create Tmp
        //        oSql = new StringBuilder();
        //        oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysRcvAppTmp'))");
        //        oSql.AppendLine("   BEGIN");
        //        oSql.AppendLine("	    SELECT TOP 0 * INTO TSysRcvAppTmp FROM TSysRcvApp with(nolock)");
        //        oSql.AppendLine("   END");
        //        oSql.AppendLine("ELSE");
        //        oSql.AppendLine("   BEGIN");
        //        oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRcvAppTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRcvApp' ),0)");
        //        oSql.AppendLine("       BEGIN");
        //        oSql.AppendLine("   	    DROP TABLE TSysRcvAppTmp");
        //        oSql.AppendLine("   	    SELECT TOP 0 * INTO TSysRcvAppTmp FROM TSysRcvApp with(nolock)");
        //        oSql.AppendLine("       END");
        //        oSql.AppendLine("   END");
        //        oSql.AppendLine("TRUNCATE TABLE TSysRcvAppTmp");

        //        new cDatabase().C_SETxDataQuery(oSql.ToString());

        //        // Bulk Copy : TSysRcvApp
        //        aoSysRcvApp = C_PRCaListSysRcvApp(poSysRcvApp.raItems);

        //        oTranscation = cVB.oVB_ConnDB.BeginTransaction();
        //        oSysRcvApp = new cDataReaderAdapter<cmlTSysRcvAppTmp>(aoSysRcvApp);

        //        using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
        //        {
        //            foreach (string tColName in oSysRcvApp.ColumnNames)
        //            {
        //                oBulkCopy.ColumnMappings.Add(tColName, tColName);
        //            }
        //            oBulkCopy.BatchSize = 100;
        //            oBulkCopy.DestinationTableName = "dbo.TSysRcvAppTmp";

        //            try
        //            {
        //                oBulkCopy.WriteToServer(oSysRcvApp);
        //            }
        //            catch (Exception oEx)
        //            {
        //                oTranscation.Rollback();
        //                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysRcvApp/TSysRcvAppTmp : " + oEx.Message);
        //                return false;
        //            }
        //        }

        //        oTranscation.Commit();

        //        // JOIN DELETE & Insert & Drop Table
        //        oSql.Clear();
        //        oSql.AppendLine("BEGIN TRY");
        //        oSql.AppendLine("   BEGIN TRANSACTION");
        //        oSql.AppendLine("   DELETE RCA ");
        //        oSql.AppendLine("   FROM TSysRcvApp RCA WITH(ROWLOCK)");
        //        oSql.AppendLine("   INNER JOIN TSysRcvAppTmp RCAT WITH(NOLOCK) ON RCA.FTAppCode = RCAT.FTAppCode ");
        //        oSql.AppendLine();
        //        oSql.AppendLine("   INSERT INTO TSysRcvApp");
        //        oSql.AppendLine("   SELECT * FROM TSysRcvAppTmp WITH(NOLOCK) ");
        //        oSql.AppendLine();
        //        oSql.AppendLine("   COMMIT TRANSACTION");
        //        oSql.AppendLine("END TRY");
        //        oSql.AppendLine("BEGIN CATCH");
        //        oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
        //        oSql.AppendLine("       ROLLBACK TRAN;");
        //        oSql.AppendLine("   THROW;");
        //        oSql.AppendLine("END CATCH");

        //        new cDatabase().C_SETxDataQuery(oSql.ToString());

        //        return true;
        //    }

        //    catch (Exception oEx)
        //    {
        //        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysRcvApp : " + oEx.Message);
        //        return false;
        //    }
        //    //+++++++++++++
        //    finally
        //    {
        //        poSysRcvApp = null;
        //        oSql = null;
        //        oTranscation = null;
        //        aoSysRcvApp = null;
        //        oSysRcvApp = null;
        //        //oC_SP.SP_CLExMemory();
        //    }
        //}
        ///// <summary>
        ///// Process list System Receive payment by Application
        ///// </summary>
        ///// <returns></returns>
        //private List<cmlTSysRcvAppTmp> C_PRCaListSysRcvApp(List<cmlTSysRcvApp> paoSysRcvApp)
        //{
        //    List<cmlTSysRcvAppTmp> aoData = new List<cmlTSysRcvAppTmp>();

        //    try
        //    {
        //        aoData = paoSysRcvApp.Select(oItem => new cmlTSysRcvAppTmp()
        //        {
        //            FTAppCode = oItem.rtAppCode,
        //            FNAppSeq = oItem.rnAppSeq,
        //            FTFmtCode = oItem.rtFmtCode,
        //            FNLngID = oItem.rnLngID,
        //            FTAppName = oItem.rtAppName,
        //            FTAppStaAlwRet = oItem.rtAppStaAlwRet,
        //            FTAppStaAlwCancel = oItem.rtAppStaAlwCancel,
        //            FTAppStaPayLast = oItem.rtAppStaPayLast

        //        }).ToList();
        //    }
        //    catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysRcvApp : " + oEx.Message); }
        //    finally
        //    {
        //        paoSysRcvApp = null;
        //        //oC_SP.SP_CLExMemory();
        //    }

        //    return aoData;
        //}
        #endregion End SysRcvApp

        #region SysRcvConfig
        //*Arm 62-10-04
        private bool C_DWNbSysRcvConfig(cmlResListOfcmlTSysRcvConfig poSysRcvConfig)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTSysRcvConfigTmp> aoSysRcvConfig;
            cDataReaderAdapter<cmlTSysRcvConfigTmp> oSysRcvConfig;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TSysRcvConfigTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TSysRcvConfigTmp FROM TSysRcvConfig with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRcvConfigTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TSysRcvConfig' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TSysRcvConfigTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TSysRcvConfigTmp FROM TSysRcvConfig with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TSysRcvConfigTmp");


                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysRcvConfig
                aoSysRcvConfig = C_PRCaListSysRcvConfig(poSysRcvConfig.raItems);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oSysRcvConfig = new cDataReaderAdapter<cmlTSysRcvConfigTmp>(aoSysRcvConfig);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oSysRcvConfig.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysRcvConfigTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oSysRcvConfig);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbSysRcvConfig/TSysRcvConfigTmp : " + oEx.Message);
                        return false;
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("   BEGIN TRANSACTION");
                oSql.AppendLine("   DELETE SRC ");
                oSql.AppendLine("   FROM TSysRcvConfig SRC WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TSysRcvConfigTmp SRCT WITH(NOLOCK) ON SRC.FTFmtCode = SRCT.FTFmtCode ");
                //oSql.AppendLine("   AND SRC.FNSysSeq = SRCT.FNSysSeq");
                //oSql.AppendLine("   AND SRC.FTSysKey = SRCT.FTSysKey");// primary : FTAppCode, FNAppSeq, FTFmtCode, FNLngID
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TSysRcvConfig");
                oSql.AppendLine("   SELECT * FROM TSysRcvConfigTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                return true;
            }

            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbSysRcvConfig : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poSysRcvConfig = null;
                oSql = null;
                oTranscation = null;
                aoSysRcvConfig = null;
                oSysRcvConfig = null;
                //oC_SP.SP_CLExMemory();
            }
        }
        /// <summary>
        /// Process list System Receive Config
        /// </summary>
        /// <returns></returns>
        private List<cmlTSysRcvConfigTmp> C_PRCaListSysRcvConfig(List<cmlTSysRcvConfig> paoSysRcvConfig)
        {
            List<cmlTSysRcvConfigTmp> aoData = new List<cmlTSysRcvConfigTmp>();

            try
            {
                aoData = paoSysRcvConfig.Select(oItem => new cmlTSysRcvConfigTmp()
                {

                    FTFmtCode = oItem.rtFmtCode,
                    FNSysSeq = oItem.rnSysSeq,
                    FTSysKey = oItem.rtSysKey,
                    FTSysStaUsrValue = oItem.rtSysStaUsrValue,
                    FTSysStaUsrRef = oItem.rtSysStaUsrRef,
                    FTBchCode = oItem.rtBchCode

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysRcvConfig : " + oEx.Message); }
            finally
            {
                paoSysRcvConfig = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        #endregion End SysRcvConfig

        #region Upload
        /// <summary>
        /// Process Sync Upload
        /// </summary>
        //public void C_PRCxSyncUld()  //*Net 63-05-24 เลือกว่าจะส่งข้อมูล Sal จาก Tmp หรือ Transaction
        public void C_PRCxSyncUld(bool pbUpdTblSalTmp = false)
        {
            ManualResetEvent oManualThread;
            BackgroundWorker oBGWorker;

            try
            {
                oManualThread = new ManualResetEvent(false);
                oBGWorker = new BackgroundWorker();
                oBGWorker.DoWork += delegate
                {
                    try
                    {
                        oC_SP = new cSP();
                        oC_ResourceEN = new ResourceManager(typeof(resMsgRemind_EN));
                        oC_ResourceTH = new ResourceManager(typeof(resMsgRemind_TH));

                        C_PRCxUpload(pbUpdTblSalTmp);
                        //C_PRCxMonitorServ(); //*Net 63-07-30 ไม่ใช้งานแล้ว
                    }
                    catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxSyncUld/oBGWorker : " + oEx.Message); }
                    finally
                    {
                        oBGWorker = null;
                        oManualThread = null;
                    }
                };
                oBGWorker.WorkerReportsProgress = true;
                oBGWorker.WorkerSupportsCancellation = true;
                oBGWorker.RunWorkerAsync();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxSyncUld : " + oEx.Message); }
        }

        public void C_PRCxUpload(bool pbUpdTblSalTmp = false)
        {
            cMsgRemind oRemind;
            cmlMsgLng oMsgL;
            cmlTCNTMsgRemind oMsg;
            List<cmlTSysSyncData> aoUpload;
            try
            {
                oRemind = new cMsgRemind();
                oMsg = new cmlTCNTMsgRemind();
                oMsgL = new cmlMsgLng();

                oMsg.FDCreateOn = DateTime.Now;
                oMsg.FNMsgSeq = oRemind.C_GETnMaxSeq() + 1;
                oMsg.FTMsgGroup = "Upload";
                oMsg.FTCreateBy = cVB.tVB_UsrName;

                if (string.IsNullOrEmpty(cVB.tVB_API2PSSale))
                {
                    oMsg.FNMsgType = 6;

                    oMsgL.ptNameEN = oC_ResourceEN.GetString("tUpload") + " " + oC_ResourceEN.GetString("tMsgNotWebService");
                    oMsgL.ptNameTH = oC_ResourceTH.GetString("tUpload") + " " + oC_ResourceTH.GetString("tMsgNotWebService");

                    oRemind.C_INSxMsgRemind(oMsg, oMsgL);
                }
                else
                {
                    //if (oC_SP.SP_CHKbConnection())   // Connect internet
                    if (oC_SP.SP_CHKbConnection(cVB.tVB_API2PSSale + "/CheckOnline/IsOnline"))   // Connect internet  //*Em 63-03-05
                    {
                        aoUpload = C_GETaTableSyncDB();
                        aoUpload = new List<cmlTSysSyncData>(aoUpload.Where(c => c.FTSynTable_L == "API2PSSale").ToList());
                        foreach (cmlTSysSyncData oSync in aoUpload)
                        {
                            switch (oSync.FNSynSeqNo)
                            {
                                case 80:    //Sale-Return
                                    C_PRCxSale(oSync, pbUpdTblSalTmp);
                                    break;
                                case 81:    //Shift
                                    C_PRCxShift(oSync);
                                    break;
                                case 82:    //Void
                                    C_PRCxVoid(oSync);
                                    break;
                                case 90:
                                    C_PRCxTax(oSync);   //*Em 62-08-13
                                    break;
                            }
                        }
                    }
                    else
                    {
                        oMsg.FNMsgType = 6;

                        oMsgL.ptNameEN = oC_ResourceEN.GetString("tUpload") + " " + oC_ResourceEN.GetString("tMsgErrConn");
                        oMsgL.ptNameTH = oC_ResourceTH.GetString("tUpload") + " " + oC_ResourceTH.GetString("tMsgErrConn");

                        oRemind.C_INSxMsgRemind(oMsg, oMsgL);

                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxUpload : " + oEx.Message); }
            finally
            {
                oRemind = null;
                oMsgL = null;
                oMsg = null;
                aoUpload = null;
                //new cSP().SP_CLExMemory();
            }
        }

        #region Sale
        public void C_PRCxSale(cmlTSysSyncData poSync, bool pbUpdTblSalTmp = false)
        {
            cDatabase oDB = new cDatabase();
            StringBuilder oSql = new StringBuilder();
            DataTable odtTmp = new DataTable();
            string tTblSalHD; //*Net 63-07-30
            try
            {
            ReSync:
                //*Net 63-07-30 ตารางขาย
                if (pbUpdTblSalTmp) tTblSalHD = "TSHD" + cVB.tVB_PosCode;
                else tTblSalHD = "TPSTSalHD";

                oSql.Clear();
                oSql.AppendLine("SELECT FTLogDocNo,ISNULL(FTLogStaPrc,'') AS FTLogStaPrc");
                //oSql.AppendLine("FROM TCNTTmpLogChg with(nolock)");
                //*Net 63-07-30 check กับตารางว่ามีบิลหรือไม่
                oSql.AppendLine("FROM TCNTTmpLogChg TMP with(nolock)");
                oSql.AppendLine($"INNER JOIN {tTblSalHD} HD ON HD.FTBchCode='{cVB.tVB_BchCode}' AND HD.FTPosCode='{cVB.tVB_PosCode}'");
                oSql.AppendLine($" AND TMP.FTLogCode=HD.FTShfCode AND TMP.FTLogDocNo=HD.FTXshDocNo");
                //+++++++++++++++++++++++++++
                oSql.AppendLine("WHERE FNLogType = 80 AND (ISNULL(FTLogStaPrc,'') = '1' OR ISNULL(FTLogStaPrc,'') = '') ");
                odtTmp = oDB.C_GEToDataQuery(oSql.ToString());
                if (odtTmp.Rows.Count == 0)
                {
                    return;
                }
                else
                {
                    if (odtTmp.Select("FTLogStaPrc = '1'").Length > 0)
                    {
                        //C_SYNxSale(poSync);
                        if (C_SYNbSale(poSync, pbUpdTblSalTmp)) goto ReSync;    //*Em 63-05-15
                    }
                    else
                    {
                        oSql.Clear();
                        oSql.AppendLine("UPDATE TOP(1) TCNTTmpLogChg with(rowlock)");
                        oSql.AppendLine("SET FTLogStaPrc = '1'");
                        oSql.AppendLine("WHERE FNLogType = 80 AND ISNULL(FTLogStaPrc,'') = '' ");
                        oDB.C_SETxDataQuery(oSql.ToString());

                        //C_SYNxSale(poSync);
                        if (C_SYNbSale(poSync, pbUpdTblSalTmp)) goto ReSync;    //*Em 63-05-15
                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxSale : " + oEx.Message); }
            finally
            {
                oDB = null;
                oSql = null;
                odtTmp = null;
                //new cSP().SP_CLExMemory();
            }
        }

        //private void C_SYNxSale(cmlTSysSyncData poSync)
        //private bool C_SYNbSale(cmlTSysSyncData poSync, bool pbUpdTblSalTmp = false)
        public bool C_SYNbSale(cmlTSysSyncData poSync, bool pbUpdTblSalTmp = false) 
        {
            //*Net 63-05-24 Default ตาราง Sal
            string tTblSalHD = "TPSTSalHD";
            string tTblSalHDCst = "TPSTSalHDCst";
            string tTblSalHDDis = "TPSTSalHDDis";
            string tTblSalDT = "TPSTSalDT";
            string tTblSalDTDis = "TPSTSalDTDis";
            string tTblSalDTPmt = "TPSTSalDTPmt";
            string tTblSalRC = "TPSTSalRC";
            string tTblSalRD = "TPSTSalRD";
            string tTblSalPD = "TPSTSalPD";
            string tTblTxnSal = "TCNTMemTxnSale";
            string tTblTxnRd = "TCNTMemTxnRedeem";
            cDatabase oDB = new cDatabase();
            StringBuilder oSql = new StringBuilder();
            cmlTPSTSal oSale = new cmlTPSTSal();
            bool bSuccess = false;   //*Em 63-05-15
            try
            {
                //*Net 63-05-24 ตาราง Sal เมื่อให้ดึงจาก Tmp
                if (pbUpdTblSalTmp)
                {
                    tTblSalHD = "TSHD" + cVB.tVB_PosCode;
                    tTblSalHDCst = "TSHDCst" + cVB.tVB_PosCode;
                    tTblSalHDDis = "TSHDDis" + cVB.tVB_PosCode;
                    tTblSalDT = "TSDT" + cVB.tVB_PosCode;
                    tTblSalDTDis = "TSDTDis" + cVB.tVB_PosCode;
                    tTblSalDTPmt = "TSDTPmt" + cVB.tVB_PosCode;
                    tTblSalRC = "TSRC" + cVB.tVB_PosCode;
                    tTblSalRD = "TSRD" + cVB.tVB_PosCode;
                    tTblSalPD = "TSPD" + cVB.tVB_PosCode;
                    tTblTxnSal = "TSHDPsl" + cVB.tVB_PosCode;
                    tTblTxnRd = "TSHDPrd" + cVB.tVB_PosCode;
                }
                //+++++++++++++++++++++++++++++++++++

                oSql.Clear();
                oSql.AppendLine("SELECT DISTINCT HD.FTBchCode, HD.FTXshDocNo, HD.FTShpCode, HD.FNXshDocType, HD.FDXshDocDate, HD.FTXshCshOrCrd, HD.FTXshVATInOrEx, HD.FTDptCode, HD.FTWahCode, HD.FTPosCode,");
                oSql.AppendLine("HD.FTShfCode, HD.FNSdtSeqNo, HD.FTUsrCode, HD.FTSpnCode, HD.FTXshApvCode, HD.FTCstCode, HD.FTXshDocVatFull, HD.FTXshRefExt, HD.FDXshRefExtDate, HD.FTXshRefInt,");
                oSql.AppendLine("HD.FDXshRefIntDate, HD.FTXshRefAE, HD.FNXshDocPrint, HD.FTRteCode, HD.FCXshRteFac, HD.FCXshTotal, HD.FCXshTotalNV, HD.FCXshTotalNoDis, HD.FCXshTotalB4DisChgV, HD.FCXshTotalB4DisChgNV,");
                oSql.AppendLine("HD.FTXshDisChgTxt, HD.FCXshDis, HD.FCXshChg, HD.FCXshTotalAfDisChgV, HD.FCXshTotalAfDisChgNV, HD.FCXshRefAEAmt, HD.FCXshAmtV, HD.FCXshAmtNV, HD.FCXshVat, HD.FCXshVatable,");
                oSql.AppendLine("HD.FTXshWpCode, HD.FCXshWpTax, HD.FCXshGrand, HD.FCXshRnd, HD.FTXshGndText, HD.FCXshPaid, HD.FCXshLeft, HD.FTXshRmk, HD.FTXshStaRefund, HD.FTXshStaDoc,");
                //oSql.AppendLine("HD.FTXshStaApv, HD.FTXshStaPrcStk, HD.FTXshStaPaid, HD.FNXshStaDocAct, HD.FNXshStaRef, HD.FDLastUpdOn, HD.FTLastUpdBy, HD.FDCreateOn, HD.FTCreateBy");
                oSql.AppendLine("HD.FTXshStaApv, HD.FTXshStaPrcStk, HD.FTXshStaPaid, HD.FNXshStaDocAct, HD.FNXshStaRef, HD.FDLastUpdOn, HD.FTLastUpdBy, HD.FDCreateOn, HD.FTCreateBy, HD.FTRsnCode, HD.FTXshAppVer"); //*Net 63-07-30 เพิ่ม FTRsnCode, FTXshAppVer
                //oSql.AppendLine("FROM TPSTSalHD HD with(nolock)"); //*Net 63-05-24
                oSql.AppendLine($"FROM {tTblSalHD} HD with(nolock)"); //*Net 63-05-24
                oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                using (SqlConnection oConn = new cDatabase().C_CONoDatabase(cVB.oVB_Config))
                {
                    oSale.aoTPSTSalHD = oConn.Query<cmlTPSTSalHD>(oSql.ToString(), 60).ToList();
                    //if (oSale.aoTPSTSalHD.Count > 0)
                    foreach (cmlTPSTSalHD oSalHD in oSale.aoTPSTSalHD) //*Net 63-07-30 ถ้าเกิดกรณีที่มีหลายบิล จะต้องส่งทีละบิล
                    {
                        cmlTPSTSal oUpdSale = new cmlTPSTSal(); //*Net 63-07-14 สร้าง object สำหรับ upload
                        oUpdSale.aoTPSTSalHD = new List<cmlTPSTSalHD>();
                        oUpdSale.aoTPSTSalHD.Add(oSalHD);

                        //DT
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT DT.FTBchCode,DT.FTXshDocNo,DT.FNXsdSeqNo,DT.FTPdtCode,DT.FTXsdPdtName,DT.FTPunCode,DT.FTPunName,");
                        oSql.AppendLine("DT.FCXsdFactor,DT.FTXsdBarCode,DT.FTSrnCode,DT.FTPplCode,DT.FTXsdVatType,DT.FTVatCode,DT.FCXsdVatRate,DT.FTXsdSaleType,");
                        oSql.AppendLine("DT.FCXsdSalePrice,DT.FCXsdQty,DT.FCXsdQtyAll,DT.FCXsdSetPrice,DT.FCXsdAmtB4DisChg,DT.FTXsdDisChgTxt,DT.FCXsdDis,");
                        oSql.AppendLine("DT.FCXsdChg,DT.FCXsdNet,DT.FCXsdNetAfHD,DT.FCXsdVat,DT.FCXsdVatable,DT.FCXsdWhtAmt,DT.FTXsdWhtCode,");
                        oSql.AppendLine("DT.FCXsdWhtRate,DT.FCXsdCostIn,DT.FCXsdCostEx,DT.FTXsdStaPdt,DT.FCXsdQtyLef,DT.FCXsdQtyRfn,DT.FTXsdStaPrcStk,");
                        oSql.AppendLine("DT.FTXsdStaAlwDis,DT.FNXsdPdtLevel,DT.FTXsdPdtParent,DT.FCXsdQtySet,DT.FTPdtStaSet,DT.FTXsdRmk,");
                        oSql.AppendLine("DT.FDLastUpdOn,DT.FTLastUpdBy,DT.FDCreateOn,DT.FTCreateBy");
                        //oSql.AppendLine("FROM TPSTSalDT DT with(nolock)"); //*Net 63-05-24
                        oSql.AppendLine($"FROM {tTblSalDT} DT with(nolock)"); //*Net 63-05-24
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE DT.FTBchCode = '" + oSale.aoTPSTSalHD[0].FTBchCode + "' AND DT.FTXshDocNo = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oSql.AppendLine("WHERE DT.FTBchCode = '" + oSalHD.FTBchCode + "' AND DT.FTXshDocNo = '" + oSalHD.FTXshDocNo + "'"); //*Net 63-07-30
                        //oSale.aoTPSTSalDT = oConn.Query<cmlTPSTSalDT>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTPSTSalDT = oConn.Query<cmlTPSTSalDT>(oSql.ToString(), 60).ToList(); //*Net 63-07-14
                        //*Net 63-05-25 เช็ค Model DT ว่ามีหรือไม่
                        //if (oSale.aoTPSTSalDT.Count == 0)
                        if (oUpdSale.aoTPSTSalDT.Count == 0) //*Net 63-07-30
                        {
                            bSuccess = false;
                            //throw new Exception($"{oSale.aoTPSTSalHD[0].FTXshDocNo} TPSTSalDT.Count = {oSale.aoTPSTSalDT.Count}");
                            new cLog().C_WRTxLog("cSyncData", "C_SYNxSale : " + $"{oSalHD.FTXshDocNo} TPSTSalDT.Count = {oUpdSale.aoTPSTSalDT.Count}");
                            continue;
                        }

                        //RC
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT RC.FTBchCode,RC.FTXshDocNo,RC.FNXrcSeqNo,RC.FTRcvCode,RC.FTRcvName,RC.FTXrcRefNo1,RC.FTXrcRefNo2,");
                        oSql.AppendLine("RC.FDXrcRefDate,RC.FTXrcRefDesc,RC.FTBnkCode,RC.FTRteCode,RC.FCXrcRteFac,RC.FCXrcFrmLeftAmt,RC.FCXrcUsrPayAmt,");
                        oSql.AppendLine("RC.FCXrcDep,RC.FCXrcNet,RC.FCXrcChg,RC.FTXrcRmk,RC.FTPhwCode,RC.FTXrcRetDocRef,RC.FTXrcStaPayOffline,");
                        oSql.AppendLine("RC.FDLastUpdOn,RC.FTLastUpdBy,RC.FDCreateOn,RC.FTCreateBy");
                        //oSql.AppendLine("FROM TPSTSalRC RC with(nolock)"); //*Net 63-05-24
                        oSql.AppendLine($"FROM {tTblSalRC} RC with(nolock)"); //*Net 63-05-24
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE RC.FTBchCode = '" + oSale.aoTPSTSalHD[0].FTBchCode + "' AND RC.FTXshDocNo = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oSql.AppendLine("WHERE RC.FTBchCode = '" + oSalHD.FTBchCode + "' AND RC.FTXshDocNo = '" + oSalHD.FTXshDocNo + "'"); //*Net 63-07-14
                        //oSale.aoTPSTSalRC = oConn.Query<cmlTPSTSalRC>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTPSTSalRC = oConn.Query<cmlTPSTSalRC>(oSql.ToString(), 60).ToList();
                        //*Net 63-05-25 เช็ค Model RC ว่ามีหรือไม่
                        //if (oSale.aoTPSTSalRC.Count == 0)
                        if (oUpdSale.aoTPSTSalRC.Count == 0) //*Net 63-07-30
                        {
                            bSuccess = false;
                            //throw new Exception($"{oSale.aoTPSTSalHD[0].FTXshDocNo} TPSTSalRC.Count = {oSale.aoTPSTSalRC.Count}");
                            new cLog().C_WRTxLog("cSyncData", "C_SYNxSale : " + $"{oSale.aoTPSTSalHD[0].FTXshDocNo} TPSTSalRC.Count = {oSale.aoTPSTSalRC.Count}");
                            continue;
                        }

                        //HDCst
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT HDCst.FTBchCode,HDCst.FTXshDocNo,HDCst.FTXshCardID,HDCst.FTXshCardNo,HDCst.FNXshCrTerm,HDCst.FDXshDueDate,");
                        oSql.AppendLine("HDCst.FDXshBillDue,HDCst.FTXshCtrName,HDCst.FDXshTnfDate,HDCst.FTXshRefTnfID,HDCst.FNXshAddrShip,HDCst.FNXshAddrTax");
                        oSql.AppendLine(",HDCst.FTXshCstName,HDCst.FTXshCstTel,HDCst.FCXshCstPnt,HDCst.FCXshCstPntPmt");    //*Em 62-12-18  //*Arm 63-04-15 เพิ่ม HDCst.FCXshCstPnt,HDCst.FCXshCstPntPmt
                        //oSql.AppendLine("FROM TPSTSalHDCst HDCst with(nolock)"); //*Net 63-05-24
                        oSql.AppendLine($"FROM {tTblSalHDCst} HDCst with(nolock)"); //*Net 63-05-24
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON HDCst.FTBchCode = HD.FTBchCode AND HDCst.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON HDCst.FTBchCode = HD.FTBchCode AND HDCst.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE HDCst.FTBchCode = '" + oSale.aoTPSTSalHD[0].FTBchCode + "' AND HDCst.FTXshDocNo = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oSql.AppendLine("WHERE HDCst.FTBchCode = '" + oSalHD.FTBchCode + "' AND HDCst.FTXshDocNo = '" + oSalHD.FTXshDocNo + "'"); //*Net 63-07-14
                        //oSale.aoTPSTSalHDCst = oConn.Query<cmlTPSTSalHDCst>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTPSTSalHDCst = oConn.Query<cmlTPSTSalHDCst>(oSql.ToString(), 60).ToList(); //*Net 63-07-14

                        //HDDis
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT HDDis.FTBchCode,HDDis.FTXshDocNo,HDDis.FDXhdDateIns,HDDis.FTXhdDisChgTxt,HDDis.FTXhdDisChgType,");
                        oSql.AppendLine("HDDis.FCXhdTotalAfDisChg,HDDis.FCXhdDisChg,HDDis.FCXhdAmt,HDDis.FTXhdRefCode, ISNULL(HDDis.FTDisCode,'') AS FTDisCode, ISNULL(HDDis.FTRsnCode,'') AS FTRsnCode");      //*Arm 63-03-13 เพิ่ม FTXhdRefCode , *Arm 63-07-21 เพิ่ม FTDisCode, FTRsnCode
                        //oSql.AppendLine("FROM TPSTSalHDDis HDDis with(nolock)"); //*Net 63-05-24
                        oSql.AppendLine($"FROM {tTblSalHDDis} HDDis with(nolock)"); //*Net 63-05-24
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON HDDis.FTBchCode = HD.FTBchCode AND HDDis.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON HDDis.FTBchCode = HD.FTBchCode AND HDDis.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE HDDis.FTBchCode = '" + oSale.aoTPSTSalHD[0].FTBchCode + "' AND HDDis.FTXshDocNo = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oSql.AppendLine("WHERE HDDis.FTBchCode = '" + oSalHD.FTBchCode + "' AND HDDis.FTXshDocNo = '" + oSalHD.FTXshDocNo + "'"); //Net 63-07-14
                        //oSale.aoTPSTSalHDDis = oConn.Query<cmlTPSTSalHDDis>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTPSTSalHDDis = oConn.Query<cmlTPSTSalHDDis>(oSql.ToString(), 60).ToList(); //*Net 63-07-14


                        //DTDis
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT DTDis.FTBchCode,DTDis.FTXshDocNo,DTDis.FNXsdSeqNo,DTDis.FDXddDateIns,DTDis.FNXddStaDis,");
                        oSql.AppendLine("DTDis.FTXddDisChgTxt,DTDis.FTXddDisChgType,DTDis.FCXddNet,DTDis.FCXddValue,DTDis.FTXddRefCode, ISNULL(DTDis.FTDisCode,'') AS FTDisCode, ISNULL(DTDis.FTRsnCode,'') AS FTRsnCode"); //*Arm 63-03-13 เพิ่ม FTXddRefCode, *Arm 63-07-21 เพิ่ม FTDisCode, FTRsnCode
                        //oSql.AppendLine("FROM TPSTSalDTDis DTDis with(nolock)"); //*Net 63-05-24
                        oSql.AppendLine($"FROM {tTblSalDTDis} DTDis with(nolock)"); //*Net 63-05-24
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON DTDis.FTBchCode = HD.FTBchCode AND DTDis.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON DTDis.FTBchCode = HD.FTBchCode AND DTDis.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE DTDis.FTBchCode = '" + oSale.aoTPSTSalHD[0].FTBchCode + "' AND DTDis.FTXshDocNo = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oSql.AppendLine("WHERE DTDis.FTBchCode = '" + oSalHD.FTBchCode + "' AND DTDis.FTXshDocNo = '" + oSalHD.FTXshDocNo + "'"); //*Net 63-07-14
                        //oSale.aoTPSTSalDTDis = oConn.Query<cmlTPSTSalDTDis>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTPSTSalDTDis = oConn.Query<cmlTPSTSalDTDis>(oSql.ToString(), 60).ToList(); //*Net 63-07-14


                        ////DTPmt
                        //oSql = new StringBuilder();
                        //oSql.AppendLine("SELECT DISTINCT DTPmt.FTBchCode,DTPmt.FTXshDocNo,DTPmt.FTPmhCode,DTPmt.FTXdpGrpName,DTPmt.FTXsdBarCode,DTPmt.FNXsdSeqNo,DTPmt.FCXdpQtyAll,");
                        //oSql.AppendLine("DTPmt.FCXdpNet,DTPmt.FCXdpSetPrice,DTPmt.FCXdpGetQtyDiv,DTPmt.FCXdpGetCond,DTPmt.FCXdpGetValue,DTPmt.FCXdpDis,DTPmt.FCXdpDisAvg,");
                        //oSql.AppendLine("DTPmt.FCXdpPoint,DTPmt.FTXdpStaExceptPmt,DTPmt.FTXdpStaRcv");
                        ////oSql.AppendLine("FROM TPSTSalDTPmt DTPmt with(nolock)"); //*Net 63-05-24
                        //oSql.AppendLine($"FROM {tTblSalDTPmt} DTPmt with(nolock)"); //*Net 63-05-24
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON DTPmt.FTBchCode = HD.FTBchCode AND DTPmt.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON DTPmt.FTBchCode = HD.FTBchCode AND DTPmt.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSale.aoTPSTSalDTPmt = oConn.Query<cmlTPSTSalDTPmt>(oSql.ToString(), 60).ToList();


                        //*Arm 63-03-13
                        //RD
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT RD.FTBchCode, RD.FTXshDocNo,RD.FNXrdSeqNo,RD.FTRdhDocType,");
                        oSql.AppendLine("RD.FNXrdRefSeq,RD.FTXrdRefCode,RD.FCXrdPdtQty,RD.FNXrdPntUse");
                        //oSql.AppendLine("FROM TPSTSalRD RD with(nolock)"); //*Net 63-05-24
                        oSql.AppendLine($"FROM {tTblSalRD} RD with(nolock)"); //*Net 63-05-24
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON RD.FTBchCode = HD.FTBchCode AND RD.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON RD.FTBchCode = HD.FTBchCode AND RD.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE RD.FTBchCode = '" + oSale.aoTPSTSalHD[0].FTBchCode + "' AND RD.FTXshDocNo = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oSql.AppendLine("WHERE RD.FTBchCode = '" + oSalHD.FTBchCode + "' AND RD.FTXshDocNo = '" + oSalHD.FTXshDocNo + "'"); //*Net 63-07-14
                        //oSale.aoTPSTSalRD = oConn.Query<cmlTPSTSalRD>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTPSTSalRD = oConn.Query<cmlTPSTSalRD>(oSql.ToString(), 60).ToList(); //*Net 63-07-14
                        //+++++++++++++++


                        //*Arm 63-03-26
                        //PD
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT PD.FTBchCode,PD.FTXshDocNo,PD.FTPmhDocNo,PD.FNXsdSeqNo,PD.FTPmdGrpName,");
                        oSql.AppendLine("PD.FTPdtCode, PD.FTPunCode, PD.FCXsdQty, PD.FCXsdQtyAll, PD.FCXsdSetPrice,");
                        oSql.AppendLine("PD.FCXsdNet, PD.FCXpdGetQtyDiv, PD.FTXpdGetType, PD.FCXpdGetValue, PD.FCXpdDis,");
                        oSql.AppendLine("PD.FCXpdPerDisAvg, PD.FCXpdDisAvg, PD.FCXpdPoint, PD.FTXpdStaRcv, PD.FTPplCode,");
                        oSql.AppendLine("PD.FTXpdCpnText, PD.FTCpdBarCpn ");
                        //oSql.AppendLine("FROM TPSTSalPD PD with(nolock)"); //*Net 63-05-24
                        oSql.AppendLine($"FROM {tTblSalPD} PD with(nolock)"); //*Net 63-05-24
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON PD.FTBchCode = HD.FTBchCode AND PD.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON PD.FTBchCode = HD.FTBchCode AND PD.FTXshDocNo = HD.FTXshDocNo"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE PD.FTBchCode = '" + oSale.aoTPSTSalHD[0].FTBchCode + "' AND PD.FTXshDocNo = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oSql.AppendLine("WHERE PD.FTBchCode = '" + oSalHD.FTBchCode + "' AND PD.FTXshDocNo = '" + oSalHD.FTXshDocNo + "'"); //*Net 63-07-14
                        //oSale.aoTPSTSalPD = oConn.Query<cmlTPSTSalPD>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTPSTSalPD = oConn.Query<cmlTPSTSalPD>(oSql.ToString(), 60).ToList(); //*Net 63-07-14
                        //+++++++++++++++


                        //*Arm 63-05-07
                        //TxnSale
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT TSAL.FTCgpCode,TSAL.FTMemCode,TSAL.FTTxnRefDoc,TSAL.FTTxnRefInt,TSAL.FTTxnRefSpl,");
                        oSql.AppendLine("TSAL.FDTxnRefDate,TSAL.FCTxnRefGrand,TSAL.FCTxnPntOptBuyAmt,TSAL.FCTxnPntOptGetQty,TSAL.FCTxnPntB4Bill,");
                        oSql.AppendLine("TSAL.FDTxnPntStart,TSAL.FDTxnPntExpired,TSAL.FCTxnPntBillQty,TSAL.FCTxnPntUsed,TSAL.FCTxnPntExpired,");
                        oSql.AppendLine("TSAL.FTTxnPntStaClosed,TSAL.FDLastUpdOn,TSAL.FTLastUpdBy,TSAL.FDCreateOn,TSAL.FTCreateBy,");
                        oSql.AppendLine("TSAL.FTTxnPntDocType");
                        //oSql.AppendLine($"FROM TCNTMemTxnSale TSAL with(nolock)");
                        oSql.AppendLine($"FROM {tTblTxnSal} TSAL with(nolock)"); //*Net 63-06-01
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON HD.FTBchCode = '" + cVB.tVB_BchCode + "' AND (TSAL.FTTxnRefDoc = HD.FTXshDocNo OR TSAL.FTTxnRefInt = HD.FTXshRefInt) "); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON HD.FTBchCode = '" + cVB.tVB_BchCode + "' AND (TSAL.FTTxnRefDoc = HD.FTXshDocNo OR TSAL.FTTxnRefInt = HD.FTXshRefInt) "); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE TSAL.FTTxnRefDoc = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "' OR TSAL.FTTxnRefInt = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        if (oSalHD.FNXshDocType == 1)
                        {
                            oSql.AppendLine("WHERE TSAL.FTTxnRefDoc = '" + oSalHD.FTXshDocNo + "' "); //*Net 63-09-02
                        }
                        else
                        {
                            oSql.AppendLine("WHERE TSAL.FTTxnRefInt = '" + oSalHD.FTXshRefInt + "'"); //*Net 63-09-02
                        }
                        //oSale.aoTCNTMemTxnSale = oConn.Query<cmlTCNTMemTxnSale>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTCNTMemTxnSale = oConn.Query<cmlTCNTMemTxnSale>(oSql.ToString(), 60).ToList(); //*Net 63-07-14


                        //TxnRedeem
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT TRD.FTCgpCode,TRD.FTMemCode,TRD.FTRedRefDoc,TRD.FTRedRefInt,TRD.FTRedRefSpl,");
                        oSql.AppendLine("TRD.FDRedRefDate,TRD.FCRedPntB4Bill,TRD.FCRedPntBillQty,TRD.FTRedPntStaClosed,TRD.FDRedPntStart,");
                        oSql.AppendLine("TRD.FDRedPntExpired,TRD.FDLastUpdOn,TRD.FTLastUpdBy,TRD.FDCreateOn,TRD.FTCreateBy,");
                        oSql.AppendLine("TRD.FTRedPntDocType");
                        //oSql.AppendLine($"FROM TCNTMemTxnRedeem TRD with(nolock)");
                        oSql.AppendLine($"FROM {tTblTxnRd} TRD with(nolock)"); //*Net 63-06-01
                        ////oSql.AppendLine("INNER JOIN TPSTSalHD HD with(nolock) ON HD.FTBchCode = '" + cVB.tVB_BchCode + "' AND (TRD.FTRedRefDoc = HD.FTXshDocNo OR TRD.FTRedRefInt = HD.FTXshRefInt)"); //*Net 63-05-24
                        //oSql.AppendLine($"INNER JOIN {tTblSalHD} HD with(nolock) ON HD.FTBchCode = '" + cVB.tVB_BchCode + "' AND (TRD.FTRedRefDoc = HD.FTXshDocNo OR TRD.FTRedRefInt = HD.FTXshRefInt)"); //*Net 63-05-24
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 80 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oSql.AppendLine("WHERE TRD.FTRedRefDoc = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "' OR TRD.FTRedRefInt = '" + oSale.aoTPSTSalHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        if (oSalHD.FNXshDocType == 1)
                        {
                            oSql.AppendLine("WHERE TRD.FTRedRefDoc = '" + oSalHD.FTXshDocNo + "'"); //*Net 63-09-02
                        }
                        else
                        {
                            oSql.AppendLine("WHERE TRD.FTRedRefInt = '" + oSalHD.FTXshRefInt + "'"); //*Net 63-09-02
                        }
                        //oSale.aoTCNTMemTxnRedeem = oConn.Query<cmlTCNTMemTxnRedeem>(oSql.ToString(), 60).ToList();
                        oUpdSale.aoTCNTMemTxnRedeem = oConn.Query<cmlTCNTMemTxnRedeem>(oSql.ToString(), 60).ToList(); //*Net 63-07-14
                                                                                                                      //+++++++++++++

                        oUpdSale.ptWahStaPrcStk = cVB.tVB_WahStaPrcStk; //*Arm 63-08-04 สถานะการตัด Stock

                        //string tJSonCall = JsonConvert.SerializeObject(oSale);
                        string tJSonCall = JsonConvert.SerializeObject(oUpdSale);

                        cClientService oCall = new cClientService();
                        oCall = new cClientService(cVB.tVB_APIHeader, cVB.tVB_AgnKeyAPI);
                        HttpResponseMessage oRep = new HttpResponseMessage();
                        try
                        {
                            oRep = oCall.C_POSToInvoke(cVB.tVB_API2PSSale + poSync.FTSynUriUld, tJSonCall);
                        }
                        catch (Exception oEx)
                        {
                            new cLog().C_WRTxLog("cSyncData", "C_SYNxSale : " + oEx.Message);
                            return false;
                        }

                        if (oRep.StatusCode == System.Net.HttpStatusCode.OK)
                        {
                            string tJSonRes = oRep.Content.ReadAsStringAsync().Result;
                            cmlResResult oRes = JsonConvert.DeserializeObject<cmlResResult>(tJSonRes);
                            if (oRes.rtCode == "001")
                            {
                                oSql = new StringBuilder();
                                oSql.AppendLine("UPDATE TCNTTmpLogChg with(rowlock)");
                                oSql.AppendLine("SET FTLogStaPrc = '2'");
                                oSql.AppendLine(",FDLastUpdOn = GETDATE()");
                                //oSql.AppendLine("WHERE FNLogType = 80 AND ISNULL(FTLogStaPrc,'') = '1'");
                                oSql.AppendLine("WHERE FNLogType = 80 AND ISNULL(FTLogStaPrc,'') = '1'");
                                oSql.AppendLine("AND FTLogDocNo='" + oSalHD.FTXshDocNo + "'"); //*Net 63-07-14
                                oSql.AppendLine("AND FTLogCode= '" + oSalHD.FTShfCode + "'"); //*Net 63-07-14
                                oDB.C_SETxDataQuery(oSql.ToString());
                                bSuccess = true;
                            }
                            else
                            {
                                //*Net 63-07-14 ถ้าไม่สำเร็จ ให้ update เป็นว่าเพื่อจะได้ไม่ติด loop ReSync
                                oSql = new StringBuilder();
                                oSql.AppendLine("UPDATE TCNTTmpLogChg with(rowlock)");
                                oSql.AppendLine("SET FTLogStaPrc = ''");
                                oSql.AppendLine(",FDLastUpdOn = GETDATE()");
                                oSql.AppendLine("WHERE FNLogType = 80 AND ISNULL(FTLogStaPrc,'') = '1'");
                                oSql.AppendLine("AND FTLogDocNo='" + oSalHD.FTXshDocNo + "'"); //*Net 63-07-14
                                oSql.AppendLine("AND FTLogCode= '" + oSalHD.FTShfCode + "'"); //*Net 63-07-14
                                oDB.C_SETxDataQuery(oSql.ToString());
                                new cLog().C_WRTxLog("cSyncData", "C_SYNxSale : " + oRes.rtMsg);
                                bSuccess = false;
                            }
                        }
                        else
                        {
                            new cLog().C_WRTxLog("cSyncData", "C_SYNxSale : " + oRep.StatusCode.ToString()); //*Net 63-06-09
                        }
                        oRep.Dispose();    //*Em 63-07-17
                        oCall.C_PRCxCloseConn(); //*Em 63-07-17
                    }
                    //*Net 63-04-01 ยกมาจาก baseline
                    //else
                    //{
                        //oSql = new StringBuilder();
                        //oSql.AppendLine("UPDATE TCNTTmpLogChg with(rowlock)");
                        //oSql.AppendLine("SET FTLogStaPrc = '2'");
                        //oSql.AppendLine(",FDLastUpdOn = GETDATE()");
                        //oSql.AppendLine("WHERE FNLogType = 80 AND ISNULL(FTLogStaPrc,'') = '1'");
                        //oDB.C_SETxDataQuery(oSql.ToString());
                        //bSuccess = true;
                    //}
                    //++++++++++++++++++++++++++++++++
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_SYNxSale : " + oEx.Message); }
            finally
            {
                oDB = null;
                oSql = null;
                //new cSP().SP_CLExMemory();
            }
            return bSuccess;
        }
        #endregion Sale

        #region Shift
        public void C_PRCxShift(cmlTSysSyncData poSync)
        {
            cDatabase oDB = new cDatabase();
            StringBuilder oSql = new StringBuilder();
            DataTable odtTmp = new DataTable();
            try
            {
            ReSync:
                oSql.Clear();
                oSql.AppendLine("SELECT FTLogDocNo,ISNULL(FTLogStaPrc,'') AS FTLogStaPrc");
                oSql.AppendLine("FROM TCNTTmpLogChg with(nolock)");
                oSql.AppendLine("WHERE FNLogType = 81 AND (ISNULL(FTLogStaPrc,'') = '1' OR ISNULL(FTLogStaPrc,'') = '') ");
                odtTmp = oDB.C_GEToDataQuery(oSql.ToString());
                if (odtTmp.Rows.Count == 0)
                {
                    return;
                }
                else
                {
                    if (odtTmp.Select("FTLogStaPrc = '1'").Length > 0)
                    {
                        //C_SYNxShift(poSync);
                        if (C_SYNbShift(poSync)) goto ReSync;    //*Em 63-05-20
                    }
                    else
                    {
                        oSql.Clear();
                        oSql.AppendLine("UPDATE TOP(1) TCNTTmpLogChg with(rowlock)");
                        oSql.AppendLine("SET FTLogStaPrc = '1'");
                        oSql.AppendLine("WHERE FNLogType = 81 AND ISNULL(FTLogStaPrc,'') = '' ");
                        oDB.C_SETxDataQuery(oSql.ToString());

                        //C_SYNxShift(poSync);
                        if (C_SYNbShift(poSync)) goto ReSync;    //*Em 63-05-15
                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxShift : " + oEx.Message); }
            finally
            {
                oDB = null;
                oSql = null;
                odtTmp = null;
                //new cSP().SP_CLExMemory();
            }
        }

        //private void C_SYNxShift(cmlTSysSyncData poSync)
        //private bool C_SYNbShift(cmlTSysSyncData poSync)
        public bool C_SYNbShift(cmlTSysSyncData poSync)
        {
            cDatabase oDB = new cDatabase();
            StringBuilder oSql = new StringBuilder();
            cmlTPSTShift oShift = new cmlTPSTShift();
            bool bSuccess = false;
            try
            {
                oSql.AppendLine("SELECT DISTINCT HD.FTBchCode, HD.FTPosCode, HD.FTShfCode, HD.FTUsrCode, HD.FDShdSaleDate, HD.FDShdSignIn, HD.FDShdSignOut, ");
                oSql.AppendLine("HD.FTShdUsrClosed, HD.FTShdStaPrc, HD.FDLastUpdOn, HD.FTLastUpdBy, HD.FDCreateOn, HD.FTCreateBy");
                oSql.AppendLine("FROM TPSTShiftHD HD WITH(NOLOCK)");
                oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTPosCode = TLC.FTLogDocNo AND TLC.FNLogType = 81 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                using (SqlConnection oConn = new cDatabase().C_CONoDatabase(cVB.oVB_Config))
                {
                    oShift.aoTPSTShiftHD = oConn.Query<cmlTPSTShiftHD>(oSql.ToString(), 60).ToList();
                    if (oShift.aoTPSTShiftHD.Count > 0)
                    {
                        //DT
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT DT.FTBchCode, DT.FTPosCode, DT.FTShfCode, DT.FNSdtSeqNo, DT.FTShpCode, ");
                        oSql.AppendLine("DT.FTUsrCode, DT.FDSdtSignIn, DT.FDSdtSignOut, DT.FTSdtUsrClosed");
                        oSql.AppendLine("FROM TPSTShiftDT DT WITH(NOLOCK)");
                        //oSql.AppendLine("INNER JOIN TPSTShiftHD HD WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPosCode = DT.FTPosCode AND HD.FTShfCode = DT.FTShfCode");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTPosCode = TLC.FTLogDocNo AND TLC.FNLogType = 81 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE DT.FTBchCode = '"+ oShift.aoTPSTShiftHD[0].FTBchCode + "' AND DT.FTPosCode = '" + oShift.aoTPSTShiftHD[0].FTPosCode + "' AND DT.FTShfCode = '" + oShift.aoTPSTShiftHD[0].FTShfCode + "'");    //*Em 63-06-09
                        oShift.aoTPSTShiftDT = oConn.Query<cmlTPSTShiftDT>(oSql.ToString(), 60).ToList();

                        //Events
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT EVN.FTBchCode, EVN.FTPosCode, EVN.FTShfCode, EVN.FNSdtSeqNo, EVN.FDHisDateTime, EVN.FTEvnCode, EVN.FNSvnQty, EVN.FCSvnAmt, EVN.FTRsnCode, EVN.FTSvnApvCode, EVN.FTSvnRemark");
                        oSql.AppendLine("FROM TPSTShiftEvent EVN WITH(NOLOCK)");
                        //oSql.AppendLine("INNER JOIN TPSTShiftHD HD WITH(NOLOCK) ON HD.FTBchCode = EVN.FTBchCode AND HD.FTPosCode = EVN.FTPosCode AND HD.FTShfCode = EVN.FTShfCode");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTPosCode = TLC.FTLogDocNo AND TLC.FNLogType = 81 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE EVN.FTBchCode = '" + oShift.aoTPSTShiftHD[0].FTBchCode + "' AND EVN.FTPosCode = '" + oShift.aoTPSTShiftHD[0].FTPosCode + "' AND EVN.FTShfCode = '" + oShift.aoTPSTShiftHD[0].FTShfCode + "'");    //*Em 63-06-09
                        oShift.aoTPSTShiftEvent = oConn.Query<cmlTPSTShiftEvent>(oSql.ToString(), 60).ToList();

                        //TPSTShiftSKeyBN
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT BNT.FTBchCode, BNT.FTPosCode, BNT.FTShfCode, BNT.FNSdtSeqNo, BNT.FTBntCode, BNT.FCKbnRateAmt, BNT.FNKbnQty, BNT.FCKbnAmt    ");
                        oSql.AppendLine("FROM TPSTShiftSKeyBN BNT WITH(NOLOCK)");
                        //oSql.AppendLine("INNER JOIN TPSTShiftHD HD WITH(NOLOCK) ON HD.FTBchCode = BNT.FTBchCode AND HD.FTPosCode = BNT.FTPosCode AND HD.FTShfCode = BNT.FTShfCode");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTPosCode = TLC.FTLogDocNo AND TLC.FNLogType = 81 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE BNT.FTBchCode = '" + oShift.aoTPSTShiftHD[0].FTBchCode + "' AND BNT.FTPosCode = '" + oShift.aoTPSTShiftHD[0].FTPosCode + "' AND BNT.FTShfCode = '" + oShift.aoTPSTShiftHD[0].FTShfCode + "'");    //*Em 63-06-09
                        oShift.aoTPSTShiftSKeyBN = oConn.Query<cmlTPSTShiftSKeyBN>(oSql.ToString(), 60).ToList();

                        //TPSTShiftSKeyRcv
                        oSql = new StringBuilder();
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT RCV.FTBchCode, RCV.FTPosCode, RCV.FTShfCode, RCV.FNSdtSeqNo, RCV.FTRcvCode, RCV.FCRcvPayAmt, RCV.FCRcvRndAmt");
                        oSql.AppendLine("FROM TPSTShiftSKeyRcv RCV WITH(NOLOCK)");
                        //oSql.AppendLine("INNER JOIN TPSTShiftHD HD WITH(NOLOCK) ON HD.FTBchCode = RCV.FTBchCode AND HD.FTPosCode = RCV.FTPosCode AND HD.FTShfCode = RCV.FTShfCode");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTPosCode = TLC.FTLogDocNo AND TLC.FNLogType = 81 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE RCV.FTBchCode = '" + oShift.aoTPSTShiftHD[0].FTBchCode + "' AND RCV.FTPosCode = '" + oShift.aoTPSTShiftHD[0].FTPosCode + "' AND RCV.FTShfCode = '" + oShift.aoTPSTShiftHD[0].FTShfCode + "'");    //*Em 63-06-09
                        oShift.aoTPSTShiftSKeyRcv = oConn.Query<cmlTPSTShiftSKeyRcv>(oSql.ToString(), 60).ToList();

                        //TPSTShiftSLastDoc
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT LST.FTBchCode, LST.FTPosCode, LST.FTShfCode, LST.FNSdtSeqNo, LST.FNLstDocType, LST.FTLstDocNoFrm, LST.FTLstDocNoTo");
                        oSql.AppendLine("FROM TPSTShiftSLastDoc LST WITH(NOLOCK)");
                        //oSql.AppendLine("INNER JOIN TPSTShiftHD HD WITH(NOLOCK) ON HD.FTBchCode = LST.FTBchCode AND HD.FTPosCode = LST.FTPosCode AND HD.FTShfCode = LST.FTShfCode");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTPosCode = TLC.FTLogDocNo AND TLC.FNLogType = 81 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE LST.FTBchCode = '" + oShift.aoTPSTShiftHD[0].FTBchCode + "' AND LST.FTPosCode = '" + oShift.aoTPSTShiftHD[0].FTPosCode + "' AND LST.FTShfCode = '" + oShift.aoTPSTShiftHD[0].FTShfCode + "'");    //*Em 63-06-09
                        oShift.aoTPSTShiftSLastDoc = oConn.Query<cmlTPSTShiftSLastDoc>(oSql.ToString(), 60).ToList();

                        //TPSTShiftSRatePdt
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT RTE.FTBchCode, RTE.FTPosCode, RTE.FTShfCode, RTE.FNSdtSeqNo, RTE.FTSrpCodeRef, RTE.FTSrpType, RTE.FTSrpNameRef, RTE.FCSrpQty, RTE.FCSrpAmt");
                        oSql.AppendLine("FROM TPSTShiftSRatePdt RTE WITH(NOLOCK)");
                        //oSql.AppendLine("INNER JOIN TPSTShiftHD HD WITH(NOLOCK) ON HD.FTBchCode = RTE.FTBchCode AND HD.FTPosCode = RTE.FTPosCode AND HD.FTShfCode = RTE.FTShfCode");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTPosCode = TLC.FTLogDocNo AND TLC.FNLogType = 81 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE RTE.FTBchCode = '" + oShift.aoTPSTShiftHD[0].FTBchCode + "' AND RTE.FTPosCode = '" + oShift.aoTPSTShiftHD[0].FTPosCode + "' AND RTE.FTShfCode = '" + oShift.aoTPSTShiftHD[0].FTShfCode + "'");    //*Em 63-06-09
                        oShift.aoTPSTShiftSRatePdt = oConn.Query<cmlTPSTShiftSRatePdt>(oSql.ToString(), 60).ToList();

                        //TPSTShiftSSumRcv
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT SRV.FTBchCode, SRV.FTPosCode, SRV.FTShfCode, SRV.FNSdtSeqNo, SRV.FTRcvCode, SRV.FTRcvDocType, SRV.FCRcvPayAmt");
                        oSql.AppendLine("FROM TPSTShiftSSumRcv SRV WITH(NOLOCK)");
                        //oSql.AppendLine("INNER JOIN TPSTShiftHD HD WITH(NOLOCK) ON HD.FTBchCode = SRV.FTBchCode AND HD.FTPosCode = SRV.FTPosCode AND HD.FTShfCode = SRV.FTShfCode");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTPosCode = TLC.FTLogDocNo AND TLC.FNLogType = 81 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE SRV.FTBchCode = '" + oShift.aoTPSTShiftHD[0].FTBchCode + "' AND SRV.FTPosCode = '" + oShift.aoTPSTShiftHD[0].FTPosCode + "' AND SRV.FTShfCode = '" + oShift.aoTPSTShiftHD[0].FTShfCode + "'");    //*Em 63-06-09
                        oShift.aoTPSTShiftSSumRcv = oConn.Query<cmlTPSTShiftSSumRcv>(oSql.ToString(), 60).ToList();

                        //*Em 63-06-10  ปิดไว้ก่อนรอพิจารณาเรื่อง Performance
                        ////TPSTUsrLog
                        //oSql.Clear();
                        //oSql.AppendLine("SELECT FTComName,FTBchCode,FTPosCode,FTUsrCode,FDShdSignIn,FDShdSignOut,FTShfCode,FTAppCode,FTAppVersion");
                        //oSql.AppendLine("FROM TPSTUsrLog WITH(NOLOCK)");
                        //oSql.AppendLine("WHERE FTComName ='" + Environment.MachineName + "' AND FTBchCode = '"+ cVB.tVB_BchCode +"' AND FTPosCode = '"+ cVB.tVB_PosCode +"'");
                        //oSql.AppendLine("AND CONVERT(VARCHAR(10),FDShdSignIn,121) = '" + ((DateTime)oShift.aoTPSTShiftHD[0].FDShdSaleDate).ToString("yyyy-MM-dd") + "'");
                        //oShift.aoTPSTUsrLog = oConn.Query<cmlTPSTUsrLog>(oSql.ToString(), 60).ToList();

                        string tJSonCall = JsonConvert.SerializeObject(oShift);
                        cClientService oCall = new cClientService();
                        oCall = new cClientService(cVB.tVB_APIHeader, cVB.tVB_AgnKeyAPI);
                        HttpResponseMessage oRep = new HttpResponseMessage();
                        try
                        {
                            oRep = oCall.C_POSToInvoke(cVB.tVB_API2PSSale + poSync.FTSynUriUld, tJSonCall);
                        }
                        catch (Exception oEx)
                        {
                            new cLog().C_WRTxLog("cSyncData", "C_SYNxShift : " + oEx.Message);
                            return false;
                        }

                        if (oRep.StatusCode == System.Net.HttpStatusCode.OK)
                        {
                            string tJSonRes = oRep.Content.ReadAsStringAsync().Result;
                            cmlResResult oRes = JsonConvert.DeserializeObject<cmlResResult>(tJSonRes);
                            if (oRes.rtCode == "001")
                            {
                                oSql = new StringBuilder();
                                oSql.AppendLine("UPDATE TCNTTmpLogChg with(rowlock)");
                                oSql.AppendLine("SET FTLogStaPrc = '2'");
                                oSql.AppendLine(",FDLastUpdOn = GETDATE()");
                                oSql.AppendLine("WHERE FNLogType = 81 AND ISNULL(FTLogStaPrc,'') = '1'");
                                oDB.C_SETxDataQuery(oSql.ToString());
                                bSuccess = true;
                            }
                            else
                            {
                                new cLog().C_WRTxLog("cSyncData", "C_SYNxShift : " + oRes.rtMsg);
                            }
                        }

                        oRep.Dispose();    //*Em 63-07-17
                        oCall.C_PRCxCloseConn(); //*Em 63-07-17
                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_SYNxShift : " + oEx.Message); }
            finally
            {
                oDB = null;
                oSql = null;
                //new cSP().SP_CLExMemory();
            }
            return bSuccess;
        }
        #endregion Shift

        #region Void
        public void C_PRCxVoid(cmlTSysSyncData poSync)
        {
            cDatabase oDB = new cDatabase();
            StringBuilder oSql = new StringBuilder();
            DataTable odtTmp = new DataTable();
            try
            {
            ReSync:
                oSql.Clear();
                oSql.AppendLine("SELECT FTLogDocNo,ISNULL(FTLogStaPrc,'') AS FTLogStaPrc");
                oSql.AppendLine("FROM TCNTTmpLogChg with(nolock)");
                oSql.AppendLine("WHERE FNLogType = 82 AND (ISNULL(FTLogStaPrc,'') = '1' OR ISNULL(FTLogStaPrc,'') = '') ");
                odtTmp = oDB.C_GEToDataQuery(oSql.ToString());
                if (odtTmp.Rows.Count == 0)
                {
                    return;
                }
                else
                {
                    if (odtTmp.Select("FTLogStaPrc = '1'").Length > 0)
                    {
                        //C_SYNxVoid(poSync);
                        if (C_SYNbVoid(poSync)) goto ReSync;    //*Em 63-05-15
                    }
                    else
                    {
                        oSql.Clear();
                        oSql.AppendLine("UPDATE TOP(1) TCNTTmpLogChg with(rowlock)");
                        oSql.AppendLine("SET FTLogStaPrc = '1'");
                        oSql.AppendLine("WHERE FNLogType = 82 AND ISNULL(FTLogStaPrc,'') = '' ");
                        oDB.C_SETxDataQuery(oSql.ToString());

                        //C_SYNxVoid(poSync);
                        if (C_SYNbVoid(poSync)) goto ReSync;    //*Em 63-05-15
                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxVoid : " + oEx.Message); }
            finally
            {
                oDB = null;
                oSql = null;
                odtTmp = null;
                //new cSP().SP_CLExMemory();
            }
        }

        //private void C_SYNxVoid(cmlTSysSyncData poSync)
        //private bool C_SYNbVoid(cmlTSysSyncData poSync)
        public bool C_SYNbVoid(cmlTSysSyncData poSync)
        {
            cDatabase oDB = new cDatabase();
            StringBuilder oSql = new StringBuilder();
            cmlTPSTVoid oVoid = new cmlTPSTVoid();
            bool bSuccess = false;
            try
            {
                oSql.AppendLine("SELECT DISTINCT DT.FTBchCode, DT.FNVidNo, DT.FNXidSeqNo, DT.FTVidType, DT.FTRsnCode, DT.FTXihDocNo, DT.FTXihDocType, ");
                oSql.AppendLine("DT.FDXihDocDate, DT.FTXihDocTime, DT.FTPdtCode, DT.FTXidPdtName, DT.FTPunCode, DT.FCXidFactor, DT.FTXidBarCode, ");
                oSql.AppendLine("DT.FTSrnCode, DT.FTXidVatType, DT.FTVatCode, DT.FCXidVatRate, DT.FTXidSaleType, DT.FCXidSalePrice, DT.FCXidQty, ");
                oSql.AppendLine("DT.FCXidSetPrice, DT.FCXidB4DisChg, DT.FCXidQtyAll, DT.FCXidNet, DT.FCXidNetTotal, DT.FCXidVat, DT.FCXidVatable, ");
                oSql.AppendLine("DT.FCXidCostIn, DT.FCXidCostEx, DT.FTXidStaPdt, DT.FCXidQtyLef, DT.FCXidQtyRfn, DT.FTXidStaPrcStk, DT.FNXidPdtLevel, ");
                oSql.AppendLine("DT.FTXidPdtParent, DT.FCXidQtySet, DT.FTPdtStaSet, DT.FTXidRmk, DT.FDLastUpdOn, DT.FTLastUpdBy, DT.FDCreateOn, DT.FTCreateBy");
                oSql.AppendLine("FROM TPSTVoidDT DT WITH(NOLOCK)");
                oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON CONVERT(VARCHAR(20),DT.FNVidNo) = TLC.FTLogCode AND TLC.FNLogType = 82 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                using (SqlConnection oConn = new cDatabase().C_CONoDatabase(cVB.oVB_Config))
                {
                    oVoid.aoTPSTVoidDT = oConn.Query<cmlTPSTVoidDT>(oSql.ToString(), 60).ToList();
                    if (oVoid.aoTPSTVoidDT.Count > 0)
                    {
                        //DT
                        oSql.Clear();
                        oSql.AppendLine("SELECT DISTINCT DTD.FTBchCode, DTD.FNVidNo, DTD.FNXidSeqNo, DTD.FDXddDateIns, DTD.FTXihDocNo, DTD.FNXddStaDis, DTD.FTXddDisChgTxt, DTD.FTXddDisChgType, DTD.FCXddNet, DTD.FCXddValue");
                        oSql.AppendLine("FROM TPSTVoidDTDis DTD WITH(NOLOCK)");
                        //oSql.AppendLine("INNER JOIN TPSTVoidDT DT WITH(NOLOCK) ON DT.FTBchCode = DTD.FTBchCode AND DT.FNVidNo =DTD.FNVidNo");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON CONVERT(VARCHAR(20),DT.FNVidNo) = TLC.FTLogCode AND TLC.FNLogType = 82 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE DTD.FTBchCode = '" + oVoid.aoTPSTVoidDT[0].FTBchCode + "' AND DTD.FNVidNo = '" + oVoid.aoTPSTVoidDT[0].FNVidNo + "'"); //*Em 63-06-09
                        oVoid.aoTPSTVoidDTDis = oConn.Query<cmlTPSTVoidDTDis>(oSql.ToString(), 60).ToList();

                        string tJSonCall = JsonConvert.SerializeObject(oVoid);
                        cClientService oCall = new cClientService();
                        oCall = new cClientService(cVB.tVB_APIHeader, cVB.tVB_AgnKeyAPI);
                        HttpResponseMessage oRep = new HttpResponseMessage();
                        try
                        {
                            oRep = oCall.C_POSToInvoke(cVB.tVB_API2PSSale + poSync.FTSynUriUld, tJSonCall);
                        }
                        catch (Exception oEx)
                        {
                            new cLog().C_WRTxLog("cSyncData", "C_SYNxVoid : " + oEx.Message);
                            return false;
                        }

                        if (oRep.StatusCode == System.Net.HttpStatusCode.OK)
                        {
                            string tJSonRes = oRep.Content.ReadAsStringAsync().Result;
                            cmlResResult oRes = JsonConvert.DeserializeObject<cmlResResult>(tJSonRes);
                            if (oRes.rtCode == "001")
                            {
                                oSql = new StringBuilder();
                                oSql.AppendLine("UPDATE TCNTTmpLogChg with(rowlock)");
                                oSql.AppendLine("SET FTLogStaPrc = '2'");
                                oSql.AppendLine(",FDLastUpdOn = GETDATE()");
                                oSql.AppendLine("WHERE FNLogType = 82 AND ISNULL(FTLogStaPrc,'') = '1'");
                                oDB.C_SETxDataQuery(oSql.ToString());
                                bSuccess = true;
                            }
                            else
                            {
                                new cLog().C_WRTxLog("cSyncData", "C_SYNxVoid : " + oRes.rtMsg);
                            }
                        }

                        oRep.Dispose();    //*Em 63-07-17
                        oCall.C_PRCxCloseConn(); //*Em 63-07-17
                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_SYNxVoid : " + oEx.Message); }
            finally
            {
                oDB = null;
                oSql = null;
                //new cSP().SP_CLExMemory();
            }
            return bSuccess;
        }
        #endregion Void

        #region Tax
        public void C_PRCxTax(cmlTSysSyncData poSync)
        {
            cDatabase oDB = new cDatabase();
            StringBuilder oSql = new StringBuilder();
            DataTable odtTmp = new DataTable();
            try
            {
            ReSync:
                oSql.Clear();
                oSql.AppendLine("SELECT FTLogDocNo,ISNULL(FTLogStaPrc,'') AS FTLogStaPrc");
                oSql.AppendLine("FROM TCNTTmpLogChg with(nolock)");
                oSql.AppendLine("WHERE FNLogType = 90 AND (ISNULL(FTLogStaPrc,'') = '1' OR ISNULL(FTLogStaPrc,'') = '') ");
                odtTmp = oDB.C_GEToDataQuery(oSql.ToString());
                if (odtTmp.Rows.Count == 0)
                {
                    return;
                }
                else
                {
                    if (odtTmp.Select("FTLogStaPrc = '1'").Length > 0)
                    {
                        //C_SYNxTax(poSync);
                        if (C_SYNbTax(poSync)) goto ReSync; //*Em 63-05-15
                    }
                    else
                    {
                        oSql.Clear();
                        oSql.AppendLine("UPDATE TOP(1) TCNTTmpLogChg with(rowlock)");
                        oSql.AppendLine("SET FTLogStaPrc = '1'");
                        oSql.AppendLine("WHERE FNLogType = 90 AND ISNULL(FTLogStaPrc,'') = '' ");
                        oDB.C_SETxDataQuery(oSql.ToString());

                        //C_SYNxTax(poSync);
                        if (C_SYNbTax(poSync)) goto ReSync; //*Em 63-05-15
                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCxTax : " + oEx.Message); }
            finally
            {
                oDB = null;
                oSql = null;
                odtTmp = null;
                //new cSP().SP_CLExMemory();
            }
        }

        //private void C_SYNxTax(cmlTSysSyncData poSync)
        private bool C_SYNbTax(cmlTSysSyncData poSync)
        {
            cDatabase oDB = new cDatabase();
            StringBuilder oSql = new StringBuilder();
            cmlTPSTTax oTax = new cmlTPSTTax();
            bool bSuccess = false;
            try
            {
                oSql.AppendLine("SELECT DISTINCT HD.FTBchCode, HD.FTXshDocNo, HD.FTShpCode, HD.FNXshDocType, HD.FDXshDocDate, HD.FTXshCshOrCrd, HD.FTXshVATInOrEx, HD.FTDptCode, HD.FTWahCode, HD.FTPosCode,");
                oSql.AppendLine("HD.FTShfCode, HD.FNSdtSeqNo, HD.FTUsrCode, HD.FTSpnCode, HD.FTXshApvCode, HD.FTCstCode, HD.FTXshDocVatFull, HD.FTXshRefExt, HD.FDXshRefExtDate, HD.FTXshRefInt,");
                oSql.AppendLine("HD.FDXshRefIntDate, HD.FTXshRefAE, HD.FNXshDocPrint, HD.FTRteCode, HD.FCXshRteFac, HD.FCXshTotal, HD.FCXshTotalNV, HD.FCXshTotalNoDis, HD.FCXshTotalB4DisChgV, HD.FCXshTotalB4DisChgNV,");
                oSql.AppendLine("HD.FTXshDisChgTxt, HD.FCXshDis, HD.FCXshChg, HD.FCXshTotalAfDisChgV, HD.FCXshTotalAfDisChgNV, HD.FCXshRefAEAmt, HD.FCXshAmtV, HD.FCXshAmtNV, HD.FCXshVat, HD.FCXshVatable,");
                oSql.AppendLine("HD.FTXshWpCode, HD.FCXshWpTax, HD.FCXshGrand, HD.FCXshRnd, HD.FTXshGndText, HD.FCXshPaid, HD.FCXshLeft, HD.FTXshRmk, HD.FTXshStaRefund, HD.FTXshStaDoc,");
                oSql.AppendLine("HD.FTXshStaApv, HD.FTXshStaPrcStk, HD.FTXshStaPaid, HD.FNXshStaDocAct, HD.FNXshStaRef, HD.FDLastUpdOn, HD.FTLastUpdBy, HD.FDCreateOn, HD.FTCreateBy");
                oSql.AppendLine("FROM TPSTTaxHD HD with(nolock)");
                oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 90 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                using (SqlConnection oConn = new cDatabase().C_CONoDatabase(cVB.oVB_Config))
                {
                    oTax.aoTPSTTaxHD = oConn.Query<cmlTPSTTaxHD>(oSql.ToString(), 60).ToList();
                    if (oTax.aoTPSTTaxHD.Count > 0)
                    {
                        //HDCst
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT HDCst.FTBchCode,HDCst.FTXshDocNo,HDCst.FTXshCardID,HDCst.FTXshCardNo,HDCst.FNXshCrTerm,HDCst.FDXshDueDate,");
                        oSql.AppendLine("HDCst.FDXshBillDue,HDCst.FTXshCtrName,HDCst.FDXshTnfDate,HDCst.FTXshRefTnfID,HDCst.FNXshAddrShip,HDCst.FNXshAddrTax");
                        oSql.AppendLine(",HDCst.FTXshCstName,HDCst.FTXshCstTel");    //*Em 62-12-18
                        oSql.AppendLine("FROM TPSTTaxHDCst HDCst with(nolock)");
                        //oSql.AppendLine("INNER JOIN TPSTTaxHD HD with(nolock) ON HDCst.FTBchCode = HD.FTBchCode AND HDCst.FTXshDocNo = HD.FTXshDocNo");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 90 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE HDCst.FTBchCode = '" + oTax.aoTPSTTaxHD[0].FTBchCode + "' AND HDCst.FTXshDocNo = '" + oTax.aoTPSTTaxHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oTax.aoTPSTTaxHDCst = oConn.Query<cmlTPSTTaxHDCst>(oSql.ToString(), 60).ToList();

                        //HDDis
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT HDDis.FTBchCode,HDDis.FTXshDocNo,HDDis.FDXhdDateIns,HDDis.FTXhhDisChgTxt,HDDis.FTXhdDisChgType,");
                        oSql.AppendLine("HDDis.FCXhdTotalAfDisChg,HDDis.FCXhdDisChg,HDDis.FCXhdAmt");
                        oSql.AppendLine("FROM TPSTTaxHDDis HDDis with(nolock)");
                        //oSql.AppendLine("INNER JOIN TPSTTaxHD HD with(nolock) ON HDDis.FTBchCode = HD.FTBchCode AND HDDis.FTXshDocNo = HD.FTXshDocNo");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 90 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE HDDis.FTBchCode = '" + oTax.aoTPSTTaxHD[0].FTBchCode + "' AND HDDis.FTXshDocNo = '" + oTax.aoTPSTTaxHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oTax.aoTPSTTaxHDDis = oConn.Query<cmlTPSTTaxHDDis>(oSql.ToString(), 60).ToList();

                        //DT
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT DT.FTBchCode,DT.FTXshDocNo,DT.FNXsdSeqNo,DT.FTPdtCode,DT.FTXsdPdtName,DT.FTPunCode,DT.FTPunName,");
                        oSql.AppendLine("DT.FTPplCode,DT.FCXsdFactor,DT.FTXsdBarCode,DT.FTSrnCode,DT.FTXsdVatType,DT.FTVatCode,DT.FCXsdVatRate,DT.FTXsdSaleType,");
                        oSql.AppendLine("DT.FCXsdSalePrice,DT.FCXsdQty,DT.FCXsdQtyAll,DT.FCXsdSetPrice,DT.FCXsdAmtB4DisChg,DT.FTXsdDisChgTxt,DT.FCXsdDis,");
                        oSql.AppendLine("DT.FCXsdChg,DT.FCXsdNet,DT.FCXsdNetAfHD,DT.FCXsdVat,DT.FCXsdVatable,DT.FCXsdWhtAmt,DT.FTXsdWhtCode,");
                        oSql.AppendLine("DT.FCXsdWhtRate,DT.FCXsdCostIn,DT.FCXsdCostEx,DT.FTXsdStaPdt,DT.FCXsdQtyLef,DT.FCXsdQtyRfn,DT.FTXsdStaPrcStk,");
                        oSql.AppendLine("DT.FTXsdStaAlwDis,DT.FNXsdPdtLevel,DT.FTXsdPdtParent,DT.FCXsdQtySet,DT.FTPdtStaSet,DT.FTXsdRmk,");
                        oSql.AppendLine("DT.FDLastUpdOn,DT.FTLastUpdBy,DT.FDCreateOn,DT.FTCreateBy");
                        oSql.AppendLine("FROM TPSTTaxDT DT with(nolock)");
                        //oSql.AppendLine("INNER JOIN TPSTTaxHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 90 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE DT.FTBchCode = '" + oTax.aoTPSTTaxHD[0].FTBchCode + "' AND DT.FTXshDocNo = '" + oTax.aoTPSTTaxHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oTax.aoTPSTTaxDT = oConn.Query<cmlTPSTTaxDT>(oSql.ToString(), 60).ToList();

                        //DTDis
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT DTDis.FTBchCode,DTDis.FTXshDocNo,DTDis.FNXsdSeqNo,DTDis.FDXddDateIns,DTDis.FNXddStaDis,");
                        oSql.AppendLine("DTDis.FTXddDisChgTxt,DTDis.FTXddDisChgType,DTDis.FCXddNet,DTDis.FCXddValue");
                        oSql.AppendLine("FROM TPSTTaxDTDis DTDis with(nolock)");
                        //oSql.AppendLine("INNER JOIN TPSTTaxHD HD with(nolock) ON DTDis.FTBchCode = HD.FTBchCode AND DTDis.FTXshDocNo = HD.FTXshDocNo");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 90 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE DTDis.FTBchCode = '" + oTax.aoTPSTTaxHD[0].FTBchCode + "' AND DTDis.FTXshDocNo = '" + oTax.aoTPSTTaxHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oTax.aoTPSTTaxDTDis = oConn.Query<cmlTPSTTaxDTDis>(oSql.ToString(), 60).ToList();

                        ////DTPmt
                        //oSql = new StringBuilder();
                        //oSql.AppendLine("SELECT DISTINCT DTPmt.FTBchCode,DTPmt.FTXshDocNo,DTPmt.FTPmhCode,DTPmt.FTXdpGrpName,DTPmt.FTXsdBarCode,DTPmt.FNXsdSeqNo,DTPmt.FCXdpQtyAll,");
                        //oSql.AppendLine("DTPmt.FCXdpNet,DTPmt.FCXdpSetPrice,DTPmt.FCXdpGetQtyDiv,DTPmt.FCXdpGetCond,DTPmt.FCXdpGetValue,DTPmt.FCXdpDis,DTPmt.FCXdpDisAvg,");
                        //oSql.AppendLine("DTPmt.FCXdpPoint,DTPmt.FTXdpStaExceptPmt,DTPmt.FTXdpStaRcv");
                        //oSql.AppendLine("FROM TPSTTaxDTPmt DTPmt with(nolock)");
                        //oSql.AppendLine("INNER JOIN TPSTTaxHD HD with(nolock) ON DTPmt.FTBchCode = HD.FTBchCode AND DTPmt.FTXshDocNo = HD.FTXshDocNo");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 90 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        //oTax.aoTPSTTaxDTPmt = oConn.Query<cmlTPSTTaxDTPmt>(oSql.ToString(), 60).ToList();

                        //RC
                        oSql = new StringBuilder();
                        oSql.AppendLine("SELECT DISTINCT RC.FTBchCode,RC.FTXshDocNo,RC.FNXrcSeqNo,RC.FTRcvCode,RC.FTRcvName,RC.FTXrcRefNo1,RC.FTXrcRefNo2,");
                        oSql.AppendLine("RC.FDXrcRefDate,RC.FTXrcRefDesc,RC.FTBnkCode,RC.FTRteCode,RC.FCXrcRteFac,RC.FCXrcFrmLeftAmt,RC.FCXrcUsrPayAmt,");
                        oSql.AppendLine("RC.FCXrcDep,RC.FCXrcNet,RC.FCXrcChg,RC.FTXrcRmk,RC.FTPhwCode,RC.FTXrcRetDocRef,RC.FTXrcStaPayOffline,");
                        oSql.AppendLine("RC.FDLastUpdOn,RC.FTLastUpdBy,RC.FDCreateOn,RC.FTCreateBy");
                        oSql.AppendLine("FROM TPSTTaxRC RC with(nolock)");
                        //oSql.AppendLine("INNER JOIN TPSTTaxHD HD with(nolock) ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo");
                        //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 90 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                        oSql.AppendLine("WHERE RC.FTBchCode = '" + oTax.aoTPSTTaxHD[0].FTBchCode + "' AND RC.FTXshDocNo = '" + oTax.aoTPSTTaxHD[0].FTXshDocNo + "'"); //*Em 63-06-09
                        oTax.aoTPSTTaxRC = oConn.Query<cmlTPSTTaxRC>(oSql.ToString(), 60).ToList();

                        //ADDRESS   
                        //*Arm 62-10-09  - Upload TaxAddress
                        if (oTax.aoTPSTTaxHDCst != null && oTax.aoTPSTTaxHDCst.Count > 0)
                        {
                            oSql = new StringBuilder();
                            oSql.AppendLine("SELECT DISTINCT ADDR.FTAddTaxNo,ADDR.FNLngID,ADDR.FNAddSeqNo,ADDR.FTAddRefNo,ADDR.FTAddName,");
                            oSql.AppendLine("ADDR.FTAddRmk,ADDR.FTAddCountry,ADDR.FTAreCode,ADDR.FTZneCode,ADDR.FTAddVersion,");
                            oSql.AppendLine("ADDR.FTAddV1No,ADDR.FTAddV1Soi,ADDR.FTAddV1Village,ADDR.FTAddV1Road,ADDR.FTAddV1SubDist,");
                            oSql.AppendLine("ADDR.FTAddV1DstCode,ADDR.FTAddV1PvnCode,ADDR.FTAddV1PostCode,ADDR.FTAddV2Desc1,ADDR.FTAddV2Desc2,");
                            oSql.AppendLine("ADDR.FTAddWebsite,	ADDR.FTAddLongitude,ADDR.FTAddLatitude,ADDR.FTAddStaBusiness,ADDR.FTAddStaHQ,");
                            oSql.AppendLine("ADDR.FTAddStaBchCode,ADDR.FTAddTel,ADDR.FTAddFax,ADDR.FDLastUpdOn,ADDR.FTLastUpdBy,");
                            oSql.AppendLine("ADDR.FDCreateOn,ADDR.FTCreateBy");
                            oSql.AppendLine("FROM TCNMTaxAddress_L ADDR with(nolock)");
                            //oSql.AppendLine("INNER JOIN TPSTTaxHDCst HDCst with(nolock) ON ADDR.FTAddTaxNo = HDCst.FTXshCardID");
                            //oSql.AppendLine("INNER JOIN TPSTTaxHD HD with(nolock) ON HDCst.FTBchCode = HD.FTBchCode AND HDCst.FTXshDocNo = HD.FTXshDocNo");
                            //oSql.AppendLine("INNER JOIN TCNTTmpLogChg TLC with(nolock) ON HD.FTShfCode = TLC.FTLogCode AND HD.FTXshDocNo = TLC.FTLogDocNo AND TLC.FNLogType = 90 AND ISNULL(TLC.FTLogStaPrc,'') = '1'");
                            oSql.AppendLine("WHERE ADDR.FTAddTaxNo = '" + oTax.aoTPSTTaxHDCst[0].FTXshCardID + "'"); //*Em 63-06-09
                            oTax.aoTCNMTaxAddress = oConn.Query<cmlTCNMTaxAddress>(oSql.ToString(), 60).ToList();   //*Arm 62-10-09  - Upload TaxAddress 
                        }

                        string tJSonCall = JsonConvert.SerializeObject(oTax);
                        cClientService oCall = new cClientService();
                        oCall = new cClientService(cVB.tVB_APIHeader, cVB.tVB_AgnKeyAPI);
                        HttpResponseMessage oRep = new HttpResponseMessage();
                        try
                        {
                            oRep = oCall.C_POSToInvoke(cVB.tVB_API2PSSale + poSync.FTSynUriUld, tJSonCall);
                        }
                        catch (Exception oEx)
                        {
                            new cLog().C_WRTxLog("cSyncData", "C_SYNxTax : " + oEx.Message);
                            return false;
                        }

                        if (oRep.StatusCode == System.Net.HttpStatusCode.OK)
                        {
                            string tJSonRes = oRep.Content.ReadAsStringAsync().Result;
                            cmlResResult oRes = JsonConvert.DeserializeObject<cmlResResult>(tJSonRes);
                            if (oRes.rtCode == "001")
                            {
                                oSql = new StringBuilder();
                                oSql.AppendLine("UPDATE TCNTTmpLogChg with(rowlock)");
                                oSql.AppendLine("SET FTLogStaPrc = '2'");
                                oSql.AppendLine(",FDLastUpdOn = GETDATE()");
                                oSql.AppendLine("WHERE FNLogType = 90 AND ISNULL(FTLogStaPrc,'') = '1'");
                                oDB.C_SETxDataQuery(oSql.ToString());
                                bSuccess = true;
                            }
                            else
                            {
                                new cLog().C_WRTxLog("cSyncData", "C_SYNxTax : " + oRes.rtMsg);
                            }
                        }

                        oRep.Dispose();    //*Em 63-07-17
                        oCall.C_PRCxCloseConn(); //*Em 63-07-17
                    }
                }
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_SYNxTax : " + oEx.Message); }
            finally
            {
                oDB = null;
                oSql = null;
                //new cSP().SP_CLExMemory();
            }
            return bSuccess;
        }
        #endregion Tax

        public void C_PRCxMonitorServ()
        {
            string tExPub = "AR_XPepairingSale";
            string tMsg;
            cmlMonitorReq oMonitor;
            try
            {
                if (string.IsNullOrEmpty(cVB.tVB_HQMQHost)) return;
                if (string.IsNullOrEmpty(cVB.tVB_HQMQUsr)) return;
                if (string.IsNullOrEmpty(cVB.tVB_HQMQPwd)) return;
                if (string.IsNullOrEmpty(cVB.tVB_HQMQVirtual)) return;

                cVB.oVB_RabbitMQConfig.tHostName = cVB.tVB_HQMQHost;
                cVB.oVB_RabbitMQConfig.tUserName = cVB.tVB_HQMQUsr;
                cVB.oVB_RabbitMQConfig.tPassword = cVB.tVB_HQMQPwd;
                cVB.oVB_RabbitMQConfig.tVirtual = cVB.tVB_HQMQVirtual;

                cVB.oVB_MQFactory = new RabbitMQ.Client.ConnectionFactory();
                cVB.oVB_MQFactory.HostName = cVB.oVB_RabbitMQConfig.tHostName;
                cVB.oVB_MQFactory.UserName = cVB.oVB_RabbitMQConfig.tUserName;
                cVB.oVB_MQFactory.Password = cVB.oVB_RabbitMQConfig.tPassword;
                cVB.oVB_MQFactory.VirtualHost = cVB.oVB_RabbitMQConfig.tVirtual;

                cVB.oVB_MQConn = cVB.oVB_MQFactory.CreateConnection();
                cVB.oVB_MQModel = cVB.oVB_MQConn.CreateModel();

                oMonitor = new cmlMonitorReq();
                oMonitor.tBchCode = cVB.tVB_BchCode;
                oMonitor.tPosCode = cVB.tVB_PosCode;
                if (cVB.cVB_MonitorSalGrand == null)
                {
                    oMonitor.tType = "5";
                    oMonitor.cPosGrand = 0m;
                    oMonitor.tPosLastSync = "";
                    oMonitor.tPosLastDocNo = "";
                }
                else
                {
                    oMonitor.tType = "1";
                    oMonitor.cPosGrand = cVB.cVB_MonitorSalGrand.Value;
                    oMonitor.tPosLastSync = cVB.dVB_TimeStamp.ToString("dd/MM/yyyy HH:mm:ss");
                    oMonitor.tPosLastDocNo = cVB.tVB_MonitorDocNo;
                    cVB.cVB_MonitorSalGrand = null;
                }
                oMonitor.tDateRequest = DateTime.Now.ToString("yyyy-MM-dd");
                tMsg = JsonConvert.SerializeObject(oMonitor);

                cVB.oVB_MQModel.BasicPublish(tExPub, cVB.tVB_BchCode + cVB.tVB_PosCode,
                                            false, null, Encoding.UTF8.GetBytes(tMsg));
                cVB.oVB_MQModel.Close();
                cVB.oVB_MQConn.Close();
                cVB.oVB_MQFactory = null;
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_PRCxMonitorServ : " + oEx.Message);
            }
            finally
            {
                oMonitor = null;
                //new cSP().SP_CLExMemory();
            }
        }
        #endregion Upload

        #region RcvSpc
        //*Arm 62-01-10 
        private bool C_DWNbRcvSpc(cmlResItemOfcmlResRcvSpcDwn poRcvSpc)
        {
            StringBuilder oSql;
            SqlTransaction oTranscation;
            List<cmlTFNMRcvSpcTmp> aoRcvSpc;
            cDataReaderAdapter<cmlTFNMRcvSpcTmp> oRcvSpc;

            try
            {
                // Create Tmp
                oSql = new StringBuilder();
                oSql.AppendLine("IF NOT EXISTS(SELECT name FROM sys.tables WHERE OBJECT_ID = object_id('TFNMRcvSpcTmp'))");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("	    SELECT TOP 0 * INTO TFNMRcvSpcTmp FROM TFNMRcvSpc with(nolock)");
                oSql.AppendLine("   END");
                oSql.AppendLine("ELSE");
                oSql.AppendLine("   BEGIN");
                oSql.AppendLine("       IF ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRcvSpcTmp' ),0) <> ISNULL((SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNMRcvSpc' ),0)");
                oSql.AppendLine("       BEGIN");
                oSql.AppendLine("   	    DROP TABLE TFNMRcvSpcTmp");
                oSql.AppendLine("   	    SELECT TOP 0 * INTO TFNMRcvSpcTmp FROM TFNMRcvSpc with(nolock)");
                oSql.AppendLine("       END");
                oSql.AppendLine("   END");
                oSql.AppendLine("TRUNCATE TABLE TFNMRcvSpcTmp");

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                // Bulk Copy : TSysRcvApp
                aoRcvSpc = C_PRCaListRcvSpc(poRcvSpc.roItem.raRcvSpc);

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();
                oRcvSpc = new cDataReaderAdapter<cmlTFNMRcvSpcTmp>(aoRcvSpc);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oRcvSpc.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TFNMRcvSpcTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oRcvSpc);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNbRcvSpc/TFNMRcvSpcTmp : " + oEx.Message);
                        return false;
                    }
                }

                oTranscation.Commit();

                // JOIN DELETE & Insert & Drop Table
                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("   BEGIN TRANSACTION");
                oSql.AppendLine("   DELETE RCV ");
                oSql.AppendLine("   FROM TFNMRcvSpc RCV WITH(ROWLOCK)");
                oSql.AppendLine("   INNER JOIN TFNMRcvSpcTmp RCVTmp WITH(NOLOCK) ON RCV.FTRcvCode = RCVTmp.FTRcvCode AND RCV.FTAppCode = RCVTmp.FTAppCode AND ISNULL(RCV.FTBchCode,'') = ISNULL(RCVTmp.FTBchCode,'')");
                oSql.AppendLine("   AND ISNULL(RCV.FTMerCode,'') = ISNULL(RCVTmp.FTMerCode,'') AND ISNULL(RCV.FTShpCode,'') = ISNULL(RCVTmp.FTShpCode,'') AND ISNULL(RCV.FTAggCode,'') = ISNULL(RCVTmp.FTAggCode,'')");
                oSql.AppendLine();
                oSql.AppendLine("   INSERT INTO TFNMRcvSpc ");
                oSql.AppendLine("   SELECT FTRcvCode,FTAppCode,FTBchCode,FTMerCode,FTShpCode,");
                //oSql.AppendLine("   FTAggCode,FTPdtRmk,FTAppStaAlwRet,FTAppStaAlwCancel,FTAppStaPayLast");  //*Arm 63-07-30 Comment Code
                oSql.AppendLine("   FTAggCode,FTPdtRmk");   //*Arm 63-07-30
                oSql.AppendLine("   FROM TFNMRcvSpcTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("   COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                new cDatabase().C_SETxDataQuery(oSql.ToString());

                return true;
            }

            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNbRcvSpc : " + oEx.Message);
                return false;
            }
            //+++++++++++++
            finally
            {
                poRcvSpc = null;
                oSql = null;
                oTranscation = null;
                aoRcvSpc = null;
                oRcvSpc = null;
                //oC_SP.SP_CLExMemory();
            }
        }
        /// <summary>
        /// Process list System Receive payment by Application
        /// </summary>
        /// <returns></returns>
        private List<cmlTFNMRcvSpcTmp> C_PRCaListRcvSpc(List<cmlResInfoRcvSpc> paoRcvSpc)
        {
            List<cmlTFNMRcvSpcTmp> aoData = new List<cmlTFNMRcvSpcTmp>();

            try
            {
                aoData = paoRcvSpc.Select(oItem => new cmlTFNMRcvSpcTmp()
                {
                    FTRcvCode = oItem.rtRcvCode,
                    FTAppCode = oItem.rtAppCode,
                    FNRcvSeq = oItem.rnRcvSeq,
                    FTBchCode = oItem.rtBchCode,
                    FTMerCode = oItem.rtMerCode,
                    FTShpCode = oItem.rtShpCode,
                    FTAggCode = oItem.rtAggCode,
                    FTPdtRmk = oItem.rtPdtRmk
                    //FTAppStaAlwRet = oItem.rtAppStaAlwRet,        //*Arm 63-07-30 Comment Code (ยกเลิก)
                    //FTAppStaAlwCancel = oItem.rtAppStaAlwCancel,  //*Arm 63-07-30 Comment Code (ยกเลิก)
                    //FTAppStaPayLast = oItem.rtAppStaPayLast       //*Arm 63-07-30 Comment Code (ยกเลิก)
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRcvSpc : " + oEx.Message); }
            finally
            {
                paoRcvSpc = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }
        #endregion End RcvSpc

        #region Redeem point

        /// <summary>
        /// *Arm 63-03-13
        /// Download Redeem point
        /// </summary>
        /// <param name="poRedeem"></param>
        /// <returns></returns>
        private bool C_DWNboRedeem(cmlResItemOfcmlResRedeemPointDwn poRedeem)
        {
            StringBuilder oSql;
            cDatabase oDB;
            SqlTransaction oTranscation;

            List<cmlTARTRedeemHDTmp> aoHD;
            List<cmlTARTRedeemHDTmp_L> aoHDLng;
            List<cmlTARTRedeemHDBchTmp> aoHDBch;
            List<cmlTARTRedeemHDCstPriTmp> aoHDCstPri;
            List<cmlTARTRedeemDTTmp> aoDT;
            List<cmlTARTRedeemCDTmp> aoCD;

            cDataReaderAdapter<cmlTARTRedeemHDTmp> oHD;
            cDataReaderAdapter<cmlTARTRedeemHDTmp_L> oHDLng;
            cDataReaderAdapter<cmlTARTRedeemHDBchTmp> oHDBch;
            cDataReaderAdapter<cmlTARTRedeemHDCstPriTmp> oHDCstPri;
            cDataReaderAdapter<cmlTARTRedeemDTTmp> oDT;
            cDataReaderAdapter<cmlTARTRedeemCDTmp> oCD;

            try
            {
                oSql = new StringBuilder();
                oDB = new cDatabase();

                new cDatabase().C_PRCxCreateDatabaseTmp("TARTRedeemHD", "TARTRedeemHDTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TARTRedeemHD_L", "TARTRedeemHDTmp_L");
                new cDatabase().C_PRCxCreateDatabaseTmp("TARTRedeemHDBch", "TARTRedeemHDBchTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TARTRedeemHDCstPri", "TARTRedeemHDCstPriTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TARTRedeemDT", "TARTRedeemDTTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TARTRedeemCD", "TARTRedeemCDTmp");

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();

                // Bulk Copy : TARTRedeemHD
                aoHD = C_PRCaListRedeemHD(poRedeem.roItem.raRedeemHD);

                oHD = new cDataReaderAdapter<cmlTARTRedeemHDTmp>(aoHD);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oHD.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TARTRedeemHDTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oHD);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboRedeem : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TARTRedeemHD_L
                aoHDLng = C_PRCaListRedeemHDLng(poRedeem.roItem.raRedeemHDLng);

                oHDLng = new cDataReaderAdapter<cmlTARTRedeemHDTmp_L>(aoHDLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oHDLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TARTRedeemHDTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oHDLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboRedeem : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TARTRedeemHDBch
                aoHDBch = C_PRCaListRedeemHDBch(poRedeem.roItem.raRedeemHDBch);

                oHDBch = new cDataReaderAdapter<cmlTARTRedeemHDBchTmp>(aoHDBch);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oHDBch.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TARTRedeemHDBchTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oHDBch);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboRedeem : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TARTRedeemHDBch
                aoHDCstPri = C_PRCaListRedeemHDCstPri(poRedeem.roItem.raRedeemHDCstPri);

                oHDCstPri = new cDataReaderAdapter<cmlTARTRedeemHDCstPriTmp>(aoHDCstPri);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oHDCstPri.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TARTRedeemHDCstPriTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oHDCstPri);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboRedeem : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TARTRedeemHDBch
                aoDT = C_PRCaListRedeemDT(poRedeem.roItem.raRedeemDT);

                oDT = new cDataReaderAdapter<cmlTARTRedeemDTTmp>(aoDT);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oDT.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TARTRedeemDTTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oDT);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboRedeem : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : TARTRedeemHDBch
                aoCD = C_PRCaListRedeemCD(poRedeem.roItem.raRedeemCD);

                oCD = new cDataReaderAdapter<cmlTARTRedeemCDTmp>(aoCD);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oCD.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TARTRedeemCDTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oCD);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboRedeem : " + oEx.Message);
                        return false;
                    }
                }

                oTranscation.Commit();

                oSql.Clear();
                //HD
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE HD ");
                oSql.AppendLine("FROM TARTRedeemHD HD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TARTRedeemHDTmp HDTmp WITH(NOLOCK) ON HD.FTBchCode = HDTmp.FTBchCode AND HD.FTRdhDocNo = HDTmp.FTRdhDocNo");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TARTRedeemHD");
                oSql.AppendLine("SELECT * FROM TARTRedeemHDTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //HD_L
                oSql.AppendLine("DELETE HDL ");
                oSql.AppendLine("FROM TARTRedeemHD_L HDL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TARTRedeemHDTmp_L HDLTmp WITH(NOLOCK) ON HDL.FTBchCode = HDLTmp.FTBchCode AND HDL.FTRdhDocNo = HDLTmp.FTRdhDocNo AND HDL.FNLngID = HDLTmp.FNLngID");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TARTRedeemHD_L");
                oSql.AppendLine("SELECT * FROM TARTRedeemHDTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //HDBch
                oSql.AppendLine("DELETE BCH ");
                oSql.AppendLine("FROM TARTRedeemHDBch BCH WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TARTRedeemHDBchTmp BCHTmp WITH(NOLOCK) ON BCH.FTBchCode = BCHTmp.FTBchCode AND BCH.FTRdhDocNo = BCHTmp.FTRdhDocNo ");
                oSql.AppendLine("   AND BCH.FTRdhBchTo = BCHTmp.FTRdhBchTo AND BCH.FTRdhMerTo = BCHTmp.FTRdhMerTo AND BCH.FTRdhShpTo = BCHTmp.FTRdhShpTo ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TARTRedeemHDBch");
                oSql.AppendLine("SELECT * FROM TARTRedeemHDBchTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //HDCstPri
                oSql.AppendLine("DELETE CST ");
                oSql.AppendLine("FROM TARTRedeemHDCstPri CST WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TARTRedeemHDCstPriTmp CSTTmp WITH(NOLOCK) ON CST.FTBchCode = CSTTmp.FTBchCode AND CST.FTRdhDocNo = CSTTmp.FTRdhDocNo AND CST.FTPplCode = CSTTmp.FTPplCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TARTRedeemHDCstPri");
                oSql.AppendLine("SELECT * FROM TARTRedeemHDCstPriTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //DT
                oSql.AppendLine("DELETE DT ");
                oSql.AppendLine("FROM TARTRedeemDT DT WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TARTRedeemDTTmp DTTmp WITH(NOLOCK) ON DT.FTBchCode = DTTmp.FTBchCode AND DT.FTRdhDocNo = DTTmp.FTRdhDocNo AND DT.FNRddSeq = DTTmp.FNRddSeq ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TARTRedeemDT");
                oSql.AppendLine("SELECT * FROM TARTRedeemDTTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                //DT
                oSql.AppendLine("DELETE CD ");
                oSql.AppendLine("FROM TARTRedeemCD CD WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TARTRedeemCDTmp CDTmp WITH(NOLOCK) ON CD.FTBchCode = CDTmp.FTBchCode AND CD.FTRdhDocNo = CDTmp.FTRdhDocNo AND CD.FNRdcSeq = CDTmp.FNRdcSeq ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TARTRedeemCD");
                oSql.AppendLine("SELECT * FROM TARTRedeemCDTmp WITH(NOLOCK) ");
                oSql.AppendLine();

                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                oDB.C_SETxDataQuery(oSql.ToString());


                return true;
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNboRedeem : " + oEx.Message);
                return false;
            }
            finally
            {
                oDB = null;
                oSql = null;
                poRedeem = null;
            }
        }

        /// <summary>
        /// Process list RedeemHD by Redeem
        /// </summary>
        /// <param name="paoRedeemHD"></param>
        /// <returns></returns>
        private List<cmlTARTRedeemHDTmp> C_PRCaListRedeemHD(List<cmlResInfoRedeemHD> paoRedeemHD)
        {
            List<cmlTARTRedeemHDTmp> aoData = new List<cmlTARTRedeemHDTmp>();

            try
            {
                aoData = paoRedeemHD.Select(oItem => new cmlTARTRedeemHDTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTRdhDocNo = oItem.rtRdhDocNo,
                    FDRdhDocDate = oItem.rdRdhDocDate,
                    FTRdhDocType = oItem.rtRdhDocType,
                    FTRdhCalType = oItem.rtRdhCalType,
                    FDRdhDStart = oItem.rdRdhDStart,
                    FDRdhDStop = oItem.rdRdhDStop,
                    FDRdhTStart = oItem.rdRdhTStart,
                    FDRdhTStop = oItem.rdRdhTStop,
                    FTRdhStaClosed = oItem.rtRdhStaClosed,
                    FTRdhStaDoc = oItem.rtRdhStaDoc,
                    FTRdhStaApv = oItem.rtRdhStaApv,
                    FTRdhStaPrcDoc = oItem.rtRdhStaPrcDoc,
                    FNRdhStaDocAct = oItem.rnRdhStaDocAct,
                    FTUsrCode = oItem.rtUsrCode,
                    FTRdhUsrApv = oItem.rtRdhUsrApv,
                    FTRdhStaOnTopPmt = oItem.rtRdhStaOnTopPmt,
                    FNRdhLimitQty = oItem.rnRdhLimitQty,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRedeemHD : " + oEx.Message); }
            finally
            {
                paoRedeemHD = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// Process list RedeemHD_L by Redeem
        /// </summary>
        /// <param name="paoRedeemHDLng"></param>
        /// <returns></returns>
        private List<cmlTARTRedeemHDTmp_L> C_PRCaListRedeemHDLng(List<cmlResInfoRedeemHDLng> paoRedeemHDLng)
        {
            List<cmlTARTRedeemHDTmp_L> aoData = new List<cmlTARTRedeemHDTmp_L>();

            try
            {
                aoData = paoRedeemHDLng.Select(oItem => new cmlTARTRedeemHDTmp_L()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTRdhDocNo = oItem.rtRdhDocNo,
                    FNLngID = oItem.rnLngID,
                    FTRdhName = oItem.rtRdhName,
                    FTRdhNameSlip = oItem.rtRdhNameSlip,
                    FTRdhRmk = oItem.rtRdhRmk
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRedeemHDLng : " + oEx.Message); }
            finally
            {
                paoRedeemHDLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// Process list RedeemHDBch by Redeem
        /// </summary>
        /// <param name="paoRedeemHDBch"></param>
        /// <returns></returns>
        private List<cmlTARTRedeemHDBchTmp> C_PRCaListRedeemHDBch(List<cmlResInfoRedeemHDBch> paoRedeemHDBch)
        {
            List<cmlTARTRedeemHDBchTmp> aoData = new List<cmlTARTRedeemHDBchTmp>();

            try
            {
                aoData = paoRedeemHDBch.Select(oItem => new cmlTARTRedeemHDBchTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTRdhDocNo = oItem.rtRdhDocNo,
                    FTRdhBchTo = oItem.rtRdhBchTo,
                    FTRdhMerTo = oItem.rtRdhMerTo,
                    FTRdhShpTo = oItem.rtRdhShpTo,
                    FTRdhStaType = oItem.rtRdhStaType
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRedeemHDBch : " + oEx.Message); }
            finally
            {
                paoRedeemHDBch = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// Process list RedeemHDCstPri by Redeem
        /// </summary>
        /// <param name="paoRedeemHDCstPri"></param>
        /// <returns></returns>
        private List<cmlTARTRedeemHDCstPriTmp> C_PRCaListRedeemHDCstPri(List<cmlResInfoRedeemHDCstPri> paoRedeemHDCstPri)
        {
            List<cmlTARTRedeemHDCstPriTmp> aoData = new List<cmlTARTRedeemHDCstPriTmp>();

            try
            {
                aoData = paoRedeemHDCstPri.Select(oItem => new cmlTARTRedeemHDCstPriTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTRdhDocNo = oItem.rtRdhDocNo,
                    FTPplCode = oItem.rtPplCode,
                    FTRdhStaType = oItem.rtRdhStaType
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRedeemHDCstPri : " + oEx.Message); }
            finally
            {
                paoRedeemHDCstPri = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// Process list RedeemDT by Redeem
        /// </summary>
        /// <param name="paoRedeemDT"></param>
        /// <returns></returns>
        private List<cmlTARTRedeemDTTmp> C_PRCaListRedeemDT(List<cmlResInfoRedeemDT> paoRedeemDT)
        {
            List<cmlTARTRedeemDTTmp> aoData = new List<cmlTARTRedeemDTTmp>();

            try
            {
                aoData = paoRedeemDT.Select(oItem => new cmlTARTRedeemDTTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTRdhDocNo = oItem.rtRdhDocNo,
                    FNRddSeq = oItem.rnRddSeq,
                    FTRddStaType = oItem.rtRddStaType,
                    FTRddGrpName = oItem.rtRddGrpName,
                    FTPdtCode = oItem.rtPdtCode,
                    FTPunCode = oItem.rtPunCode,
                    FTRddBarCode = oItem.rtRddBarCode

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRedeemDT : " + oEx.Message); }
            finally
            {
                paoRedeemDT = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// Process list RedeemCD by Redeem
        /// </summary>
        /// <param name="paoRedeemCD"></param>
        /// <returns></returns>
        private List<cmlTARTRedeemCDTmp> C_PRCaListRedeemCD(List<cmlResInfoRedeemCD> paoRedeemCD)
        {
            List<cmlTARTRedeemCDTmp> aoData = new List<cmlTARTRedeemCDTmp>();

            try
            {
                aoData = paoRedeemCD.Select(oItem => new cmlTARTRedeemCDTmp()
                {
                    FTBchCode = oItem.rtBchCode,
                    FTRdhDocNo = oItem.rtRdhDocNo,
                    FNRdcSeq = oItem.rnRdcSeq,
                    FTRddGrpName = oItem.rtRddGrpName,
                    FTRdcRefCode = oItem.rtRdcRefCode,
                    FCRdcUsePoint = oItem.rcRdcUsePoint,
                    FCRdcUseMny = oItem.rcRdcUseMny,
                    FCRdcMinTotBill = oItem.rcRdcMinTotBill

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListRedeemCD : " + oEx.Message); }
            finally
            {
                paoRedeemCD = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }
        #endregion End Redeem point

        #region Load Redeem & Coupon ลง Temp

        /// <summary>
        /// *Arm 63-03-26
        /// Call Redeem Poit ลง TPSTRedeemHD_Tmp
        /// </summary>
        /// <returns></returns>
        public bool W_PRCbGetRedeem2Tmp()
        {
            cDatabase oDatabase;
            SqlParameter[] aoSqlParam;

            try
            {
                aoSqlParam = new SqlParameter[] {
                    new SqlParameter ("@ptSaleDate", SqlDbType.VarChar, 10){ Value = DateTime.Now.ToString("yyyy-MM-dd")},
                    new SqlParameter ("@ptBchReq", SqlDbType.VarChar, 5){ Value = cVB.tVB_BchCode ?? string.Empty},
                    new SqlParameter ("@ptMerchantReq", SqlDbType.VarChar, 5){ Value = cVB.tVB_Merchart ?? string.Empty},
                    new SqlParameter ("@ptShopReq", SqlDbType.VarChar, 5){ Value = cVB.tVB_ShpCode ?? string.Empty},
                    new SqlParameter ("@FNResult", OleDbType.Integer) {
                        Direction = ParameterDirection.Output }
                };

                oDatabase = new cDatabase();

                if (oDatabase.C_DATbExecuteStoreProcedure(cVB.oVB_Config, "STP_PRCxGetRedeem", ref aoSqlParam, "@FNResult") == true)
                {
                    return true;
                }
                else
                {
                    return false;
                }

            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "W_PRCbGetRedeem : " + oEx.Message);
                return false;
            }
            finally
            {
                oDatabase = null;
                aoSqlParam = null;
            }
        }

        /// <summary>
        /// *Arm 63-03-26
        /// Get RedeemCoupon ลง TPSTCouponHDTmp
        /// </summary>
        /// <returns></returns>
        public bool W_PRCbGetRedeemCoupon2Tmp()
        {
            cDatabase oDatabase;
            SqlParameter[] aoSqlParam;
            try
            {
                aoSqlParam = new SqlParameter[] {
                    new SqlParameter ("@ptSaleDate", SqlDbType.VarChar, 10){ Value = DateTime.Now.ToString("yyyy-MM-dd")},
                    new SqlParameter ("@ptBchReq", SqlDbType.VarChar, 5){ Value = cVB.tVB_BchCode ?? string.Empty},
                    new SqlParameter ("@ptMerchantReq", SqlDbType.VarChar, 5){ Value = cVB.tVB_Merchart ?? string.Empty},
                    new SqlParameter ("@ptShopReq", SqlDbType.VarChar, 5){ Value = cVB.tVB_ShpCode ?? string.Empty},
                    new SqlParameter ("@FNResult", SqlDbType.Int) {
                        Direction = ParameterDirection.Output }
                };

                oDatabase = new cDatabase();

                if (oDatabase.C_DATbExecuteStoreProcedure(cVB.oVB_Config, "STP_PRCxGetCoupon", ref aoSqlParam, "@FNResult") == true)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "W_PRCbGetRedeemCoupon2Tmp : " + oEx.Message);
                return false;
            }
            finally
            {
                aoSqlParam = null;
                oDatabase = null;
            }
        }

        #endregion End Load Redeem & Coupon ลง Temp

        #region Download Transaction API
        /// <summary>
        ///  Dowload Transaction API  (*Arm 63-06-16 )
        /// </summary>
        /// <param name="poRedeem"></param>
        /// <returns></returns>
        private bool C_DWNboTxnAPI(cmlResItemOfcmlResTxnAPIDwn poTxnAPI)
        {
            StringBuilder oSql;
            cDatabase oDB;
            SqlTransaction oTranscation;

            List<cmlTCNMTxnAPITmp> aoTxnAPI;
            List<cmlTCNMTxnAPITmp_L> aoTxnAPILng;
            List<cmlTCNMTxnSpcAPITmp> aoTxnSpcAPI;

            cDataReaderAdapter<cmlTCNMTxnAPITmp> oTxnAPI;
            cDataReaderAdapter<cmlTCNMTxnAPITmp_L> oTxnAPILng;
            cDataReaderAdapter<cmlTCNMTxnSpcAPITmp> oTxnSpcAPI;

            try
            {
                oSql = new StringBuilder();
                oDB = new cDatabase();

                new cDatabase().C_PRCxCreateDatabaseTmp("TCNMTxnAPI", "TCNMTxnAPITmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TCNMTxnAPI_L", "TCNMTxnAPITmp_L");
                new cDatabase().C_PRCxCreateDatabaseTmp("TCNMTxnSpcAPI", "TCNMTxnSpcAPITmp");

                oTranscation = cVB.oVB_ConnDB.BeginTransaction();

                // Bulk Copy : 
                aoTxnAPI = C_PRCaListTxnAPI(poTxnAPI.roItem.raTCNMTxnAPI);
                oTxnAPI = new cDataReaderAdapter<cmlTCNMTxnAPITmp>(aoTxnAPI);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    //*Em 62-08-21
                    foreach (string tColName in oTxnAPI.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    //+++++++++++++
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMTxnAPITmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oTxnAPI);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboTxnAPI/TCNMTxnAPITmp : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : 
                aoTxnAPILng = C_PRCaListTxnAPILng(poTxnAPI.roItem.raTCNMTxnAPILng);

                oTxnAPILng = new cDataReaderAdapter<cmlTCNMTxnAPITmp_L>(aoTxnAPILng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oTxnAPILng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMTxnAPITmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oTxnAPILng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboTxnAPI/TCNMTxnAPITmp_L : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : 
                aoTxnSpcAPI = C_PRCaListTxnSpcAPI(poTxnAPI.roItem.raTCNMTxnSpcAPI);

                oTxnSpcAPI = new cDataReaderAdapter<cmlTCNMTxnSpcAPITmp>(aoTxnSpcAPI);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oTxnSpcAPI.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TCNMTxnSpcAPITmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oTxnSpcAPI);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboTxnAPI/TCNMTxnSpcAPITmp : " + oEx.Message);
                        return false;
                    }
                }
                oTranscation.Commit();

                oSql.Clear();
                //HD
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE API ");
                oSql.AppendLine("FROM TCNMTxnAPI API WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMTxnAPITmp APITmp WITH(NOLOCK) ON API.FTApiCode = APITmp.FTApiCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMTxnAPI");
                oSql.AppendLine("SELECT * FROM TCNMTxnAPITmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("DELETE APIL ");
                oSql.AppendLine("FROM TCNMTxnAPI_L APIL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMTxnAPITmp_L APILTmp WITH(NOLOCK) ON APIL.FTApiCode = APILTmp.FTApiCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMTxnAPI_L");
                oSql.AppendLine("SELECT * FROM TCNMTxnAPITmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("DELETE SAPI ");
                oSql.AppendLine("FROM TCNMTxnSpcAPI SAPI WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TCNMTxnSpcAPITmp SAPITmp WITH(NOLOCK) ON SAPI.FTApiCode = SAPITmp.FTApiCode AND SAPI.FTCmpCode = SAPITmp.FTCmpCode");
                oSql.AppendLine("AND SAPI.FTAgnCode = SAPITmp.FTAgnCode AND SAPI.FTBchCode = SAPITmp.FTBchCode");
                oSql.AppendLine("AND SAPI.FTMerCode = SAPITmp.FTMerCode AND SAPI.FTShpCode = SAPITmp.FTShpCode");
                oSql.AppendLine("AND SAPI.FTPosCode = SAPITmp.FTPosCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TCNMTxnSpcAPI");
                oSql.AppendLine("SELECT * FROM TCNMTxnSpcAPITmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                oDB.C_SETxDataQuery(oSql.ToString());


                return true;
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNboRedeem : " + oEx.Message);
                return false;
            }
            finally
            {
                oDB = null;
                oSql = null;
                poTxnAPI = null;
                oTxnAPI = null;
                oTxnAPILng = null;
                oTxnSpcAPI = null;
                aoTxnAPI = null;
                aoTxnAPILng = null;
                aoTxnSpcAPI = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// Process List Transaction API Spc (*Arm 63-06-16 )
        /// </summary>
        /// <param name="paoTxnSpcAPI"></param>
        /// <returns></returns>
        private List<cmlTCNMTxnSpcAPITmp> C_PRCaListTxnSpcAPI(List<cmlResInfoTxnSpcAPI> paoTxnSpcAPI)
        {
            List<cmlTCNMTxnSpcAPITmp> aoData = new List<cmlTCNMTxnSpcAPITmp>();

            try
            {
                aoData = paoTxnSpcAPI.Select(oItem => new cmlTCNMTxnSpcAPITmp()
                {
                    FTApiCode = oItem.rtApiCode,
                    FTCmpCode = oItem.rtCmpCode,
                    FTAgnCode = oItem.rtAgnCode,
                    FTBchCode = oItem.rtBchCode,
                    FTMerCode = oItem.rtMerCode,
                    FTShpCode = oItem.rtShpCode,
                    FTPosCode = oItem.rtPosCode,
                    FTApiFmtCode = oItem.rtApiFmtCode,
                    FTApiURL = oItem.rtApiURL,
                    FTSpaUsrCode = oItem.rtSpaUsrCode,
                    FTSpaUsrPwd = oItem.rtSpaUsrPwd,
                    FTSpaApiKey = oItem.rtSpaApiKey,
                    FTSpaRmk = oItem.rtSpaRmk,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy
                    
                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListTxnSpcAPI : " + oEx.Message); }
            finally
            {
                paoTxnSpcAPI = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// Process List Transaction API Lng (*Arm 63-06-16 )
        /// </summary>
        /// <param name="paoTxnAPILng"></param>
        /// <returns></returns>
        private List<cmlTCNMTxnAPITmp_L> C_PRCaListTxnAPILng(List<cmlResInfoTxnAPILng> paoTxnAPILng)
        {
            List<cmlTCNMTxnAPITmp_L> aoData = new List<cmlTCNMTxnAPITmp_L>();

            try
            {
                aoData = paoTxnAPILng.Select(oItem => new cmlTCNMTxnAPITmp_L()
                {
                    FTApiCode = oItem.rtApiCode,
                    FNLngID = oItem.rnLngID,
                    FTApiName = oItem.rtApiName,
                    FTApiRmk = oItem.rtApiRmk

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListTxnAPILng : " + oEx.Message); }
            finally
            {
                paoTxnAPILng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// Process List Transaction API (*Arm 63-06-16 )
        /// </summary>
        /// <param name="paoTxnSpcAPI"></param>
        /// <returns></returns>
        public List<cmlTCNMTxnAPITmp> C_PRCaListTxnAPI(List<cmlResInfoTxnAPI> paoTxnAPI)
        {
            List<cmlTCNMTxnAPITmp> aoData = new List<cmlTCNMTxnAPITmp>();

            try
            {
                aoData = paoTxnAPI.Select(oItem => new cmlTCNMTxnAPITmp()
                {
                    FTApiCode = oItem.rtApiCode,
                    FTApiTxnType = oItem.rtApiTxnType,
                    FTApiPrcType = oItem.rtApiPrcType,
                    FTApiGrpPrc = oItem.rtApiGrpPrc,
                    FNApiGrpSeq = oItem.rnApiGrpSeq,
                    FTApiFmtCode = oItem.rtApiFmtCode,
                    FTApiURL = oItem.rtApiURL,
                    FTApiLoginUsr = oItem.rtApiLoginUsr,
                    FTApiLoginPwd = oItem.rtApiLoginPwd,
                    FTApiToken = oItem.rtApiToken,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy


                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListTxnAPI : " + oEx.Message); }
            finally
            {
                paoTxnAPI = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }
        #endregion End Download Transaction API


        #region Interface Wahouse (TLKMWahouse)
        /// <summary>
        /// Download Interface Wahouae (*Arm 63-06-24)
        /// </summary>
        /// <param name="paoWah"></param>
        /// <returns></returns>
        public bool C_DWNboInterfaceWahouse(cmlResListOfcmlResInfoLinkWahouse paoWah)
        {
            StringBuilder oSql;
            cDatabase oDB;
            SqlTransaction oTranscation;
            List<cmlTLKMWaHouseTmp> aoWah;
            cDataReaderAdapter<cmlTLKMWaHouseTmp> oWah;

            try
            {
                oSql = new StringBuilder();
                oDB = new cDatabase();

                new cDatabase().C_PRCxCreateDatabaseTmp("TLKMWaHouse", "TLKMWaHouseTmp");
                
                oTranscation = cVB.oVB_ConnDB.BeginTransaction();

                // Bulk Copy : 
                aoWah = C_PRCaListInterfaceWahouse(paoWah.raItems);
                oWah = new cDataReaderAdapter<cmlTLKMWaHouseTmp>(aoWah);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oWah.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TLKMWaHouseTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oWah);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboInterfaceWahouse/TLKMWaHouseTmp : " + oEx.Message);
                        return false;
                    }
                }
                
                oTranscation.Commit();

                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine("DELETE WAH ");
                oSql.AppendLine("FROM TLKMWaHouse WAH WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TLKMWaHouseTmp WAHTmp WITH(NOLOCK) ON WAH.FTAgnCode = WAHTmp.FTAgnCode ");
                oSql.AppendLine("AND WAH.FTBchCode = WAHTmp.FTBchCode AND WAH.FTWahCode = WAHTmp.FTWahCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TLKMWaHouse");
                oSql.AppendLine("SELECT * FROM TLKMWaHouseTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                oDB.C_SETxDataQuery(oSql.ToString());
                return true;
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNboInterfaceWahouse : " + oEx.Message);
                return false;
            }
            finally
            {
                oSql = null;
                oDB = null;
                paoWah = null;
                oWah = null;
                aoWah = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        private List<cmlTLKMWaHouseTmp> C_PRCaListInterfaceWahouse(List<cmlResLinkWahouseInfo> paoWah)
        {
            List<cmlTLKMWaHouseTmp> aoData = new List<cmlTLKMWaHouseTmp>();

            try
            {
                aoData = paoWah.Select(oItem => new cmlTLKMWaHouseTmp()
                {
                    FTAgnCode = oItem.rtAgnCode,
                    FTBchCode = oItem.rtBchCode,
                    FTWahCode = oItem.rtWahCode,
                    FTWahRefNo = oItem.rtWahRefNo,
                    FTWahStaChannel = oItem.rtWahStaChannel,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListInterfaceWahouse : " + oEx.Message); }
            finally
            {
                paoWah = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        #endregion End Interface Wahouse (TLKMWahouse)

        #region System Discount Policy
        /// <summary>
        /// Dowload System Discount Policy
        /// </summary>
        /// <param name="poDisPolicy"></param>
        /// <returns></returns>
        public bool C_DWNboSysDisPolicy(cmlResItemOfcmlResDisPolicyDwn poDisPolicy)
        {
            StringBuilder oSql;
            cDatabase oDB;
            SqlTransaction oTranscation;
            List<cmlTSysDisPolicyTmp> aoDisPolicy;
            List<cmlTSysDisPolicyTmp_L> aoDisPolicyLng;
            List<cmlTPSTDiscPolicyTmp> aoTPSTDiscPolicy; //Arm 63-07-13
            cDataReaderAdapter<cmlTSysDisPolicyTmp> oDisPolicy;
            cDataReaderAdapter<cmlTSysDisPolicyTmp_L> oDisPolicyLng;
            cDataReaderAdapter<cmlTPSTDiscPolicyTmp> oTPSTDiscPolicy; //Arm 63-07-13

            try
            {
                oSql = new StringBuilder();
                oDB = new cDatabase();

                new cDatabase().C_PRCxCreateDatabaseTmp("TSysDisPolicy", "TSysDisPolicyTmp");
                new cDatabase().C_PRCxCreateDatabaseTmp("TSysDisPolicy_L", "TSysDisPolicyTmp_L");
                new cDatabase().C_PRCxCreateDatabaseTmp("TPSTDiscPolicy", "TPSTDiscPolicyTmp"); //Arm 63-07-13
                oTranscation = cVB.oVB_ConnDB.BeginTransaction();

                // Bulk Copy : 
                aoDisPolicy = C_PRCaListSysDisPolicy(poDisPolicy.roItem.raDisPolicy);
                oDisPolicy = new cDataReaderAdapter<cmlTSysDisPolicyTmp>(aoDisPolicy);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oDisPolicy.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysDisPolicyTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oDisPolicy);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboInterfaceWahouse/TSysDisPolicyTmp : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : 
                aoDisPolicyLng = C_PRCaListSysDisPolicyLng(poDisPolicy.roItem.raDisPolicyLng);
                oDisPolicyLng = new cDataReaderAdapter<cmlTSysDisPolicyTmp_L>(aoDisPolicyLng);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oDisPolicyLng.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TSysDisPolicyTmp_L";

                    try
                    {
                        oBulkCopy.WriteToServer(oDisPolicyLng);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboInterfaceWahouse/TSysDisPolicyTmp_L : " + oEx.Message);
                        return false;
                    }
                }

                // Bulk Copy : //Arm 63-07-13
                aoTPSTDiscPolicy = C_PRCaListTPSTDiscPolicy(poDisPolicy.roItem.raTPSTDiscPolicy);
                oTPSTDiscPolicy = new cDataReaderAdapter<cmlTPSTDiscPolicyTmp>(aoTPSTDiscPolicy);

                using (SqlBulkCopy oBulkCopy = new SqlBulkCopy(cVB.oVB_ConnDB, SqlBulkCopyOptions.Default, oTranscation))
                {
                    foreach (string tColName in oTPSTDiscPolicy.ColumnNames)
                    {
                        oBulkCopy.ColumnMappings.Add(tColName, tColName);
                    }
                    oBulkCopy.BatchSize = 100;
                    oBulkCopy.DestinationTableName = "dbo.TPSTDiscPolicyTmp";

                    try
                    {
                        oBulkCopy.WriteToServer(oTPSTDiscPolicy);
                    }
                    catch (Exception oEx)
                    {
                        oTranscation.Rollback();
                        new cLog().C_WRTxLog("cSyncData", "C_DWNboInterfaceWahouse/TPSTDiscPolicyTmp : " + oEx.Message);
                        return false;
                    }
                }

                oTranscation.Commit();

                oSql.Clear();
                oSql.AppendLine("BEGIN TRY");
                oSql.AppendLine("BEGIN TRANSACTION");
                oSql.AppendLine();
                oSql.AppendLine("DELETE DIS ");
                oSql.AppendLine("FROM TSysDisPolicy DIS WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysDisPolicyTmp DISTmp WITH(NOLOCK) ON DIS.FTDisCode = DISTmp.FTDisCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysDisPolicy");
                oSql.AppendLine("SELECT * FROM TSysDisPolicyTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("DELETE DISL ");
                oSql.AppendLine("FROM TSysDisPolicy_L DISL WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TSysDisPolicyTmp_L DISLTmp WITH(NOLOCK) ON DISL.FTDisCode = DISLTmp.FTDisCode ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TSysDisPolicy_L");
                oSql.AppendLine("SELECT * FROM TSysDisPolicyTmp_L WITH(NOLOCK) ");
                oSql.AppendLine();
                //*Arm 63-07-13
                oSql.AppendLine("DELETE  TDisc ");
                oSql.AppendLine("FROM TPSTDiscPolicy TDisc WITH(ROWLOCK)");
                oSql.AppendLine("INNER JOIN TPSTDiscPolicyTmp TDiscTmp WITH(NOLOCK) ON TDisc.FTDpcDisCodeX = TDiscTmp.FTDpcDisCodeX AND TDisc.FTDpcDisCodeY = TDiscTmp.FTDpcDisCodeY ");
                oSql.AppendLine();
                oSql.AppendLine("INSERT INTO TPSTDiscPolicy");
                oSql.AppendLine("SELECT * FROM TPSTDiscPolicyTmp WITH(NOLOCK) ");
                oSql.AppendLine();
                oSql.AppendLine("COMMIT TRANSACTION");
                oSql.AppendLine("END TRY");
                oSql.AppendLine("BEGIN CATCH");
                oSql.AppendLine("   IF(@@TRANCOUNT > 0)");
                oSql.AppendLine("       ROLLBACK TRAN;");
                oSql.AppendLine("   THROW;");
                oSql.AppendLine("END CATCH");

                oDB.C_SETxDataQuery(oSql.ToString());
                return true;
            }
            catch (Exception oEx)
            {
                new cLog().C_WRTxLog("cSyncData", "C_DWNboSysDisPolicy : " + oEx.Message);
                return false;
            }
            finally
            {
                oSql = null;
                oDB = null;
                poDisPolicy = null;
                oDisPolicy = null;
                oDisPolicyLng = null;
                aoDisPolicy = null;
                aoDisPolicyLng = null;
                //oC_SP.SP_CLExMemory();
            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="paoDisPolicy"></param>
        /// <returns></returns>
        private List<cmlTSysDisPolicyTmp> C_PRCaListSysDisPolicy(List<cmlResInfoDisPolicy> paoDisPolicy)
        {
            List<cmlTSysDisPolicyTmp> aoData = new List<cmlTSysDisPolicyTmp>();

            try
            {
                aoData = paoDisPolicy.Select(oItem => new cmlTSysDisPolicyTmp()
                {
                    FTDisCode = oItem.rtDisCode,
                    FTDisCodeRef = oItem.rtDisCodeRef,
                    FNDisLevel = oItem.rnDisLevel,
                    FTDisGroup = oItem.rtDisGroup,
                    FTDisPosFunc = oItem.rtDisPosFunc,
                    FTDisStaPrice = oItem.rtDisStaPrice,
                    FTDisStaUse = oItem.rtDisStaUse,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysDisPolicy : " + oEx.Message); }
            finally
            {
                paoDisPolicy = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="paoDisPolicyLng"></param>
        /// <returns></returns>
        private List<cmlTSysDisPolicyTmp_L> C_PRCaListSysDisPolicyLng(List<cmlResInfoDisPolicyLng> paoDisPolicyLng)
        {
            List<cmlTSysDisPolicyTmp_L> aoData = new List<cmlTSysDisPolicyTmp_L>();

            try
            {
                aoData = paoDisPolicyLng.Select(oItem => new cmlTSysDisPolicyTmp_L()
                {
                    FTDisCode = oItem.rtDisCode,
                    FNLngID = oItem.rnLngID,
                    FTDisName = oItem.rtDisName,
                    FTDisRemark = oItem.rtDisRemark

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListSysDisPolicyLng : " + oEx.Message); }
            finally
            {
                paoDisPolicyLng = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="paoTPSTDiscPolicy"></param>
        /// <returns></returns>
        private List<cmlTPSTDiscPolicyTmp> C_PRCaListTPSTDiscPolicy(List<cmlResInfoTPSTDiscPolicy> paoTPSTDiscPolicy)
        {
            List<cmlTPSTDiscPolicyTmp> aoData = new List<cmlTPSTDiscPolicyTmp>();

            try
            {
                aoData = paoTPSTDiscPolicy.Select(oItem => new cmlTPSTDiscPolicyTmp()
                {
                    FTDpcDisCodeX = oItem.rtDpcDisCodeX,
                    FTDpcDisCodeY = oItem.rtDpcDisCodeY,
                    FTDpcStaAlw = oItem.rtDpcStaAlw,
                    FDLastUpdOn = oItem.rdLastUpdOn,
                    FTLastUpdBy = oItem.rtLastUpdBy,
                    FDCreateOn = oItem.rdCreateOn,
                    FTCreateBy = oItem.rtCreateBy

                }).ToList();
            }
            catch (Exception oEx) { new cLog().C_WRTxLog("cSyncData", "C_PRCaListTPSTDiscPolicy : " + oEx.Message); }
            finally
            {
                paoTPSTDiscPolicy = null;
                //oC_SP.SP_CLExMemory();
            }

            return aoData;
        }
        #endregion End System Discount Policy


        #endregion End Function / Method
    }
}
