using ais_web2.Models;
using Jose;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.Linq;
using System.Net;
using System.Security.Principal;
using System.Threading;
using System.Web;
using System.Web.Mvc;
using System.Web.SessionState;
using System.Windows.Input;
using static System.Net.Mime.MediaTypeNames;

namespace ais_web2.Controllers
{
    public class FrmLoginController : Controller
    {
        [Obsolete]
        public ActionResult Index(string jwt = null)
        {
            if (HttpContext.Request.Cookies.AllKeys.Length > 0)
            {
                HttpContext.Response.Cookies.Clear();
            }
            DateTime datet = DateTime.Parse(DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss"), new CultureInfo("en-US"));
            string StrSql = string.Empty;
            if (jwt == null)
            {
                CultureInfo cultureInfo = new CultureInfo("en-US");
                Thread.CurrentThread.CurrentCulture = cultureInfo;
                return View();
            }
            List<string> userjson = Module1.Instance.GetFromToken(jwt);
            if (datet <= Convert.ToDateTime(userjson[2].ToString()))
            {
                WriteLog.instance.Log(" login by user " + WindowsIdentity.DefaultIssuer);
                StrSql = "SELECT * FROM PREDIC_AGENTS";
                StrSql += " WHERE (LOGIN ='" + userjson[0] + "')";
                DataSet ds1 = new DataSet();
                ds1 = Module1.Instance.CommandSet(StrSql, "Login_agent");
                if (ds1.Tables["Login_agent"].Rows.Count != 0)
                {
                    return RedirectToAction("Index", "FrmDetail");
                }
                else
                {
                    return null;
                }
            }
            return null;
        }
        private string StrSql = string.Empty;
        private string myHost = Dns.GetHostName();
        private IPHostEntry myIPs;
        private string result;

        [Obsolete]
        public FrmLoginController()
        {
            myIPs = System.Net.Dns.GetHostByName(myHost);
        }
        [HttpPost]
        public string Select_database(local_var local_Vars)
        {
            string status = string.Empty;
            List<string> status_list = new List<string>();
            if (local_Vars.Chk_DB_Backup == true & local_Vars.Cbo_Database == "Production")
            {
                status = "หากต้องการเลือกใช้ Database สำรอง กรุณาเลือก Database เป็น Backup";
            }
            else if (local_Vars.Chk_DB_Backup == true & local_Vars.Cbo_Database == "Backup")
            {
            }

            if (local_Vars.Cbo_Database == "Production")
            {
                Module1.strDB = "Production";
                status = "GOV_AIS(4800) - Database Production";
            }
            else if (local_Vars.Cbo_Database == "Backup")
            {
                Module1.strDB = "Backup";
                status = "GOV_AIS(4800) - Database Backup";
            }
            else
            {
                Module1.strDB = "Production";
                status = "GOV_AIS(4800) - Database Production";
            }
            status_list.Add(status);
            status_list.Add(Module1.strDB);
            return JsonConvert.SerializeObject(status_list);
        }
        [Obsolete]
        [HttpPost]
        public string btnLogin_Click(string txtUsername, string txtPassword)
        {
            if (txtUsername == "")
            {
                return "2";
            }
            else if (txtPassword == "")
            {
                return "3";
            }
            else
            {
                result = LogIn(txtUsername, txtPassword);
                if (result  == "1")
                {
                    var username = new Dictionary<string, object>()
{
    { "sub", txtUsername },
    { "exp", DateTime.Now.AddHours(5).ToString("dd/MM/yyyy HH:mm:ss" , new CultureInfo("en-US")) }
};
                    var password = new Dictionary<string, object>()
{
    { "subpass", txtPassword},
    { "exp",  DateTime.Now.AddHours(5).ToString("dd/MM/yyyy HH:mm:ss" , new CultureInfo("en-US")) }
};
                    string tokenuser = JWT.Encode(username, null, JwsAlgorithm.none);
                    string tokempass = JWT.Encode(password, null, JwsAlgorithm.none);
                    return tokenuser + ";" + tokempass;
                }
                return result;
            }
        }
        [Obsolete]
        [HttpPost]
        public string LogIn(string txtUsername, string txtPassword)
        {
            try
            {
                WriteLog.instance.Log("Login begin");
                StrSql = "";
                int i = 0;
                WriteLog.instance.Log(" int i = 0;");
                StrSql = "SELECT * FROM PREDIC_AGENTS";
                StrSql += " WHERE (LOGIN ='" + txtUsername + "')";
                StrSql += " and (PASSWORD='" + txtPassword + "')";
                DataSet ds = Module1.Instance.CommandSet(StrSql, "Login_agent");

                WriteLog.instance.Log("   Module1.Instance.Connect.Close();");
                if (ds.Tables["Login_agent"].Rows.Count != 0)
                {
                    WriteLog.instance.Log("  if (Module1.Instance.ds.Tables[\"Login_agent\"].Rows.Count != 0)");

                    Module1.Agent_Id = ds.Tables["Login_agent"].Rows[0]["Agent_Id"].ToString();
                    Module1.EXTENSION = ds.Tables["Login_agent"].Rows[0]["EXTENSION"].ToString();
                    Module1.Instance.Group_Id = Convert.ToInt32(ds.Tables["Login_agent"].Rows[0]["Group_Id"]);
                    Module1.Instance.agent = ds.Tables["Login_agent"].Rows[i]["FIRST_NAME"].ToString();
                    Module1.Agent_Id = ds.Tables["Login_agent"].Rows[i]["AGENT_ID"].ToString();
                    Module1.Instance.strUsername = ds.Tables["Login_agent"].Rows[i]["LOGIN"].ToString();
                    Module1.Instance.strPassword = ds.Tables["Login_agent"].Rows[i]["PASSWORD"].ToString();
                    WriteLog.instance.Log("   Module1.Instance.strPassword = Module1.Instance.ds.Tables[\"Login_agent\"].Rows[i][\"PASSWORD\"].ToString();");
                    HttpContext.Response.Cookies["Agen"].Value = Module1.Agent_Id;
                    HttpContext.Response.Cookies["EXTENSION"].Value = Module1.EXTENSION;
                    WriteLog.instance.Log(" AgenID " + Module1.Agent_Id.ToString());
                    foreach (IPAddress myIP in myIPs.AddressList)
                    {
                        WriteLog.instance.Log($"  foreach (IPAddress myIP in myIPs.AddressList)");
                        Module1.Agent_Ip = myIP.ToString();
                        WriteLog.instance.Log($"          Module1.Instance. Agent_Ip = myIP.ToString();");
                    }
                    WriteLog.instance.Log($" ; ");
                    UpdateCNFG_Agent_Info();
                    WriteLog.instance.Log($"       UpdateCNFG_Agent_Info();");
                    return "1";
                }
                else
                {
                    return "04";
                }
           
            }
            catch(Exception ex)
            {
                return "05";
            }
        }
        [Obsolete]
        private string UpdateCNFG_Agent_Info()
        {
            string strUpdate;
            strUpdate = "";
            strUpdate = "UPDATE CNFG_AGENT_INFO  ";
            strUpdate += " SET  TERMINAL_IP   ='" + Module1.Agent_Ip + "' ,";
            strUpdate += " STATUS_ID = 5 ,";
            strUpdate += "CALL_COUNT = 0,";
            strUpdate += " LOGIN_TIME   = sysdate ";
            strUpdate += " WHERE AGENT_ID = '" + Module1.Agent_Id + "'";
            try
            {
                {
                    Module1.Instance.CommanEx(strUpdate);
                    return "200";
                }
            }
            catch (Exception ex)
            {
                return "ระบบมีปัญหา กรุณาติดต่อ Admin ค่ะ" + ex.Message + "ผลการตรวจสอบ";
            }
        }
    }
}